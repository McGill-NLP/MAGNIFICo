Question	Predicted Parse	Gold Parse	Result
flight_1: show the id and name of the aircraft with the maximum distance. | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT aid, name FROM aircraft WHERE distance = (SELECT MAX(distance) FROM aircraft)	select aid , name from aircraft order by distance desc limit 1	1
chinook_1: what are the durations of the maximum and the shortest tracks in milliseconds? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT max(milliseconds) FROM track	select max(milliseconds) , min(milliseconds) from track	0
soccer_2: what are the names of all tryout participants who are from the maximum college? | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT cName FROM Tryout WHERE cName = 'Max College'	select t2.pname from tryout as t1 join player as t2 on t1.pid = t2.pid where t1.cname = (select cname from college order by enr desc limit 1)	0
college_1: find the name and address of the department that has the maximum number of students. | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DISTINCT DEPT_NAME, DEPT_ADDRESS FROM DEPARTMENT	select t2.dept_name , t2.dept_address from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count(*) desc limit 1	0
small_bank_1: what are names and savings balances of the three accounts with the maximum savings balances? | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT name, balance FROM accounts WHERE balance > (SELECT MAX(balance) FROM accounts)	select t1.name , t2.balance from accounts as t1 join savings as t2 on t1.custid = t2.custid order by t2.balance desc limit 3	0
voter_2: find the major that is studied by the maximum number of students. | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT MAX(Major) FROM Student	select major from student group by major order by count(*) desc limit 1	1
dorm_1: what is the first and last name of the students who are not in the maximum major? | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT * FROM Student WHERE Major <> Major_max	select fname , lname from student where major != (select major from student group by major order by count(*) desc limit 1)	0
college_2: find the maximum and average capacity among rooms in each building. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT building, room_number, capacity, MAX(capacity) OVER (PARTITION BY building ORDER BY capacity DESC) AS max_capacity, AVG(capacity) OVER (PARTITION BY building ORDER BY capacity DESC) AS avg_capacity FROM classroom GROUP BY building, room_number	select max(capacity) , avg(capacity) , building from classroom group by building	0
small_bank_1: find the saving balance of the account with the maximum checking balance. | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT balance FROM savings WHERE balance > (SELECT balance FROM checking)	select t3.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t2.balance desc limit 1	0
wine_1: which winery is the wine that has the maximum score from? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT MAX(Score) FROM wine	select winery from wine order by score limit 1	0
manufactory_1: what are the names, headquarters and founders of the company with the maximum revenue? | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Name, Headquarter, Founder FROM Manufacturers WHERE Revenue = MAX(Revenue)	select name , headquarter , founder from manufacturers order by revenue desc limit 1	0
inn_1: find the most popular room in the hotel. the most popular room is the room that had seen the maximum number of reservations. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT roomName, COUNT(*) FROM Reservations GROUP BY roomName ORDER BY COUNT(*) DESC LIMIT 1	select t2.roomname from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by count(*) desc limit 1;	0
wine_1: give the color of the grape whose wine products have the maximum average price? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Color FROM grapes WHERE AVG(price) = MAX(price)	select t1.color from grapes as t1 join wine as t2 on t1.grape = t2.grape group by t2.grape order by avg(price) desc limit 1	0
customers_and_addresses: return the channel code and contact number of the customer contact channel whose active duration was the maximum. | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT channel_code, contact_number FROM Customer_Contact_Channels WHERE active_from_date = '2015-01-01' AND active_to_date = '2015-01-31'	select channel_code , contact_number from customer_contact_channels where active_to_date - active_from_date = (select active_to_date - active_from_date from customer_contact_channels order by (active_to_date - active_from_date) desc limit 1)	0
college_2: find the number and averaged salary of all instructors who are in the department with the maximum budget. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT count(*) AS num_instructors, AVG(salary) AS avg_salary FROM instructor WHERE dept_name = 'Computer Science' GROUP BY dept_name ORDER BY avg_salary DESC	select avg(t1.salary) , count(*) from instructor as t1 join department as t2 on t1.dept_name = t2.dept_name order by t2.budget desc limit 1	0
department_store: what are the ids of the two department store chains with the maximum number of department stores? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT max(dept_store_chain_id) FROM Department_Store_Chain	select dept_store_chain_id from department_stores group by dept_store_chain_id order by count(*) desc limit 2	0
inn_1: list how many times the number of people in the room reached the maximum occupancy of the room. the number of people include adults and kids. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT count(*) FROM Reservations WHERE maxOccupancy > Reservations.maxOccupancy	select count(*) from reservations as t1 join rooms as t2 on t1.room = t2.roomid where t2.maxoccupancy = t1.adults + t1.kids;	0
small_bank_1: find the name and savings balance of the 3 accounts with the maximum saving balance sorted by savings balance in descending order. | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT name, balance FROM accounts WHERE balance > (SELECT MAX(balance) FROM accounts) ORDER BY balance DESC	select t1.name , t2.balance from accounts as t1 join savings as t2 on t1.custid = t2.custid order by t2.balance desc limit 3	0
music_1: find the id of the song that lasts the maximum. | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution	SELECT max(duration) FROM song	select f_id from files order by duration desc limit 1	0
flight_1: what is the id and name of the aircraft that can cover the maximum distance? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT aid FROM aircraft WHERE distance = MAX(distance)	select aid , name from aircraft order by distance desc limit 1	0
college_3: give the building that the instructor who teaches the maximum number of courses lives in. | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint	SELECT building FROM Faculty WHERE COUNT(*)>0	select t2.building from course as t1 join faculty as t2 on t1.instructor = t2.facid group by t1.instructor order by count(*) desc limit 1	0
small_bank_1: what are the customer id and name corresponding to accounts with a checking balance less than the maximum checking balance? | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT custid, name FROM accounts WHERE balance < (SELECT max(balance) FROM accounts)	select t1.custid , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid where t2.balance < (select max(balance) from checking)	0
inn_1: find the name of the room with the maximum occupancy. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT roomName FROM Rooms WHERE maxOccupancy = MAX(beds)	select roomname from rooms order by maxoccupancy desc limit 1;	0
small_bank_1: what is the savings balance of the account belonging to the customer with the maximum checking balance? | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT balance FROM savings WHERE custid = (SELECT max(custid) FROM checking)	select t3.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t2.balance desc limit 1	0
music_1: find the 3 artists who have the maximum number of songs works whose language is bangla. | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution	SELECT artist_name FROM artist WHERE language='bangla' AND count(*)>2	"select t1.artist_name from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.languages = ""bangla"" group by t2.artist_name order by count(*) desc limit 3"	0
bike_1: for each city, list their names in decreasing order by their maximum station latitude. | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT name FROM station ORDER BY max(lat) DESC	select city from station group by city order by max(lat) desc	0
flight_1: show the id and name of the employee with maximum salary. | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT eid, name FROM employee WHERE salary = (SELECT MAX(salary) FROM employee)	select eid , name from employee order by salary desc limit 1	1
college_2: which department has the maximum average instructor salary? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name, AVG(salary) FROM instructor GROUP BY dept_name	select dept_name from instructor group by dept_name order by avg(salary) desc limit 1	0
movie_1: what are the movie titles with the maximum average rating and what are those ratings? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title, avg(rating) FROM Rating GROUP BY title ORDER BY avg(rating) DESC	select t2.title , avg(t1.stars) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.mid order by avg(t1.stars) desc limit 1	0
department_store: give the ids of the three products purchased in the maximum amounts. | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT product_id FROM Products WHERE product_name LIKE '%Max%'	select product_id from product_suppliers order by total_amount_purchased desc limit 3	0
loan_1: which state has the maximum total number of bank customers? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT state FROM customer	select state from bank group by state order by sum(no_of_customers) desc limit 1	0
manufactory_1: find the name, headquarter and founder of the manufacturer that has the maximum revenue. | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Name, Headquarter, Founder FROM Manufacturers WHERE Revenue = MAX(Revenue)	select name , headquarter , founder from manufacturers order by revenue desc limit 1	0
movie_1: what are the names and years of the movies that have the 3 maximum rating star? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title, year FROM Movie WHERE stars = 3	select t2.title , t2.year from rating as t1 join movie as t2 on t1.mid = t2.mid order by t1.stars desc limit 3	0
inn_1: which room has the maximum number of reservations? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT max(reservations) FROM Reservations	select t2.roomname from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by count(*) desc limit 1;	0
flight_4: find the name, city, and country of the airport that has the maximum latitude. | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT airport.name, airport.city, airport.country FROM airports, airports AS airport_1, airports AS airport_2, airports AS airport_3, airports AS airport_4, airports AS airport_5, airports AS airport_6, airports AS airport_7, airports AS airport_8, airports AS airport_9, airports AS airport_10, airports AS airport_11, airports AS airport_12, airports AS airport_13, airports AS airport_14, airports AS airport_15, airports AS airport_16, airports AS airport_17, airports AS airport_18, airports AS airport_19, airports AS airport_20, airports AS airport_21, airports AS airport_22, airports AS airport_23, airports AS airport_24, airports AS airport_25, airports AS airport_26, airports AS airport_27, airports AS airport_28, airports AS airport_29, airports AS airport_30, airports AS airport_31,	select name , city , country from airports order by elevation desc limit 1	0
college_2: what is the name of the student who has the maximum total credits in the History department. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM student WHERE credits = (SELECT MAX(credits) FROM student WHERE dept_name = 'History')	select name from student where dept_name = 'History' order by tot_cred desc limit 1	0
allergy_1: what is the maximum major? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT max(Major) FROM Student	select major from student group by major order by count(*) desc limit 1	1
hr_1: display the department id, full name (first and last name), salary for those employees who have maximum salary in every department. | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT dept.department_id, dept.department_name, max(emp.salary) FROM departments dept, employees emp WHERE dept.department_id = emp.department_id GROUP BY dept.department_id, dept.department_name	select first_name , last_name , salary , department_id , max(salary) from employees group by department_id	0
flight_4: which country is the airport that has the maximum altitude located in? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT airport.name, country FROM airports, airports AS airport_country WHERE airport.apid = airport_country.apid AND airport_country.elevation > (SELECT MAX(elevation) FROM airports)	select country from airports order by elevation desc limit 1	0
chinook_1: what is the name of the artist with the maximum number of albums? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT max(artist.name) FROM artist	select t2.name from album as t1 join artist as t2 on t1.artistid = t2.artistid group by t2.name order by count(*) desc limit 1	0
flight_1: what is the id and name of the employee with the maximum salary? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT MAX(salary) FROM employee	select eid , name from employee order by salary desc limit 1	0
tracking_grants_for_research: what is the id of the organization with the maximum number of outcomes and how many outcomes are there? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT max(`outcome_id`) FROM `Research_Outcomes`	select t1.organisation_id , count(*) from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id group by t1.organisation_id order by count(*) desc limit 1	0
inn_1: what are the name and id of the three maximum priced rooms? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT max(basePrice) FROM Rooms	select roomid , roomname from rooms order by baseprice desc limit 3;	0
college_1: what is the first name, gpa and phone number of the 5 students with maximum gpa? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT STU_LNAME, STU_FNAME, STU_GPA, STU_PHONE FROM STUDENT WHERE STU_GPA = (SELECT MAX(STU_GPA) FROM STUDENT)	select stu_gpa , stu_phone , stu_fname from student order by stu_gpa desc limit 5	0
dorm_1: find the first and last name of students who are not in the maximum major. | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT firstname, lastname FROM student WHERE major <> max_major	select fname , lname from student where major != (select major from student group by major order by count(*) desc limit 1)	0
bike_1: which trip started from the station with the maximum dock count? give me the trip id. | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT trip.id FROM trip, status WHERE trip.start_station_name = status.station_name AND trip.start_station_id = status.station_id AND status.docks_available > (SELECT MAX(docks_available) FROM status) ORDER BY trip.id	select t1.id from trip as t1 join station as t2 on t1.start_station_id = t2.id order by t2.dock_count desc limit 1	0
music_1: what are the 3 artists with the maximum number of songs in the language bangla? | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution	SELECT artist_name, count(*) FROM artist, song WHERE artist.artist_name = song.artist_name AND language = 'bangla' GROUP BY artist_name ORDER BY count(*) DESC	"select t1.artist_name from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.languages = ""bangla"" group by t2.artist_name order by count(*) desc limit 3"	0
college_1: what are the different first names and maximum degree attained for professors teaching in the Computer Information Systems department? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DISTINCT PROF_FNAME, PROF_MAX_DEGREE FROM PROFESSOR WHERE DEPT_CODE = 'CS'	select distinct t2.emp_fname , t3.prof_high_degree from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join professor as t3 on t2.emp_num = t3.emp_num join department as t4 on t4.dept_code = t3.dept_code where t4.dept_name = 'Computer Info. Systems'	0
movie_1: what is the maximum stars and year for the most recent movie? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT max(stars) FROM Rating WHERE mID = 1	select max(t1.stars) , t2.year from rating as t1 join movie as t2 on t1.mid = t2.mid where t2.year = (select max(year) from movie)	0
cre_doc_tracking_db: find the code of the location with the maximum number of documents. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details	SELECT MAX(Location_Code) FROM Ref_Locations	select location_code from document_locations group by location_code order by count(*) desc limit 1	1
dorm_1: what are the names of the dorm with the maximum capacity? | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT dorm_name FROM Dorm WHERE dorm_capacity = (SELECT MAX(dorm_capacity) FROM Dorm)	select dorm_name from dorm order by student_capacity desc limit 1	0
voter_2: what are the maximum and minimum age of students with major 600? | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT MAX(Age) FROM Student WHERE Major = 600	select max(age) , min(age) from student where major = 600	0
chinook_1: find the maximum and minimum durations of tracks in milliseconds. | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT max(milliseconds) FROM track	select max(milliseconds) , min(milliseconds) from track	0
bike_1: what are all the different zip codes that have an maximum dew point that was always below 70? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT zip_code FROM weather WHERE max_dew_point_f < 70	select distinct zip_code from weather except select distinct zip_code from weather where max_dew_point_f >= 70	0
apartment_rentals: which apartment type has the maximum number of total rooms? return the apartment type code, its number of bathrooms and number of bedrooms. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	"SELECT apt_type_code, sum(bathroom_count) AS ""bathrooms"", sum(bedroom_count) AS ""bedrooms"" FROM apartments GROUP BY apt_type_code ORDER BY sum(bathroom_count) DESC, sum(bedroom_count) DESC"	select apt_type_code , bathroom_count , bedroom_count from apartments group by apt_type_code order by sum(room_count) desc limit 1	0
sports_competition: what are the maximum and minimum number of silver medals for all the clubs? | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT MIN(`Club_ID`), MAX(`Club_ID`) FROM `club`	select max(silver) , min(silver) from club_rank	0
college_2: give the name of the maximum paid instructor. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT max(salary) FROM instructor	select name from instructor order by salary desc limit 1	0
wine_1: what are the maximum price and score of wines in each year? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT MAX(price) AS MaxPrice, MAX(score) AS MaxScore FROM wine	select max(price) , max(score) , year from wine group by year	0
election: which party has the maximum number of delegates? | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT Party, Count(*) FROM election GROUP BY Party ORDER BY Count(*) DESC LIMIT 1	select t2.party from election as t1 join party as t2 on t1.party = t2.party_id group by t1.party order by count(*) desc limit 1	0
college_2: what is the name of the deparment with the maximum enrollment? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name FROM department WHERE max(enrollment) = max(enrollment)	select dept_name from student group by dept_name order by count(*) desc limit 1	0
manufactory_1: what are the average, maximum and total revenues of all companies? | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT AVG(Revenue), MAX(Revenue), SUM(Revenue) FROM Products	select avg(revenue) , max(revenue) , sum(revenue) from manufacturers	0
college_2: who is the instructor with the maximum salary? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT max(salary) FROM instructor	select name from instructor order by salary desc limit 1	0
sports_competition: what are the maximum and minimum number of silver medals for clubs. | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT MAX(`Silver`) FROM `club_rank` SELECT MIN(`Silver`) FROM `club_rank`	select max(silver) , min(silver) from club_rank	0
college_1: what is the name of department that has the maximum number of professors with a Ph.D. degree? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT dept_name FROM department WHERE dept_high_degree = 'Ph.D.'	select t2.dept_name , t1.dept_code from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where t1.prof_high_degree = 'Ph.D.' group by t1.dept_code order by count(*) desc limit 1	0
store_1: what are the first and last names of the 10 maximum-serving employees? | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT max(first_name) AS first_name, max(last_name) AS last_name FROM employees GROUP BY first_name, last_name ORDER BY first_name, last_name LIMIT 10	select first_name , last_name from employees order by hire_date asc limit 10;	0
cre_doc_tracking_db: what is the role code with the maximum number of employees? | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details	SELECT MAX(Role_Code) FROM Roles	select role_code from employees group by role_code order by count(*) desc limit 1	0
loan_1: find the name, account type, and account balance of the customer who has the maximum credit score. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT cust_name, acc_type, acc_bal FROM customer WHERE credit_score = (SELECT MAX(credit_score) FROM customer)	select cust_name , acc_type , acc_bal from customer order by credit_score desc limit 1	1
college_1: find the name of the department that offers the maximum number of credits of all classes. | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT dept_name FROM department WHERE COUNT(*) = (SELECT MAX(crs_credit) FROM course)	select t3.dept_name from course as t1 join class as t2 on t1.crs_code = t2.crs_code join department as t3 on t1.dept_code = t3.dept_code group by t1.dept_code order by sum(t1.crs_credit) desc limit 1	0
bike_1: what is the total and maximum duration of trips with bike id 636? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT SUM(duration) FROM trip WHERE bike_id = 636 SELECT MAX(duration) FROM trip WHERE bike_id = 636	select sum(duration) , max(duration) from trip where bike_id = 636	0
movie_1: what are the names and years released for the movies with the 3 maximum ratings? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title, year FROM Movie WHERE stars = 3	select t2.title , t2.year from rating as t1 join movie as t2 on t1.mid = t2.mid order by t1.stars desc limit 3	0
college_2: what are the maximum and average capacity for rooms in each building? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT building, AVG(capacity) FROM classroom GROUP BY building	select max(capacity) , avg(capacity) , building from classroom group by building	0
wine_1: what are the maximum price and score of wines produced by st. helena appelation? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT MAX(price) FROM wine WHERE appelation = 'st. helena'	"select max(price) , max(score) from wine where appelation = ""st. helena"""	1
activity_1: find the building that has the maximum number of faculty members. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT building FROM Faculty_Participates_in WHERE actid = 1	select building from faculty group by building order by count(*) desc limit 1	0
inn_1: which room has the maximum base price? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT max(basePrice) FROM Rooms	select roomid , roomname from rooms order by baseprice desc limit 1;	0
manufactory_1: find all manufacturers' names and their headquarters, sorted by the ones with maximum revenue first. | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Name, Headquarter FROM Manufacturers ORDER BY Revenue DESC	select name , headquarter from manufacturers order by revenue desc	1
college_2: find the name and building of the department with the maximum budget. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name, building FROM department	select dept_name , building from department order by budget desc limit 1	0
wine_1: find the 3 wineries with the maximum number of wines made of White color grapes. | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT name FROM winery WHERE color = 'White' ORDER BY cases DESC LIMIT 3	"select t2.winery from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = ""White"" group by t2.winery order by count(*) desc limit 3"	0
college_2: what are the distinct salaries of all instructors who earned less than the maximum salary? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT distinct salary FROM instructor WHERE salary < 29000	select distinct salary from instructor where salary < (select max(salary) from instructor)	0
allergy_1: show the minimum, average, and maximum age of all students. | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT MIN(Age), AVG(Age), MAX(Age) FROM Student	select min(age) , avg(age) , max(age) from student	1
"club_1: find the club which has the maximum number of members majoring in ""600"". | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position"	SELECT * FROM Club, Member_of_club WHERE Club.ClubName = 'Computer Science' AND Member_of_club.Major = '600'	"select t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.major = ""600"" group by t1.clubname order by count(*) desc limit 1"	0
loan_1: what is the name, account type, and account balance corresponding to the customer with the maximum credit score? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT max(cust_name) as name, max(acc_type) as account_type, max(acc_bal) as balance FROM customer WHERE credit_score = (SELECT max(credit_score) FROM customer)	select cust_name , acc_type , acc_bal from customer order by credit_score desc limit 1	1
apartment_rentals: return the apartment number with the maximum number of bedrooms. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT MAX(bedroom_count) FROM Apartments	select apt_number from apartments order by bedroom_count desc limit 1	0
bike_1: what are the ids of the trips that lasted the maximum and how long did they last? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT max(duration) FROM trip SELECT id FROM trip WHERE duration = max(duration)	select id , duration from trip order by duration desc limit 3	0
flight_4: what is the maximum elevation of an airport in the country of iceland? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT MAX(elevation) FROM airports WHERE country='Iceland'	select max(elevation) from airports where country = 'iceland'	0
soccer_2: find the states which have the colleges whose enrollments are less than the maximum size. | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT state FROM College WHERE enr < (SELECT MAX(enr) FROM College)	select distinct state from college where enr < (select max(enr) from college)	1
bike_1: what is the id of the trip that started from the station with the maximum dock count? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT max(trip.id) FROM trip, station WHERE station.dock_count = trip.station_id	select t1.id from trip as t1 join station as t2 on t1.start_station_id = t2.id order by t2.dock_count desc limit 1	0
customers_card_transactions: what is the transaction type that has processed the maximum total amount in transactions? | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details	SELECT max(transaction_type) FROM Financial_Transactions	select transaction_type from financial_transactions group by transaction_type order by sum(transaction_amount) desc limit 1	1
hr_1: display job title, the difference between minimum and maximum salaries for those jobs which have max salary within the range 12000 to 18000. | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT job_title, MAX(salary) - MIN(salary) FROM jobs WHERE salary BETWEEN 12000 AND 18000	select job_title , max_salary - min_salary from jobs where max_salary between 12000 and 18000	0
bike_1: for each zip code, how many times has the maximum wind speed reached 25 mph? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT zip_code, COUNT(*) FROM weather WHERE max_wind_speed_mph >= 25 GROUP BY zip_code ORDER BY zip_code	select zip_code , count(*) from weather where max_wind_speed_mph >= 25 group by zip_code	1
chinook_1: what are the duration of the maximum and shortest pop tracks in milliseconds? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT max(duration) FROM track	"select max(milliseconds) , min(milliseconds) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = ""pop"""	0
tracking_grants_for_research: list the organisation id with the maximum outcome count, and the count. | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT max(organisation_id) as organisation_id, count(*) as count FROM research_outcomes GROUP BY organisation_id ORDER BY count(*) DESC	select t1.organisation_id , count(*) from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id group by t1.organisation_id order by count(*) desc limit 1	0
network_2: what is the age of the friend of Zach with maximum year relationship? | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT max(year) FROM PersonFriend WHERE name = 'Zach' AND friend = 'John'	select t1.age from person as t1 join personfriend as t2 on t1.name = t2.friend where t2.name = 'Zach' and t2.year = (select max(year) from personfriend where name = 'Zach')	0
college_1: what is the name and the average gpa of department whose students have the maximum average gpa? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME, AVG(STU_GPA) FROM STUDENT GROUP BY DEPT_NAME	select t2.dept_name , avg(t1.stu_gpa) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by avg(t1.stu_gpa) desc limit 1	0
network_2: who is the friend of Zach with maximum year relationship? | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT name FROM PersonFriend WHERE year = max(year)	select friend from personfriend where name = 'Zach' and year = (select max(year) from personfriend where name = 'Zach')	0
bike_1: what are the dates that have the 5 maximum cloud cover rates and what are the rates? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT max(cloud_cover) FROM weather	select date , cloud_cover from weather order by cloud_cover desc limit 5	0
customers_and_invoices: what is the invoice number and invoice date corresponding to the invoice with the maximum number of transactions? | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT max(invoice_number) as max_invoice_number, max(invoice_date) as max_invoice_date FROM invoices	select t2.invoice_number , t2.invoice_date from financial_transactions as t1 join invoices as t2 on t1.invoice_number = t2.invoice_number group by t1.invoice_number order by count(*) desc limit 1	0
college_1: what is the name of the department that has the maximum number of students enrolled? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME FROM DEPARTMENT WHERE COUNT(STU_NUM) = MAX(COUNT(STU_NUM))	select t4.dept_name from class as t1 join enroll as t2 on t1.class_code = t2.class_code join course as t3 on t1.crs_code = t3.crs_code join department as t4 on t3.dept_code = t4.dept_code group by t3.dept_code order by count(*) desc limit 1	0
network_2: find the name, age, and job title of persons who are friends with Alice for the maximum years. | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT name, age, job FROM PersonFriend WHERE friend = 'Alice' AND year = max(year)	select t1.name , t1.age , t1.job from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'Alice' and t2.year = (select max(year) from personfriend where friend = 'Alice')	0
manufactory_1: find the name and revenue of the company that earns the maximum revenue in each city. | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Name, Revenue FROM Products WHERE City = 'London'	select name , max(revenue) , headquarter from manufacturers group by headquarter	0
bike_1: what are the dates with the maximum temperature higher than 85? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT max(temperature) FROM weather WHERE temperature > 85	select date from weather where max_temperature_f > 85	0
flight_4: what is the name, city, and country of the airport with the maximum elevation? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT airport.apid, airport.name, airport.city, airport.country, airport.elevation SELECT airport.apid, airport.name, airport.city, airport.country, airport.elevation SELECT airport.apid, airport.name, airport.city, airport.country, airport.elevation SELECT airport.apid, airport.name, airport.city, airport.country, airport.elevation SELECT airport.apid, airport.name, airport.city, airport.country, airport.elevation	select name , city , country from airports order by elevation desc limit 1	0
department_store: return the average total amount purchased and total value purchased for the supplier who supplies the maximum number of products. | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT AVG(total_amount_purchased) FROM Product_Suppliers WHERE supplier_id = (SELECT MAX(supplier_id) FROM Product_Suppliers)	select avg(total_amount_purchased) , avg(total_value_purchased) from product_suppliers where supplier_id = (select supplier_id from product_suppliers group by supplier_id order by count(*) desc limit 1)	0
formula_1: what is the id and family name of the driver who has the maximum laptime? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	SELECT max(driver.laps) FROM driver	select t1.driverid , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid order by t2.milliseconds desc limit 1	0
music_1: what is the id of the maximum song? | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution	SELECT MAX(song_id) FROM song	select f_id from files order by duration desc limit 1	0
small_bank_1: find the name and id of accounts whose checking balance is below the maximum checking balance. | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT name, custid FROM accounts WHERE balance < (SELECT MAX(balance) FROM accounts)	select t1.custid , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid where t2.balance < (select max(balance) from checking)	0
college_2: what are the names of students and their respective departments, ordered by number of credits from least to maximum? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name, dept_name FROM student ORDER BY credits DESC	select name , dept_name from student order by tot_cred	0
manufactory_1: return the average, maximum, and total revenues across all manufacturers. | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT AVG(Revenue), MAX(Revenue), SUM(Revenue) FROM Products	select avg(revenue) , max(revenue) , sum(revenue) from manufacturers	0
customers_card_transactions: return the type of transaction with the maximum total amount. | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details	SELECT max(transaction_amount) FROM Financial_Transactions	select transaction_type from financial_transactions group by transaction_type order by sum(transaction_amount) desc limit 1	0
college_2: find the name of the department that offers the maximum total credits? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name FROM department WHERE credits > (SELECT MAX(credits) FROM department) SELECT dept_name FROM department WHERE credits > (SELECT MAX(credits) FROM department) SELECT dept_name FROM department WHERE credits > (SELECT MAX(credits) FROM department) SELECT dept_name FROM department WHERE credits > (SELECT MAX(credits) FROM department) SELECT dept_name FROM department WHERE credits > (SELECT MAX(credits) FROM department) SELECT dept_name FROM department WHERE credits > (SELECT MAX(credits) FROM department) SELECT dept_name FROM department WHERE credits > (SELECT MAX(credits) FROM department) SELECT dept_name FROM department WHERE credits > (SELECT MAX(credits) FROM department) SELECT dept_name FROM department WHERE credits > (SELECT MAX(credits) FROM department) SELECT dept	select dept_name from course group by dept_name order by sum(credits) desc limit 1	0
loan_1: what is the name of the bank branch that has lended the maximum total amount in loans, specifically to customers with credit scores below 100? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT max(amount) FROM loan WHERE credit_score < 100 AND branch_ID = 'BANK_BRANCH_ID'	select t2.bname from loan as t1 join bank as t2 on t1.branch_id = t2.branch_id join customer as t3 on t1.cust_id = t3.cust_id where t3.credit_score < 100 group by t2.bname order by sum(t1.amount) desc limit 1	0
soccer_2: what are the names of schools with the 3 maximum size? | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT cName FROM College WHERE enr = 3	select cname from college order by enr desc limit 3	0
soccer_2: what are the names of the schools with the 3 maximum class sizes? | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT max(cName) FROM College	select cname from college order by enr desc limit 3	0
store_1: what are the 10 customers' first and last names with the maximum gross sales, and also what are the sales? | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT max(c.first_name) as first_name, max(c.last_name) as last_name, sum(s.amount_sold) as gross_sales FROM customers c JOIN sales s ON c.id = s.customer_id GROUP BY c.id, c.first_name, c.last_name ORDER BY gross_sales DESC	select t1.first_name , t1.last_name , sum(t2.total) from customers as t1 join invoices as t2 on t2.customer_id = t1.id group by t1.id order by sum(t2.total) desc limit 10;	0
allergy_1: what is the minimum, mean, and maximum age across all students? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT MIN(Age), AVG(Age), MAX(Age) FROM Student	select min(age) , avg(age) , max(age) from student	1
wine_1: what is the area of the appelation that produces the maximum number of wines before the year of 2010? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT MAX(Area) FROM wine	select t1.area from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having t2.year < 2010 order by count(*) desc limit 1	0
college_3: what are the first names of students, ordered by age from maximum to least? | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint	SELECT S.LName, S.FName FROM Student S ORDER BY S.Age DESC	select fname from student order by age desc	0
inn_1: return the name, rate, check in and check out date for the room with the maximum rate. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT roomName, rate, checkIn, checkOut FROM Reservations WHERE rate = MAX(rate)	select t2.roomname , t1.rate , t1.checkin , t1.checkout from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by t1.rate desc limit 1;	0
college_2: find the names of the 3 departments that provide the maximum amount of courses? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name FROM department	select dept_name from course group by dept_name order by count(*) desc limit 3	0
voter_2: find the maximum age of all the students. | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT MAX(Age) FROM Student	select max(age) from student	1
college_2: find the year which offers the maximum number of courses. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT year FROM course WHERE year > 1701 AND year < 2100	select year from section group by year order by count(*) desc limit 1	0
department_store: what is the name of the Hardware product with the maximum price? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT MAX(product_price) FROM Products	select product_name from products where product_type_code = 'Hardware' order by product_price desc limit 1	0
college_2: give all information regarding instructors, in order of salary from least to maximum. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT * FROM instructor	select * from instructor order by salary	0
student_1: find the name of the teacher who teaches the maximum number of students. | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom	SELECT LastName, FirstName FROM teachers WHERE Classroom = (SELECT MAX(Classroom) FROM teachers)	select t2.firstname , t2.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom group by t2.firstname , t2.lastname order by count(*) desc limit 1	0
bike_1: what is the total and maximum duration for all trips with bike id 636? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT SUM(duration) FROM trip WHERE bike_id = 636 SELECT MAX(duration) FROM trip WHERE bike_id = 636	select sum(duration) , max(duration) from trip where bike_id = 636	0
loan_1: find the name of bank branch that provided the maximum total amount of loans. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT branch_name FROM bank WHERE amount_of_loans > (SELECT MAX(amount_of_loans) FROM loan)	select t1.bname from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id group by t1.bname order by sum(t2.amount) desc limit 1	0
college_2: what is the name of the instructor who advises the student with the maximum number of total credits? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM advisor WHERE s_ID = '12345' AND i_ID = '12345'	select t2.name from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id order by t3.tot_cred desc limit 1	0
wine_1: what is the name of the maximum rated wine? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT MAX(Score) FROM wine	select name from wine order by score limit 1	0
customers_and_addresses: find the name and id of the product whose total order quantity is the maximum. | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT name, product_id FROM Products WHERE order_quantity = MAX(order_quantity)	select t2.product_details , t2.product_id from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by sum(t1.order_quantity) limit 1	0
wine_1: what is the color of the grape whose wine products has the maximum average price? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Color FROM grapes WHERE AVG(price) = MAX(price)	select t1.color from grapes as t1 join wine as t2 on t1.grape = t2.grape group by t2.grape order by avg(price) desc limit 1	0
college_2: find the year and semester that offer the maximum number of courses. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT year, semester FROM course	select semester , year from section group by semester , year order by count(*) desc limit 1	0
inn_1: which room has the maximum rate? list the room's full name, rate, check in and check out date. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	"SELECT max(Rate) AS ""Maximum Rate"", roomName FROM Reservations"	select t2.roomname , t1.rate , t1.checkin , t1.checkout from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by t1.rate desc limit 1;	0
apartment_rentals: show the apartment type code that has the maximum number of total rooms, together with the number of bathrooms and number of bedrooms. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT type_code, count(*) FROM apartments GROUP BY type_code HAVING count(*) > (SELECT count(*) FROM apartments GROUP BY type_code)	select apt_type_code , bathroom_count , bedroom_count from apartments group by apt_type_code order by sum(room_count) desc limit 1	0
bike_1: what are the date, mean temperature and mean humidity for the 3 days with the maximum max gust speeds? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT date, mean_temp, mean_humidity FROM weather WHERE max_gust_speed_mph >= 30 ORDER BY date	select date , mean_temperature_f , mean_humidity from weather order by max_gust_speed_mph desc limit 3	0
college_1: which department has the maximum average student gpa, and what is the average gpa? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT dept_name, AVG(stu_gpa) FROM student GROUP BY dept_name	select t2.dept_name , avg(t1.stu_gpa) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by avg(t1.stu_gpa) desc limit 1	0
icfp_1: find the name of the organization that has published the maximum number of papers. | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder	SELECT name FROM papers, authorship WHERE papers.paperID = authorship.paperID AND authorship.authID = papers.authID AND papers.authID = (SELECT max(authID) FROM authorship)	select t1.name from inst as t1 join authorship as t2 on t1.instid = t2.instid join papers as t3 on t2.paperid = t3.paperid group by t1.name order by count(*) desc limit 1	0
inn_1: how many times the number of adults and kids staying in a room reached the maximum capacity of the room? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT COUNT(*) FROM Reservations WHERE (Adults + Kids) > maxOccupancy	select count(*) from reservations as t1 join rooms as t2 on t1.room = t2.roomid where t2.maxoccupancy = t1.adults + t1.kids;	0
customers_and_addresses: what is the channel code and contact number of the customer contact channel that was active for the maximum time? | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT MAX(active_to_date) AS max_active_to_date, channel_code, contact_number FROM Customer_Contact_Channels	select channel_code , contact_number from customer_contact_channels where active_to_date - active_from_date = (select active_to_date - active_from_date from customer_contact_channels order by (active_to_date - active_from_date) desc limit 1)	0
wine_1: give the name of the wine with the maximum score. | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT MAX(Score) FROM wine	select name from wine order by score limit 1	0
election: which county has the maximum population? give me the name of the county. | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT MAX(Population) FROM county	select county_name from county order by population desc limit 1	0
bike_1: list all the cities in a decreasing order of each city's stations' maximum latitude. | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT name FROM station ORDER BY max_lat DESC	select city from station group by city order by max(lat) desc	0
flight_1: what is the minimum, average, and maximum distance of all aircrafts. | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft	select min(distance) , avg(distance) , max(distance) from aircraft	1
college_2: give the title and credits for the course that is taught in the classroom with the maximum capacity. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT title, credits FROM course WHERE building = 'A' AND room_number = '101' AND capacity = MAX(capacity)	select t3.title , t3.credits from classroom as t1 join section as t2 on t1.building = t2.building and t1.room_number = t2.room_number join course as t3 on t2.course_id = t3.course_id where t1.capacity = (select max(capacity) from classroom)	0
dorm_1: find the name of the dorm with the maximum capacity. | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT dorm_name FROM Dorm WHERE dorm_capacity = (SELECT MAX(dorm_capacity) FROM Dorm)	select dorm_name from dorm order by student_capacity desc limit 1	0
flight_1: what is the average and maximum salary of all employees? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT AVG(salary) FROM employee SELECT MAX(salary) FROM employee	select avg(salary) , max(salary) from employee	0
movie_1: what is the maximum and mininum number of stars a rating can receive? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT max(stars) FROM Rating	select max(stars) , min(stars) from rating	0
game_1: show the average, minimum, and maximum age for different majors. | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT AVG(age), MIN(age), MAX(age) FROM Student	select major , avg(age) , min(age) , max(age) from student group by major	0
manufactory_1: what are the names and revenues of the companies with the maximum revenues in each headquarter city? | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Code, Name, Headquarter, Revenue FROM Manufacturers WHERE Headquarter IN ('New York', 'London', 'Tokyo') GROUP BY Code, Name, Headquarter HAVING SUM(Revenue) > MAX(Revenue) ORDER BY Code, Name, Headquarter	select name , max(revenue) , headquarter from manufacturers group by headquarter	0
wine_1: what is the winery at which the wine with the maximum score was made? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT winery FROM wine WHERE score = max(score)	select winery from wine order by score limit 1	0
customers_and_invoices: return the last name, id and phone number of the customer who has made the maximum number of orders. | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT last_name, customer_id, phone_number FROM customers WHERE customer_id = (SELECT MAX(customer_id) FROM customers)	select t2.customer_last_name , t1.customer_id , t2.phone_number from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1	0
college_2: find the name of the department which has the maximum average salary of professors. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name FROM department WHERE avg(salary) = max(avg(salary))	select dept_name from instructor group by dept_name order by avg(salary) desc limit 1	0
loan_1: find the name of bank branch that provided the maximum total amount of loans to customers with credit score is less than 100. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT bname FROM bank WHERE credit_score < 100 AND amount > (SELECT MAX(amount) FROM loan)	select t2.bname from loan as t1 join bank as t2 on t1.branch_id = t2.branch_id join customer as t3 on t1.cust_id = t3.cust_id where t3.credit_score < 100 group by t2.bname order by sum(t1.amount) desc limit 1	0
college_2: find the name of department that has the maximum amount of students? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name FROM department WHERE dept_name = 'Computer Science'	select dept_name from student group by dept_name order by count(*) desc limit 1	0
flight_4: what is the country of the airport with the maximum elevation? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT airport.name, country.name FROM airports, countries WHERE airports.apid=countries.apid AND countries.country= 'France' AND elevation > (SELECT MAX(elevation) FROM airports)	select country from airports order by elevation desc limit 1	0
college_2: what is the title and credits of the course that is taught in the maximum classroom (with the maximum capacity)? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT title, credits FROM course WHERE building = 'A' AND room_number = '101' AND capacity = '100'	select t3.title , t3.credits from classroom as t1 join section as t2 on t1.building = t2.building and t1.room_number = t2.room_number join course as t3 on t2.course_id = t3.course_id where t1.capacity = (select max(capacity) from classroom)	0
college_2: which year had the maximum number of courses? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT year FROM course WHERE year > 1701 AND year < 2100	select year from section group by year order by count(*) desc limit 1	0
election: what are the maximum and minimum population of the counties? | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT MIN(Population), MAX(Population) FROM county	select max(population) , min(population) from county	1
flight_1: what is the flight number and its distance for the one with the maximum price? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT max(price) FROM flight WHERE price > (SELECT price FROM flight WHERE distance > 1000)	select flno , distance from flight order by price desc limit 1	0
college_2: how many instructors are in the department with the maximum budget, and what is their average salary? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT avg(salary) FROM department WHERE budget > (SELECT max(budget) FROM department)	select avg(t1.salary) , count(*) from instructor as t1 join department as t2 on t1.dept_name = t2.dept_name order by t2.budget desc limit 1	0
soccer_2: what are the names of all colleges with a larger enrollment than the maximum college in Florida? | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT cName FROM College WHERE enr > (SELECT MAX(enr) FROM College WHERE state = 'FL')	select cname from college where enr > (select max(enr) from college where state = 'FL')	1
activity_1: find the first and last name of the faculty who is involved in the maximum number of activities. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT max(FacID) as FacID, max(FirstName) as FirstName, max(LastName) as LastName FROM Faculty_Participates_in GROUP BY FacID HAVING COUNT(*) > 1 ORDER BY FacID	select t1.fname , t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid group by t1.facid order by count(*) desc limit 1	0
college_2: what is the department name and corresponding building for the department with the maximum budget? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name, building FROM department WHERE budget > (SELECT MAX(budget) FROM department)	select dept_name , building from department order by budget desc limit 1	0
soccer_2: find the name of the tryout players who are from the college with maximum size. | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT cName FROM Tryout WHERE cName = 'College with maximum size'	select t2.pname from tryout as t1 join player as t2 on t1.pid = t2.pid where t1.cname = (select cname from college order by enr desc limit 1)	0
activity_1: find the name of the activity that has the maximum number of student participants. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT MAX(stuid) FROM Participates_in	select t1.activity_name from activity as t1 join participates_in as t2 on t1.actid = t2.actid group by t1.actid order by count(*) desc limit 1	0
bike_1: for each city, what is the maximum latitude for its stations? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT max(lat) FROM station	select city , max(lat) from station group by city	0
college_2: find the name of instructor who is the advisor of the student who has the maximum number of total credits. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM advisor WHERE s_ID = (SELECT max(i_ID) FROM student)	select t2.name from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id order by t3.tot_cred desc limit 1	0
department_store: what are the ids of the three products that were purchased in the maximum amount? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT product_id FROM Products WHERE total_amount_purchased = (SELECT MAX(total_amount_purchased) FROM Products)	select product_id from product_suppliers order by total_amount_purchased desc limit 3	0
department_store: what are the name, phone number and email address of the customer who made the maximum number of orders? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT customer_name, customer_phone, customer_email FROM customers WHERE customer_code = 'C001'	select t1.customer_name , t1.customer_phone , t1.customer_email from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id group by t2.customer_id order by count(*) desc limit 1	0
loan_1: what is the name of the customer who has maximum total loan amount? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT max(loan.amount) FROM loan, customer WHERE loan.cust_ID = customer.cust_ID	select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name order by sum(t2.amount) desc limit 1	0
loan_1: what is the name of the bank branch with the maximum number of customers? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT max(no_of_customers) FROM customer	select bname from bank order by no_of_customers desc limit 1	0
college_1: find the name, address, number of students in the departments that have the 3 maximum number of students. | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DISTINCT DEPT_NAME, DEPT_ADDRESS, COUNT(STU_NUM) FROM STUDENT, DEPARTMENT WHERE DEPT_CODE = DEPARTMENT.DEPT_CODE AND STU_NUM IN (SELECT MAX(STU_NUM) FROM STUDENT) SELECT DISTINCT DEPT_NAME, DEPT_ADDRESS, COUNT(STU_NUM) FROM STUDENT, DEPARTMENT WHERE DEPT_CODE = DEPARTMENT.DEPT_CODE AND STU_NUM IN (SELECT MAX(STU_NUM) FROM STUDENT) SELECT DISTINCT DEPT_NAME, DEPT_ADDRESS, COUNT(STU_NUM) FROM STUDENT, DEPARTMENT WHERE DEPT_CODE = DEPARTMENT.DEPT_CODE AND STU_NUM IN (SELECT MAX(STU_NUM	select t2.dept_name , t2.dept_address , count(*) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count(*) desc limit 3	0
election: return the maximum and minimum population among all counties. | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT MAX(Population) FROM county SELECT MIN(Population) FROM county	select max(population) , min(population) from county	0
movie_1: find the movies with the maximum average rating. return the movie titles and average rating. | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title, avg(stars) FROM Rating	select t2.title , avg(t1.stars) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.mid order by avg(t1.stars) desc limit 1	0
hr_1: what are the job titles, and range of salaries for jobs with maximum salary between 12000 and 18000? | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT job_title, MAX(salary) FROM jobs WHERE MAX(salary) BETWEEN 12000 AND 18000	select job_title , max_salary - min_salary from jobs where max_salary between 12000 and 18000	0
tracking_orders: what is the name of the customer who has the maximum number of orders? | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id	SELECT MAX(customer_name) FROM Customers	select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1	0
flight_1: show the flight number and distance of the flight with maximum price. | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT flno, distance, price FROM flight WHERE price = (SELECT MAX(price) FROM flight)	select flno , distance from flight order by price desc limit 1	0
wine_1: give the maximum price and score for wines produced in the appelation st. helena. | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT MAX(price) FROM wine WHERE appelation = 'St. Helena'	"select max(price) , max(score) from wine where appelation = ""st. helena"""	0
formula_1: what is the id and last name of the driver with the maximum laptime? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	SELECT max(driverId) as driverId, max(forename) as forename, max(surname) as surname FROM drivers	select t1.driverid , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid order by t2.milliseconds desc limit 1	0
