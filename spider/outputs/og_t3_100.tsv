Question	Predicted Parse	Gold Parse	Result
wine_1: what is the average prices of wines for each each? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Grape, AVG(Price) AS Average_Price FROM wine GROUP BY Grape	select avg(price) , year from wine group by year	0
csu_1: what are the campuses that opened in 1958? | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty	SELECT Campus FROM Campuses WHERE Year = 1958	select campus from campuses where year = 1958	1
driving_school: how many lessons were taught by a staff member whose first name has the letter 'a' in it? | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT COUNT(*) FROM Lessons INNER JOIN Staff ON Lessons.staff_id = Staff.staff_id WHERE Staff.first_name LIKE '%a%'	"select count(*) from lessons as t1 join staff as t2 on t1.staff_id = t2.staff_id where t2.first_name like ""%a%"""	1
hr_1: can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above 12000? | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT j.* FROM jobs j INNER JOIN employees e     ON j.JOB_ID = e.JOB_ID WHERE e.SALARY >= 12000	select * from job_history as t1 join employees as t2 on t1.employee_id = t2.employee_id where t2.salary >= 12000	0
activity_1: show the rank, first name, and last name for all the faculty. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT Rank, Fname, Lname FROM Faculty	select rank , fname , lname from faculty	1
store_1: what are the names of the top 8 countries by total invoice size and what are those sizes? | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT billing_country, SUM(total) AS total_invoice_size FROM invoices GROUP BY billing_country ORDER BY total_invoice_size DESC LIMIT 8	select billing_country , sum(total) from invoices group by billing_country order by sum(total) desc limit 8;	1
flight_4: what are the names of all cities with more than one airport and how many airports do they have? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT city, COUNT(*) AS num_airports FROM airports GROUP BY city HAVING COUNT(*) > 1	select city , count(*) from airports group by city having count(*) > 1	1
music_2: which song has the most vocals? | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type	SELECT SongId, COUNT(*) AS NumVocals FROM Vocals GROUP BY SongId ORDER BY NumVocals DESC LIMIT 1	select title from vocals as t1 join songs as t2 on t1.songid = t2.songid group by t1.songid order by count(*) desc limit 1	1
driving_school: what is the status code, phone number, and email address of the customer whose last name is kohler or whose first name is marina? | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT customer_status_code, phone_number, email_address FROM Customers WHERE last_name = 'Kohler' OR first_name = 'Marina'	"select customer_status_code , cell_mobile_phone_number , email_address from customers where first_name = ""marina"" or last_name = ""kohler"""	0
allergy_1: how many students are affected by each allergy type? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT AllergyType, COUNT(*) AS 'Number of Students Affected' FROM Allergy_Type JOIN Has_Allergy ON Allergy_Type.Allergy = Has_Allergy.Allergy GROUP BY AllergyType	select t2.allergytype , count(*) from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy group by t2.allergytype	1
formula_1: what are the first names of the different drivers who won in position 1 as driver standing and had more than 20 points? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	SELECT forename FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId WHERE driverStandings.position = 1 AND driverStandings.points > 20	select distinct t1.forename from drivers as t1 join driverstandings as t2 on t1.driverid = t2.driverid where t2.position = 1 and t2.wins = 1 and t2.points > 20	0
dorm_1: list name of all amenities which anonymous donor hall has, and sort the results in alphabetic order. | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT amenity_name  FROM Dorm_amenity  INNER JOIN Has_amenity  ON Dorm_amenity.amenid = Has_amenity.amenid  WHERE Has_amenity.dormid = 109  ORDER BY amenity_name ASC	select t1.amenity_name from dorm_amenity as t1 join has_amenity as t2 on t2.amenid = t1.amenid join dorm as t3 on t2.dormid = t3.dormid where t3.dorm_name = 'anonymous donor hall' order by t1.amenity_name	0
driving_school: what are the email addresses and date of births for all customers who have a first name of carole? | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT email_address, date_of_birth FROM Customers WHERE first_name = 'Carole'	"select email_address , date_of_birth from customers where first_name = ""carole"""	0
sakila_1: what is the id of the store that has the most items in inventory? | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT store_id FROM inventory GROUP BY store_id ORDER BY COUNT(*) DESC LIMIT 1	select store_id from inventory group by store_id order by count(*) desc limit 1	1
movie_1: what is the id of the reviewer named daniel lewis? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT rID FROM Reviewer WHERE name = 'Daniel Lewis'	"select rid from reviewer where name = ""daniel lewis"""	0
customers_card_transactions: what are the other account details for the account with the name 338? | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details	SELECT other_account_details FROM Accounts WHERE account_name = '338'	"select other_account_details from accounts where account_name = ""338"""	1
tracking_grants_for_research: show the role description and the id of the project staff involved in most number of project outcomes? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT ps.role_code, ps.staff_id, COUNT(po.outcome_code) AS num_outcomes FROM Project_Staff ps INNER JOIN Project_Outcomes po ON ps.project_id = po.project_id GROUP BY ps.role_code, ps.staff_id ORDER BY num_outcomes DESC LIMIT 1	select t1.role_description , t2.staff_id from staff_roles as t1 join project_staff as t2 on t1.role_code = t2.role_code join project_outcomes as t3 on t2.project_id = t3.project_id group by t2.staff_id order by count(*) desc limit 1	0
hr_1: what are the names of departments that have at least one employee. | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT DISTINCT DEPARTMENT_NAME FROM departments INNER JOIN employees ON departments.DEPARTMENT_ID = employees.DEPARTMENT_ID	select distinct t2.department_name from employees as t1 join departments as t2 on t1.department_id = t2.department_id	1
hospital_1: find the number of patients who are not using the medication of procrastin-x. | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT COUNT(*) FROM Patient WHERE SSN NOT IN (SELECT Patient FROM Prescribes WHERE Medication = (SELECT Code FROM Medication WHERE Name = 'Procrastin-X'))	select count(*) from patient where ssn not in ( select t1.patient from prescribes as t1 join medication as t2 on t1.medication = t2.code where t2.name = 'procrastin-x' )	0
activity_1: which faculty members are playing either canoeing or kayaking? tell me their first names. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT Fname FROM Faculty INNER JOIN Faculty_Participates_in ON Faculty.FacID = Faculty_Participates_in.FacID INNER JOIN Activity ON Faculty_Participates_in.actid = Activity.actid WHERE Activity.activity_name = 'Canoeing' OR Activity.activity_name = 'Kayaking'	select distinct t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'canoeing' or t3.activity_name = 'kayaking'	0
voter_2: what are the maximum and minimum age of students with major 600? | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT MAX(Age), MIN(Age) FROM Student WHERE Major = 600	select max(age) , min(age) from student where major = 600	1
"club_1: find the last names of the members of the club ""bootup baltimore"". | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position"	SELECT LName FROM Student s INNER JOIN Member_of_club mc ON s.StuID = mc.StuID INNER JOIN Club c ON mc.ClubID = c.ClubID WHERE c.ClubName = 'Bootup Baltimore'	"select t3.lname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = ""bootup baltimore"""	0
"products_gen_characteristics: find the number of characteristics that the product ""flax"" has. | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value"	SELECT COUNT(*) FROM Product_Characteristics pc INNER JOIN Products p ON pc.product_id = p.product_id WHERE p.product_name = 'flax'	"select count(*) from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id where t1.product_name = ""flax"""	1
tracking_grants_for_research: what are the details of the project with no outcomes? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT * FROM Projects p LEFT JOIN Project_Outcomes po ON p.project_id = po.project_id WHERE po.outcome_code IS NULL	select project_details from projects where project_id not in ( select project_id from project_outcomes )	0
college_2: count the number of courses without prerequisites. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT COUNT(*) FROM course WHERE course_id NOT IN (SELECT prereq_id FROM prereq)	select count(*) from course where course_id not in (select course_id from prereq)	0
game_1: what are the types of video games and how many are in each type? | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT GType, COUNT(*) FROM Video_Games GROUP BY GType	select gtype , count(*) from video_games group by gtype	1
icfp_1: how many authors are there? | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder	SELECT COUNT(*) FROM authors	select count(*) from authors	1
network_2: what is the total number of people who has no friend living in the city of austin. | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT COUNT(*) FROM Person WHERE name NOT IN (SELECT friend FROM PersonFriend WHERE name IN (SELECT name FROM Person WHERE city = 'austin')) AND city = 'austin'	select count(distinct name) from personfriend where friend not in (select name from person where city = 'austin')	0
sports_competition: what is the total number of points for all players? | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT SUM(Points) FROM player	select sum(points) from player	1
hr_1: which employees were hired after september 7th, 1987? | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT * FROM employees WHERE HIRE_DATE > '1987-09-07'	select * from employees where hire_date > '1987-09-07'	1
"baseball_1: count the number of games taken place in park ""columbia park"" in 1907. | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l"	SELECT COUNT(*) FROM home_game WHERE park_id = 'COL01' AND year = 1907	select count(*) from home_game as t1 join park as t2 on t1.park_id = t2.park_id where t1.year = 1907 and t2.park_name = 'columbia park';	1
hospital_1: tell me the distinct block codes where some rooms are available. | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT DISTINCT BlockCode FROM Room WHERE Unavailable = 0	select distinct blockcode from room where unavailable = 0	1
baseball_1: what is the total number of postseason games that team boston red stockings participated in? | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l	SELECT SUM(wins + losses + ties) FROM postseason WHERE team_id_winner = 'BS1' OR team_id_loser = 'BS1'	select count(*) from ( select * from postseason as t1 join team as t2 on t1.team_id_winner = t2.team_id_br where t2.name = 'boston red stockings' union select * from postseason as t1 join team as t2 on t1.team_id_loser = t2.team_id_br where t2.name = 'boston red stockings' );	0
"music_2: what are the instruments are used in the song ""le pop""? | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type"	SELECT Instrument FROM Instruments  INNER JOIN Songs ON Instruments.SongId = Songs.SongId  WHERE Songs.Title = 'le pop'	"select instrument from instruments as t1 join songs as t2 on t1.songid = t2.songid where title = ""le pop"""	1
bike_1: what are the dates in which the mean sea level pressure was between 30.3 and 31? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31	select date from weather where mean_sea_level_pressure_inches between 30.3 and 31	1
college_2: what are the titles of courses that are offered in more than one department? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT title FROM course GROUP BY title HAVING COUNT(DISTINCT dept_name) > 1	select title from course group by title having count(*) > 1	1
"club_1: how many different roles are there in the club ""bootup baltimore""? | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position"	SELECT COUNT(DISTINCT Position) FROM Member_of_club JOIN Club ON Member_of_club.ClubID = Club.ClubID WHERE Club.ClubName = 'Bootup Baltimore'	"select count(distinct t2.position) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid where t1.clubname = ""bootup baltimore"""	0
driving_school: what is the zip code of staff with first name as janessa and last name as sawayn lived? | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT zip_postcode FROM Addresses INNER JOIN Staff ON Addresses.address_id = Staff.staff_address_id WHERE first_name = 'Janessa' AND last_name = 'Sawayn'	"select t1.zip_postcode from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = ""janessa"" and t2.last_name = ""sawayn"";"	0
music_1: what is the name of the artist, for each language, that has the most songs with a higher resolution than 500? | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution	SELECT artist_name, languages FROM song WHERE resolution > 500 GROUP BY artist_name, languages ORDER BY COUNT(*) DESC	select artist_name from song where resolution > 500 group by languages order by count(*) desc limit 1	0
sakila_1: which film is rented at a fee of 0.99 and has less than 3 in the inventory? list the film title and id. | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT title, film_id FROM film JOIN inventory ON film.film_id = inventory.film_id JOIN rental ON inventory.inventory_id = rental.inventory_id WHERE rental_rate = 0.99 AND inventory.inventory_id IN (   SELECT inventory_id   FROM inventory   GROUP BY inventory_id   HAVING COUNT(*) < 3 )	select title , film_id from film where rental_rate = 0.99 intersect select t1.title , t1.film_id from film as t1 join inventory as t2 on t1.film_id = t2.film_id group by t1.film_id having count(*) < 3	0
bike_1: find the day in which the difference between the max temperature and min temperature was the smallest. also report the difference. | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT date, (max_temperature_f - min_temperature_f) AS diff FROM weather ORDER BY diff ASC LIMIT 1	select date , max_temperature_f - min_temperature_f from weather order by max_temperature_f - min_temperature_f limit 1	1
bike_1: how many stations are in mountain view? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT COUNT(*) FROM station WHERE city = 'Mountain View'	"select count(*) from station where city = ""mountain view"""	0
college_2: what are the names of all instructors who advise students in the math depart sorted by total credits of the student. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT i.name, s.tot_cred FROM instructor i INNER JOIN advisor a ON i.ID = a.i_ID INNER JOIN student s ON a.s_ID = s.ID WHERE s.dept_name = 'Math' ORDER BY s.tot_cred	select t2.name from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id where t3.dept_name = 'math' order by t3.tot_cred	0
hr_1: when is the hire date for those employees whose first name does not containing the letter m? | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT HIRE_DATE FROM employees WHERE FIRST_NAME NOT LIKE '%M%'	select hire_date from employees where first_name not like '%m%'	1
e_learning: list all the subject names. | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result	SELECT subject_name FROM Subjects	select subject_name from subjects	1
"icfp_1: find the papers which have ""olin shivers"" as an author. | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder"	SELECT papers.title FROM papers INNER JOIN authorship ON papers.paperID = authorship.paperID INNER JOIN authors ON authorship.authID = authors.authID WHERE authors.fname = 'Olin' AND authors.lname = 'Shivers'	"select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid where t1.fname = ""olin"" and t1.lname = ""shivers"""	0
college_2: what are the names of all instructors in the comp. sci. department? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.'	select name from instructor where dept_name = 'comp. sci.'	0
store_1: list the name of tracks belongs to genre rock or media type is mpeg audio file. | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT t.name FROM tracks t JOIN genres g ON t.genre_id = g.id JOIN media_types m ON t.media_type_id = m.id WHERE g.name = 'Rock' OR m.name = 'MPEG audio file'	"select t2.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id join media_types as t3 on t3.id = t2.media_type_id where t1.name = ""rock"" or t3.name = ""mpeg audio file"";"	0
dorm_1: what are the names of all the dorms that don't have any amenities? | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT dorm_name FROM Dorm WHERE dormid NOT IN (SELECT dormid FROM Has_amenity)	select dorm_name from dorm where dormid not in (select dormid from has_amenity)	1
game_1: show all video games and their types in the order of their names. | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT GName, GType FROM Video_Games ORDER BY GName	select gname , gtype from video_games order by gname	1
college_1: what is the average gpa of the students enrolled in the course with code acct-211? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT AVG(STU_GPA) FROM STUDENT INNER JOIN ENROLL ON STUDENT.STU_NUM = ENROLL.STU_NUM INNER JOIN CLASS ON ENROLL.CLASS_CODE = CLASS.CLASS_CODE WHERE CLASS.CRS_CODE = 'ACCT-211'	select avg(t2.stu_gpa) from enroll as t1 join student as t2 on t1.stu_num = t2.stu_num join class as t3 on t1.class_code = t3.class_code where t3.crs_code = 'acct-211'	0
csu_1: how many people graduated from san francisco state university in 2004? | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty	SELECT SUM(Degrees) FROM Degrees INNER JOIN Campuses ON Degrees.Campus = Campuses.Id WHERE Campuses.Campus = 'San Francisco State University' AND Degrees.Year = 2004	"select sum(t1.graduate) from discipline_enrollments as t1 join campuses as t2 on t1.campus = t2.id where t1.year = 2004 and t2.campus = ""san francisco state university"""	0
store_1: list the number of invoices from chicago, il. | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT COUNT(*) FROM invoices JOIN customers     ON invoices.customer_id = customers.id WHERE customers.city = 'Chicago'     AND customers.state = 'IL'	"select count(*) from invoices where billing_city = ""chicago"" and billing_state = ""il"";"	0
college_1: how many credits is the course that the student with the last name smithson took, and what is its description? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT CRS_DESCRIPTION, CRS_CREDIT  FROM COURSE  INNER JOIN ENROLL  ON COURSE.CRS_CODE = ENROLL.CLASS_CODE  INNER JOIN STUDENT  ON ENROLL.STU_NUM = STUDENT.STU_NUM  WHERE STUDENT.STU_LNAME = 'Smithson'	select t4.crs_description , t4.crs_credit from class as t1 join enroll as t2 on t1.class_code = t2.class_code join student as t3 on t3.stu_num = t2.stu_num join course as t4 on t4.crs_code = t1.crs_code where t3.stu_lname = 'smithson'	1
cre_drama_workshop_groups: what is the name of the most expensive product? | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details	SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1	select product_name from products order by product_price desc limit 1	1
department_store: return the id of the department with the fewest staff assignments. | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT department_id FROM Staff_Department_Assignments GROUP BY department_id ORDER BY COUNT(*) ASC LIMIT 1	select department_id from staff_department_assignments group by department_id order by count(*) limit 1	1
tracking_orders: find the ids of all the order items whose product id is 11. | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id	SELECT order_item_id FROM Order_Items WHERE product_id = 11	select order_item_id from order_items where product_id = 11	1
cre_docs_and_epenses: show the statement id and the statement detail for the statement with most number of accounts. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details	SELECT Statement_ID, Statement_Details FROM Statements INNER JOIN Accounts ON Statements.Statement_ID = Accounts.Statement_ID GROUP BY Statement_ID ORDER BY COUNT(*) DESC LIMIT 1	select t1.statement_id , t2.statement_details from accounts as t1 join statements as t2 on t1.statement_id = t2.statement_id group by t1.statement_id order by count(*) desc limit 1	0
cre_drama_workshop_groups: what are the distinct payment method codes in all the invoices? | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details	SELECT DISTINCT payment_method_code FROM Invoices	select distinct payment_method_code from invoices	1
cre_doc_tracking_db: return the day number and stored date for all the documents. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details	SELECT Ref_Calendar.Day_Number, All_Documents.Date_Stored FROM All_Documents INNER JOIN Ref_Calendar ON All_Documents.Date_Stored = Ref_Calendar.Calendar_Date	select t2.day_number , t1.date_stored from all_documents as t1 join ref_calendar as t2 on t1.date_stored = t2.calendar_date	1
flight_4: find the number of routes that have destination john f kennedy international airport. | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT COUNT(*) FROM routes WHERE dst_ap = 'KZ'	select count(*) from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.name = 'john f kennedy international airport'	0
movie_1: what are the names of all directors who made one movie? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT DISTINCT director  FROM Movie	select director from movie group by director having count(*) = 1	0
activity_1: find the building that has the largest number of faculty members. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT Building, COUNT(*) AS 'Number of Faculty Members' FROM Faculty GROUP BY Building ORDER BY COUNT(*) DESC LIMIT 1	select building from faculty group by building order by count(*) desc limit 1	0
college_2: find the name and building of the department with the highest budget. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name, building FROM department ORDER BY budget DESC LIMIT 1	select dept_name , building from department order by budget desc limit 1	1
network_2: what are the names of all friends who are from new york? | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT Person.name FROM Person INNER JOIN PersonFriend ON Person.name = PersonFriend.friend WHERE Person.city = 'new york city'	select t2.name from person as t1 join personfriend as t2 on t1.name = t2.friend where t1.city = 'new york city'	0
college_1: what is the last name of the student who received an a in the class with the code 10018? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT STU_LNAME FROM STUDENT INNER JOIN ENROLL ON STUDENT.STU_NUM = ENROLL.STU_NUM WHERE ENROLL_GRADE = 'A' AND CLASS_CODE = '10018'	select t1.stu_lname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num where t2.enroll_grade = 'a' and t2.class_code = 10018	0
"college_3: find the first names of students whose first names contain letter ""a"". | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint"	SELECT Fname FROM Student WHERE Fname LIKE '%a%'	select distinct fname from student where fname like '%a%'	0
voter_2: tell me the ages of the oldest and youngest students studying major 600. | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT MIN(Age) AS Youngest_Age, MAX(Age) AS Oldest_Age FROM Student WHERE Major = 600	select max(age) , min(age) from student where major = 600	1
allergy_1: what are the different majors? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT DISTINCT Major FROM Student	select distinct major from student	1
college_1: what is the description for the cis-220 and how many credits does it have? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT CRS_DESCRIPTION, CRS_CREDIT FROM COURSE WHERE CRS_CODE = 'CIS-220'	select crs_credit , crs_description from course where crs_code = 'cis-220'	0
college_1: how many sections does course acct-211 has? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT COUNT(*) FROM CLASS WHERE CRS_CODE = 'ACCT-211'	select count(distinct class_section) from class where crs_code = 'acct-211'	0
network_2: what are the different names and ages of every friend of either dan or alice? | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT p.name, p.age FROM Person p INNER JOIN PersonFriend pf ON p.name = pf.friend WHERE pf.name = 'Dan' OR pf.name = 'Alice'	select distinct t1.name , t1.age from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'dan' or t2.friend = 'alice'	0
hospital_1: what is the name and position of the head whose department has least number of employees? | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT Name, Position FROM Physician INNER JOIN Department ON Physician.EmployeeID = Department.Head ORDER BY DepartmentID ASC LIMIT 1	select t2.name , t2.position from department as t1 join physician as t2 on t1.head = t2.employeeid group by departmentid order by count(departmentid) limit 1;	0
formula_1: what are the names of circuits that belong to uk or malaysia? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	SELECT name FROM circuits WHERE country = 'UK' OR country = 'Malaysia'	"select name from circuits where country = ""uk"" or country = ""malaysia"""	0
cre_drama_workshop_groups: find the order detail for the products with price above 2000. | ref_payment_methods : payment_method_code , payment_method_description | ref_service_types : service_type_code , parent_service_type_code , service_type_description | addresses : address_id , line_1 , line_2 , city_town , state_county , other_details | products : product_id , product_name , product_price , product_description , other_product_service_details | marketing_regions : marketing_region_code , marketing_region_name , marketing_region_descriptrion , other_details | clients : client_id , address_id , customer_email_address , customer_name , customer_phone , other_details | drama_workshop_groups : workshop_group_id , address_id , currency_code , marketing_region_code , store_name , store_phone , store_email_address , other_details | performers : performer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | customers : customer_id , address_id , customer_name , customer_phone , customer_email_address , other_details | stores : store_id , address_id , marketing_region_code , store_name , store_phone , store_email_address , other_details | bookings : booking_id , customer_id , workshop_group_id , status_code , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | performers_in_bookings : order_id , performer_id | customer_orders : order_id , customer_id , store_id , order_date , planned_delivery_date , actual_delivery_date , other_order_details | order_items : order_item_id , order_id , product_id , order_quantity , other_item_details | invoices : invoice_id , order_id , payment_method_code , product_id , order_quantity , other_item_details , order_item_id | services : service_id , service_type_code , workshop_group_id , product_description , product_name , product_price , other_product_service_details | bookings_services : order_id , product_id | invoice_items : invoice_item_id , invoice_id , order_id , order_item_id , product_id , order_quantity , other_item_details	SELECT * FROM Products WHERE Product_Price > 2000	select t1.other_item_details from order_items as t1 join products as t2 on t1.product_id = t2.product_id where t2.product_price > 2000	0
"club_1: which clubs have one or more members from the city with code ""hou""? give me the names of the clubs. | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position"	SELECT ClubName FROM Club c JOIN Member_of_club m ON c.ClubID = m.ClubID JOIN Student s ON m.StuID = s.StuID WHERE s.city_code = 'HOU'	"select distinct t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.city_code = ""hou"""	0
college_1: what are the first names of all students who got a grade c in a class? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT STU_FNAME FROM STUDENT INNER JOIN ENROLL ON STUDENT.STU_NUM = ENROLL.STU_NUM WHERE ENROLL_GRADE = 'C'	select distinct stu_fname from student as t1 join enroll as t2 on t1.stu_num = t2.stu_num where enroll_grade = 'c'	0
wine_1: what is the maximum price of wines from the appelation in the central coast area, which was produced before 2005? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT MAX(Price) FROM wine INNER JOIN appellations ON appellations.Appelation = wine.Appelation WHERE appellations.Area = 'Central Coast' AND wine.Year < 2005	"select max(t2.price) from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.area = ""central coast"" and t2.year < 2005"	0
activity_1: show the ids of all the faculty members who participate in an activity and advise a student. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT FacID  FROM Faculty  WHERE FacID IN (SELECT FacID FROM Faculty_Participates_in)  AND FacID IN (SELECT Advisor FROM Student)	select facid from faculty_participates_in intersect select advisor from student	1
"music_2: how many musicians play in the song ""flash""? | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type"	SELECT COUNT(*) FROM Instruments INNER JOIN Songs ON Songs.SongId = Instruments.SongId WHERE Songs.Title = 'Flash'	"select count(*) from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t3.title = ""flash"""	1
"music_2: what are the song titles on the album ""a kiss before you go: live in hamburg""? | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type"	SELECT s.Title  FROM Songs s  INNER JOIN Tracklists t  ON s.SongId = t.SongId  INNER JOIN Albums a  ON t.AlbumId = a.AId  WHERE a.Title = 'A Kiss Before You Go'	"select t3.title from albums as t1 join tracklists as t2 on t1.aid = t2.albumid join songs as t3 on t2.songid = t3.songid where t1.title = ""a kiss before you go: live in hamburg"""	1
products_gen_characteristics: what are the names and buying prices of all the products? | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value	SELECT product_name, typical_buying_price FROM Products	select product_name , typical_buying_price from products	1
driving_school: when are the birthdays of customer who are classified as 'good customer' status? | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT date_of_birth FROM Customers WHERE customer_status_code = 'Good Customer'	select date_of_birth from customers where customer_status_code = 'good customer'	0
college_1: find the number of professors in accounting department. | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT COUNT(*) FROM PROFESSOR WHERE DEPT_CODE = 'ACCT'	"select count(*) from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where dept_name = ""accounting"""	0
inn_1: how many people in total can stay in the modern rooms of this inn? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT SUM(maxOccupancy)  FROM Rooms  WHERE decor = 'modern'	select sum(maxoccupancy) from rooms where decor = 'modern';	1
flight_1: what is the origin and destination for all flights whose price is higher than 300? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT origin, destination FROM flight WHERE price > 300	select origin , destination from flight where price > 300	1
apartment_rentals: show the guest first names, start dates, and end dates of all the apartment bookings. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT guest_first_name, booking_start_date, booking_end_date FROM Apartment_Bookings JOIN Guests ON Apartment_Bookings.guest_id = Guests.guest_id	select t2.guest_first_name , t1.booking_start_date , t1.booking_start_date from apartment_bookings as t1 join guests as t2 on t1.guest_id = t2.guest_id	0
manufactory_1: who is the founder of sony? | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Founder FROM Manufacturers WHERE Name = 'Sony'	select founder from manufacturers where name = 'sony'	0
chinook_1: what are the addresses of customers living in germany who have had an invoice? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT DISTINCT c.Address FROM customer c INNER JOIN invoice i ON c.CustomerId = i.CustomerId WHERE c.Country = 'Germany'	"select distinct t1.address from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t1.country = ""germany"""	0
dorm_1: find the code of city where most of students are living in. | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT city_code, COUNT(*) AS num_students FROM Student GROUP BY city_code ORDER BY num_students DESC LIMIT 1	select city_code from student group by city_code order by count(*) desc limit 1	0
activity_1: find the faculty rank that has the least members. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT Rank, COUNT(*) AS Count FROM Faculty GROUP BY Rank ORDER BY Count ASC LIMIT 1	select rank from faculty group by rank order by count(*) asc limit 1	0
student_assessment: how many courses does the student with id 171 actually attend? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT COUNT(*) FROM Student_Course_Registrations WHERE student_id = 171	select count(*) from courses as t1 join student_course_attendance as t2 on t1.course_id = t2.course_id where t2.student_id = 171	1
voter_2: find the distinct advisor of students who have treasurer votes in the spring election cycle. | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT DISTINCT Advisor  FROM Student  INNER JOIN Voting_record  ON Student.StuID = Voting_record.StuID  WHERE Election_Cycle = 'Spring'  AND Treasurer_Vote IS NOT NULL	"select distinct t1.advisor from student as t1 join voting_record as t2 on t1.stuid = t2.treasurer_vote where t2.election_cycle = ""spring"""	0
"apartment_rentals: find the average room count of the apartments that have the ""studio"" type code. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn"	SELECT AVG(room_count) FROM Apartments WHERE apt_type_code = 'Studio'	"select avg(room_count) from apartments where apt_type_code = ""studio"""	0
sports_competition: list the types of competition and the number of competitions of each type. | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT Competition_type, COUNT(*) AS 'Number of Competitions' FROM competition GROUP BY Competition_type	select competition_type , count(*) from competition group by competition_type	1
voter_2: report the distinct advisors who have more than 2 students. | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT DISTINCT Advisor  FROM Student  GROUP BY Advisor  HAVING COUNT(*) > 2	select advisor from student group by advisor having count(*) > 2	1
department_store: what are the order ids and customer ids for orders that have been cancelled, sorted by their order dates? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT order_id, customer_id FROM Customer_Orders WHERE order_status_code = 'Cancelled' ORDER BY order_date	"select order_id , customer_id from customer_orders where order_status_code = ""cancelled"" order by order_date"	0
wine_1: list the names of all distinct wines ordered by price. | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT DISTINCT Name, Price FROM wine ORDER BY Price	select distinct name from wine order by price	0
products_gen_characteristics: give the names of characteristics that are in two or more products? | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value	SELECT characteristic_name FROM Characteristics INNER JOIN Product_Characteristics ON Characteristics.characteristic_id = Product_Characteristics.characteristic_id GROUP BY characteristic_name HAVING COUNT(*) > 1	select t3.characteristic_name from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id group by t3.characteristic_name having count(*) >= 2	1
college_1: what is the name of the department with the student that has the lowest gpa? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME  FROM DEPARTMENT  INNER JOIN STUDENT  ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE  ORDER BY STU_GPA ASC  LIMIT 1	select t2.dept_name from student as t1 join department as t2 on t1.dept_code = t2.dept_code order by stu_gpa limit 1	1
