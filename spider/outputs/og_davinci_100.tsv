Question	Predicted Parse	Gold Parse	Result
customers_and_addresses: find the name of all customers. | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT name FROM customers	select customer_name from customers	0
hr_1: display all the information about the department marketing. | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT * FROM departments WHERE department_id = 'marketing'	select * from departments where department_name = 'marketing'	1
flight_1: what are the origins of all flights that are headed to honolulu? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT origin FROM flight WHERE destination = 'Honolulu'	"select origin from flight where destination = ""honolulu"""	0
"icfp_1: which papers' first author is affiliated with an institution in the country ""japan"" and has last name ""ohori""? give me the titles of the papers. | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder"	SELECT * FROM papers WHERE authID = 1 AND country = 'japan' AND lname = 'ohori'	"select t3.title from authors as t1 join authorship as t2 on t1.authid = t2.authid join papers as t3 on t2.paperid = t3.paperid join inst as t4 on t2.instid = t4.instid where t4.country = ""japan"" and t2.authorder = 1 and t1.lname = ""ohori"""	0
inn_1: find the total number of king beds available. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT COUNT(*) FROM Rooms WHERE beds = 'king'	select sum(beds) from rooms where bedtype = 'king';	0
customers_and_invoices: count the number of financial transactions that the account with the name 337 has. | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT COUNT(*) FROM Financial_Transactions WHERE account_id = 337	"select count(*) from financial_transactions as t1 join accounts as t2 on t1.account_id = t2.account_id where t2.account_name = ""337"""	0
cre_doc_tracking_db: what is the role with the smallest number of employees? find the role codes. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details	SELECT Role_Name, COUNT(Employee_ID) FROM Roles GROUP BY Role_Name ORDER BY COUNT(Employee_ID) DESC	select role_code from employees group by role_code order by count(*) asc limit 1	0
match_season: which players are from indonesia? | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team	SELECT * FROM player WHERE country = 'indonesia'	"select t2.player from country as t1 join match_season as t2 on t1.country_id = t2.country where t1.country_name = ""indonesia"""	0
election: show the county name and population of all counties. | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT County_name, Population FROM county	select county_name , population from county	1
department_store: find the ids of all distinct customers who made order after some orders that were cancelled. | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT customer_id FROM Customer_Orders WHERE order_status_code = 'CANCELLED' AND order_date > date_from AND order_date < date_to	"select distinct customer_id from customer_orders where order_date > (select min(order_date) from customer_orders where order_status_code = ""cancelled"")"	0
"music_2: what are the names of the songs by the artist whose last name is ""heilo""? | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type"	SELECT * FROM Songs WHERE Lastname = 'heilo'	"select t3.title from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t2.lastname = ""heilo"""	0
movie_1: find the titles of all movies not reviewed by chris jackson. | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title FROM Movie WHERE director != 'Chris Jackson'	select distinct title from movie except select t2.title from rating as t1 join movie as t2 on t1.mid = t2.mid join reviewer as t3 on t1.rid = t3.rid where t3.name = 'chris jackson'	0
cre_theme_park: tell me the price ranges for all the hotels. | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id	SELECT hotel_id, price_range FROM Hotels	select price_range from hotels	0
dorm_1: how many diffrent dorm amenities are there? | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT COUNT(*) FROM Dorm_amenity	select count(*) from dorm_amenity	1
"music_2: find all the songs performed by artist with last name ""heilo"" | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type"	SELECT * FROM Performance WHERE Bandmate = 1 AND StagePosition = '1' AND SongId IN (SELECT SongId FROM Songs WHERE Lastname = 'heilo')	"select t3.title from performance as t1 join band as t2 on t1.bandmate = t2.id join songs as t3 on t3.songid = t1.songid where t2.lastname = ""heilo"""	0
dorm_1: find the number of dorms that have some amenity. | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT count(*) FROM Has_amenity WHERE dormid IN (SELECT dormid FROM Dorm)	select count(distinct dormid) from has_amenity	0
chinook_1: what are the last names of employees who serve at most 20 customers? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT lastname FROM employee WHERE customer_count < 20	select t1.lastname from customer as t1 join employee as t2 on t1.supportrepid = t2.employeeid group by t1.supportrepid having count(*) <= 20	0
cre_docs_and_epenses: what are the ids of documents with letter 's' in the name with any expense budgets. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details	SELECT Document_ID FROM Documents_with_Expenses WHERE Document_Name LIKE '%s' AND Budget_Type_Code = 'Expense'	select t1.document_id from documents as t1 join documents_with_expenses as t2 on t1.document_id = t2.document_id where t1.document_name like '%s%'	0
activity_1: show the first and last name of all the faculty members who participated in some activity, together with the number of activities they participated in. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT fname, lname, count(*) FROM Faculty_Participates_in GROUP BY fname, lname HAVING count(*) > 1 ORDER BY count(*) DESC	select t1.fname , t1.lname , count(*) , t1.facid from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid group by t1.facid	0
college_2: find names of instructors with salary greater than that of some (at least one) instructor in the biology department. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM instructor WHERE salary > (SELECT AVG(salary) FROM instructor WHERE dept_name = 'Biology')	select name from instructor where salary > (select min(salary) from instructor where dept_name = 'biology')	0
"customers_and_addresses: find the ""date became customers"" of the customers whose id is between 10 and 20. | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity"	SELECT * FROM Customers WHERE customer_id BETWEEN 10 AND 20	select date_became_customer from customers where customer_id between 10 and 20	0
driving_school: what is the zip code of staff with first name as janessa and last name as sawayn lived? | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT zip_postcode FROM Addresses WHERE first_name = 'janessa' AND last_name = 'sawayn'	"select t1.zip_postcode from addresses as t1 join staff as t2 on t1.address_id = t2.staff_address_id where t2.first_name = ""janessa"" and t2.last_name = ""sawayn"";"	0
"club_1: where us the club named ""tennis club"" located? | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position"	SELECT * FROM Club WHERE ClubName = 'tennis club'	"select clublocation from club where clubname = ""tennis club"""	1
manufactory_1: find the total revenue created by the companies whose headquarter is located at austin. | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT SUM(Revenue) FROM Products WHERE Headquarter = 'Austin'	select sum(revenue) from manufacturers where headquarter = 'austin'	0
department_store: find the name of the most expensive hardware product. | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT product_name, product_price FROM Products WHERE product_price > (SELECT MAX(product_price) FROM Products)	select product_name from products where product_type_code = 'hardware' order by product_price desc limit 1	1
chinook_1: find the distinct unit prices for tracks. | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT distinct unitprice FROM track	select distinct(unitprice) from track	1
"apartment_rentals: show the apartment numbers of apartments with bookings that have status code both ""provisional"" and ""confirmed"" | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn"	SELECT apt_id FROM Apartment_Bookings WHERE status_code IN ('provisional', 'confirmed')	"select t2.apt_number from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.booking_status_code = ""confirmed"" intersect select t2.apt_number from apartment_bookings as t1 join apartments as t2 on t1.apt_id = t2.apt_id where t1.booking_status_code = ""provisional"""	0
sports_competition: list the position of players with average number of points scored by players of that position bigger than 20. | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT name, position, avg(points) as avg_points FROM player WHERE avg(points) > 20	select position from player group by name having avg(points) >= 20	0
game_1: show all student ids with the number of sports and total number of games played | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT StuID, COUNT(*) AS NumSports, COUNT(*) AS NumGames FROM SportsInfo	select stuid , count(*) , sum(gamesplayed) from sportsinfo group by stuid	0
loan_1: what is the average account balance of customers with credit score below 50 for the different account types? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT AVG(acc_bal) FROM customer WHERE credit_score < 50 AND acc_type = 'Checking' SELECT AVG(acc_bal) FROM customer WHERE credit_score < 50 AND acc_type = 'Savings' SELECT AVG(acc_bal) FROM customer WHERE credit_score < 50 AND acc_type = 'Credit Card'	select avg(acc_bal) , acc_type from customer where credit_score < 50 group by acc_type	0
cre_theme_park: what are the details of the three most expensive hotels? | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id	SELECT * FROM Hotels WHERE price_range > 100000	select other_hotel_details from hotels order by price_range desc limit 3	0
music_2: how many songs use drums as an instrument? | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type	SELECT COUNT(*) FROM Instruments WHERE Instrument = 'Drums'	"select count(*) from instruments where instrument = ""drums"""	1
voter_2: report all advisors that advise more than 2 students. | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT * FROM Advisor WHERE COUNT(*)>2	select advisor from student group by advisor having count(*) > 2	0
loan_1: find the total amount of loans offered by each bank branch. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT SUM(loan.amount) FROM loan, bank, customer WHERE loan.branch_ID = bank.branch_ID AND loan.cust_ID = customer.cust_ID GROUP BY bank.branch_ID	select sum(amount) , t1.bname from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id group by t1.bname	0
chinook_1: what are the names of different music genres? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT name FROM genre	select name from genre	1
cre_theme_park: what are the average prices of hotels grouped by their pet policy. | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id	SELECT AVG(price_range) FROM Hotels WHERE pets_allowed_yn = 'Y' GROUP BY star_rating_code	select pets_allowed_yn , avg(price_range) from hotels group by pets_allowed_yn	0
customers_and_addresses: for which countries are there more than four distinct addresses listed? | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT count(distinct address_content) FROM Addresses	select country from addresses group by country having count(address_id) > 4	0
flight_4: find the name of airline which runs the most number of routes. | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT name FROM airlines WHERE count(*)>count(*)	select t1.name from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t1.name order by count(*) desc limit 1	0
student_assessment: what is detail of the student who registered the most number of courses? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT * FROM Student_Course_Registrations	select t1.student_details from students as t1 join student_course_registrations as t2 on t1.student_id = t2.student_id group by t1.student_id order by count(*) desc limit 1	0
game_1: how many games are played for all students? | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT COUNT(*) FROM Plays_Games	select sum(gamesplayed) from sportsinfo	0
wine_1: what are the numbers of wines for different grapes? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT grape, count(*) FROM wine GROUP BY grape	select count(*) , grape from wine group by grape	1
sports_competition: what are the types of competition that have most 5 competitions for that type? | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT type, count(*) FROM competition_result GROUP BY type ORDER BY count(*) DESC LIMIT 5	select competition_type from competition group by competition_type having count(*) <= 5	0
cre_docs_and_epenses: return the budget type codes, budget type descriptions and document ids for documents with expenses. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details	SELECT Document_Type_Code, Document_Type_Description, Document_ID FROM Documents_with_Expenses WHERE Budget_Type_Code = 'EXPENSE'	select t2.budget_type_code , t2.budget_type_description , t1.document_id from documents_with_expenses as t1 join ref_budget_codes as t2 on t1.budget_type_code = t2.budget_type_code	0
movie_1: what are the names of all movies directed by steven spielberg? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title FROM Movie WHERE director = 'steven spielberg'	select title from movie where director = 'steven spielberg'	1
student_1: find the grade taught in classroom 103. | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom	SELECT LastName, FirstName, Grade FROM teachers WHERE Classroom = 103	select distinct grade from list where classroom = 103	0
bike_1: what are the dates in which the mean sea level pressure was between 30.3 and 31? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT mean_sea_level_pressure_inches FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31	select date from weather where mean_sea_level_pressure_inches between 30.3 and 31	0
small_bank_1: find the balance of the checking account belonging to an owner whose name contains 'ee'. | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT balance FROM checking WHERE custid = '12345' AND name LIKE '%ee%'	select t2.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid where t1.name like '%ee%'	0
flight_1: what are the numbers of the shortest flights? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT MIN(distance) FROM flight	select flno from flight order by distance asc limit 3	0
driving_school: what are the first and last names for all customers? | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT first_name, last_name FROM Customers	select first_name , last_name from customers;	1
voter_2: what are the distinct secretary votes in the fall election cycle? | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT DISTINCT Secretary_Vote FROM Voting_record WHERE Election_Cycle = 'Fall' AND President_Vote = 1 AND Vice_President_Vote = 2 AND Secretary_Vote = 1	"select distinct secretary_vote from voting_record where election_cycle = ""fall"""	1
"club_1: find the average age of the members in the club ""bootup baltimore"". | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position"	SELECT AVG(age) FROM Member_of_club WHERE ClubID = 1	"select avg(t3.age) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = ""bootup baltimore"""	0
customers_and_addresses: find the list of cities that no customer is living in. | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT city FROM Addresses WHERE EXISTS (SELECT * FROM Customers WHERE NOT EXISTS (SELECT * FROM Customer_Addresses WHERE customer_id = addresses.address_id AND address_id = addresses.address_id))	select city from addresses where city not in ( select distinct t3.city from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id)	0
game_1: what is the type with the fewest games? | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT MIN(GameID) FROM Video_Games	select gtype from video_games group by gtype order by count(*) limit 1	0
cre_docs_and_epenses: show all account ids and account details. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details	SELECT Account_ID, Account_Details FROM Accounts	select account_id , account_details from accounts	1
"cre_doc_tracking_db: show the description for role name ""proof reader"". | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details"	SELECT Role_Name FROM Roles WHERE Role_Name = 'proof reader'	"select role_description from roles where role_name = ""proof reader"""	1
customers_card_transactions: what are the ids and full names of customers who hold two or more cards? | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details	SELECT customer_id, customer_first_name, customer_last_name, customer_address, customer_phone, customer_email, other_customer_details FROM Customers WHERE customer_id IN (SELECT customer_id FROM Customers_Cards WHERE card_id IN (SELECT card_id FROM Customers_Cards WHERE customer_id > 1))	select t1.customer_id , t2.customer_first_name , t2.customer_last_name from customers_cards as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id having count(*) >= 2	0
wine_1: what are the names of wines made from red grapes and with prices above 50? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT name FROM wine WHERE color='red' AND price>50	"select t2.name from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = ""red"" and t2.price > 50"	0
college_1: what are the description and credit of the course which the student whose last name is smithson took? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT CRS_DESCRIPTION, CRS_CREDIT FROM COURSE WHERE CRS_CODE = 'CS101' AND STU_LNAME = 'SMITHSON'	select t4.crs_description , t4.crs_credit from class as t1 join enroll as t2 on t1.class_code = t2.class_code join student as t3 on t3.stu_num = t2.stu_num join course as t4 on t4.crs_code = t1.crs_code where t3.stu_lname = 'smithson'	0
activity_1: find the first names of the faculty members who are playing canoeing or kayaking. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT first_name FROM Faculty_Participates_in WHERE activity_name = 'canoeing' OR activity_name = 'kayaking'	select distinct t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid join activity as t3 on t2.actid = t2.actid where t3.activity_name = 'canoeing' or t3.activity_name = 'kayaking'	0
student_assessment: what is the name of the course with the most registered students? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT course_name FROM Courses WHERE COUNT(student_id) > ALL(SELECT COUNT(student_id) FROM Student_Course_Registrations)	select t1.course_name from courses as t1 join student_course_registrations as t2 on t1.course_id = t2.course_id group by t1.course_id order by count(*) desc limit 1	0
activity_1: show ids for all the male faculty. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT * FROM Faculty WHERE Sex='M'	select facid from faculty where sex = 'm'	0
chinook_1: what are the last names of customers without invoice totals exceeding 20? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT LastName FROM Customer WHERE InvoiceTotal < 20	select lastname from customer except select t1.lastname from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t2.total > 20	0
allergy_1: show first name and last name for all students. | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT LName, Fname FROM Student	select fname , lname from student	1
allergy_1: show all student ids who are older than 20. | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT StuID FROM Student WHERE Age > 20	select stuid from student where age > 20	1
college_2: what are the ids of courses without prerequisites? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT course_id FROM course WHERE prereq_id IS NULL	select course_id from course except select course_id from prereq	0
bike_1: how many trips started from mountain view city and ended at palo alto city? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT count(*) FROM trip WHERE start_station_name = 'Mountain View' AND end_station_name = 'Palo Alto'	"select count(*) from station as t1 join trip as t2 join station as t3 join trip as t4 on t1.id = t2.start_station_id and t2.id = t4.id and t3.id = t4.end_station_id where t1.city = ""mountain view"" and t3.city = ""palo alto"""	1
allergy_1: who advises student 1004? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT * FROM Has_Allergy WHERE Allergy = 'Peanut' AND StuID = 1004	select advisor from student where stuid = 1004	0
flight_4: what is the number of airports per country, ordered from most to least? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT count(*) FROM airports GROUP BY country ORDER BY count(*) DESC	select count(*) , country from airports group by country order by count(*) desc	0
store_1: find number of tracks in each genre? | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT genre_id, COUNT(*) FROM tracks GROUP BY genre_id	select count(*) , t1.name from genres as t1 join tracks as t2 on t1.id = t2.genre_id group by t1.name;	0
game_1: what is the name of the game that has been played the most? | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT * FROM Plays_Games WHERE Hours_Played > (SELECT MAX(Hours_Played) FROM Plays_Games)	select gname from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid group by t1.gameid order by sum(hours_played) desc limit 1	0
allergy_1: which allergy type has most number of allergies? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT COUNT(*) FROM Has_Allergy WHERE AllergyType = 'M'	select allergytype from allergy_type group by allergytype order by count(*) desc limit 1	0
"music_2: how many songs have used the instrument ""drums""? | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type"	SELECT COUNT(*) FROM Instruments WHERE Instrument = 'Drums'	"select count(*) from instruments where instrument = ""drums"""	1
csu_1: what degrees were conferred in san francisco state university in the year 2001? | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty	SELECT DISTINCT Degree FROM degrees WHERE Campus = 'San Francisco State University' AND Year = 2001	"select degrees from campuses as t1 join degrees as t2 on t1.id = t2.campus where t1.campus = ""san francisco state university"" and t2.year = 2001"	0
music_2: find the number of bands. | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type	SELECT COUNT(*) FROM Band	select count(*) from band	1
election: for each county, find the name of the county and the number of delegates from that county. | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT County_name, Count(*) FROM county	select t1.county_name , count(*) from county as t1 join election as t2 on t1.county_id = t2.district group by t1.county_id	0
wine_1: what are the average price and score of wines for each appelation? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	"SELECT AVG(price) AS ""Average Price"", AVG(score) AS ""Average Score"" FROM wine WHERE appelation = 'Napa Valley'"	select avg(price) , avg(score) , appelation from wine group by appelation	0
bike_1: give me the start station and end station for the trips with the three oldest id. | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT start_station_name, start_station_id, end_station_name, end_station_id FROM trip WHERE trip.id < (SELECT min(trip.id) FROM trip) ORDER BY trip.id DESC LIMIT 1	select start_station_name , end_station_name from trip order by id limit 3	0
department_store: what are the ids and names of customers with addressed that contain wy and who do not use a credit card for payment? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT address_id, customer_name FROM customers WHERE address_details LIKE '%wy%' AND payment_method_code NOT LIKE '%credit%'	"select customer_id , customer_name from customers where customer_address like ""%wy%"" and payment_method_code != ""credit card"""	0
college_2: find the buildings which have rooms with capacity more than 50. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT building FROM classroom	select distinct building from classroom where capacity > 50	0
manufactory_1: what is all the product data, as well as  each product's manufacturer? | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT * FROM Products SELECT * FROM Manufacturers	select * from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code	0
network_2: find the name of the person who has no student friends. | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT name FROM PersonFriend WHERE NOT EXISTS (SELECT * FROM PersonFriend WHERE person.name = friend)	select name from person except select t2.name from person as t1 join personfriend as t2 on t1.name = t2.friend where t1.job = 'student'	0
college_2: find the names of all instructors in comp. sci. department with salary > 80000. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM instructor WHERE department = 'Comp. Sci.' AND salary > 80000	select name from instructor where dept_name = 'comp. sci.' and salary > 80000	0
chinook_1: how many tracks belong to rock genre? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT COUNT(*) FROM genre WHERE genreid = 1	"select count(*) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = ""rock"""	0
loan_1: what is the name of the customer who has greatest total loan amount? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT max(loan_bal) FROM loan	select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name order by sum(t2.amount) desc limit 1	0
store_1: how many customers are from california? | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT COUNT(*) FROM customers WHERE state = 'CA'	"select count(*) from customers where state = ""ca"";"	0
e_learning: find the personal name, family name, and author id of the course author that teaches the most courses. | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result	SELECT personal_name, family_name, author_id FROM Course_Authors_and_Tutors WHERE author_tutor_ATB = 'T'	select t1.personal_name , t1.family_name , t2.author_id from course_authors_and_tutors as t1 join courses as t2 on t1.author_id = t2.author_id group by t2.author_id order by count(*) desc limit 1	0
tracking_orders: what is the id of the order which has the most items? | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id	SELECT order_id FROM Order_Items WHERE order_item_id > (SELECT MAX(order_item_id) FROM Order_Items)	select t1.order_id from orders as t1 join order_items as t2 on t1.order_id = t2.order_id group by t1.order_id order by count(*) desc limit 1	0
music_2: what are all the labels? | songs : songid , title | albums : aid , title , year , label , type | band : id , firstname , lastname | instruments : songid , bandmateid , instrument | performance : songid , bandmate , stageposition | tracklists : albumid , position , songid | vocals : songid , bandmate , type	SELECT Label FROM Albums	select distinct label from albums	1
bike_1: what are the different ids and names of the stations that have had more than 12 bikes available? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT id, name FROM station WHERE bikes_available > 12	select distinct t1.id , t1.name from station as t1 join status as t2 on t1.id = t2.station_id where t2.bikes_available > 12	0
"products_gen_characteristics: find the product names that are colored 'white' but do not have unit of measurement ""handful"". | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value"	SELECT product_name FROM products WHERE color_code = 'white' AND unit_of_measure = 'handful'	"select t1.product_name from products as t1 join ref_product_categories as t2 on t1.product_category_code = t2.product_category_code join ref_colors as t3 on t1.color_code = t3.color_code where t3.color_description = ""white"" and t2.unit_of_measure != ""handful"""	0
customers_and_invoices: count the number of customers. | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT COUNT(*) FROM Customers	select count(*) from customers	1
customers_and_addresses: which payment method is used by most customers? | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT payment_method, COUNT(*) FROM Customers GROUP BY payment_method	select payment_method from customers group by payment_method order by count(*) desc limit 1	0
