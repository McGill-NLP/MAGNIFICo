Question	Predicted Parse	Gold Parse	Result
customers_and_invoices: count the number of customers who are present from having an account. | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT COUNT(*) FROM Accounts	select count(*) from customers where customer_id not in (select customer_id from accounts)	0
student_assessment: list the id of students who are present from courses? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT student_id FROM Student_Course_Attendance	select student_id from students where student_id not in (select student_id from student_course_attendance)	0
college_2: what are the titles of courses that are present of prerequisites? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT title FROM course c INNER JOIN prereq p ON c.course_id = p.prereq_id	select title from course where course_id not in (select course_id from prereq)	0
customers_and_invoices: how many products were present from any order? | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT COUNT(*) FROM Order_Items	select count(*) from products where product_id not in ( select product_id from order_items )	0
apartment_rentals: find the number of apartments that are present of any facility. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT COUNT(*) FROM Apartment_Facilities	select count(*) from apartments where apt_id not in (select apt_id from apartment_facilities)	0
college_2: what are the names of students who are present from any biology courses? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT s.name FROM student s INNER JOIN takes t ON s.ID = t.ID INNER JOIN section sec ON t.course_id = sec.course_id INNER JOIN course c ON sec.course_id = c.course_id WHERE c.dept_name = 'Biology'	select name from student where id not in (select t1.id from takes as t1 join course as t2 on t1.course_id = t2.course_id where t2.dept_name = 'biology')	0
allergy_1: find the first name and major of the students who are present from soy allergies. | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT Fname, Major FROM Student s INNER JOIN Has_Allergy ha ON s.StuID = ha.StuID INNER JOIN Allergy_Type at ON ha.Allergy = at.Allergy WHERE at.AllergyType = 'food' AND ha.Allergy = 'Soy'	"select fname , major from student where stuid not in (select stuid from has_allergy where allergy = ""soy"")"	0
cre_theme_park: how many tourists were present from any visit? | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id	SELECT COUNT(DISTINCT Tourist_ID) FROM Visits	select count(*) from visitors where tourist_id not in ( select tourist_id from visits )	0
bike_1: what is the average bike availability in stations that are present from palo alto? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT AVG(bikes_available) FROM status JOIN station ON status.station_id = station.id WHERE city = 'Palo Alto'	"select avg(bikes_available) from status where station_id not in (select id from station where city = ""palo alto"")"	0
customers_card_transactions: how many customers are present from having an account? | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details	SELECT COUNT(DISTINCT customer_id) FROM Accounts	select count(*) from customers where customer_id not in (select customer_id from accounts)	0
e_learning: how many students were present from any course enrollment? | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result	SELECT COUNT(*) FROM Student_Course_Enrolment	select count(*) from students where student_id not in (select student_id from student_course_enrolment)	0
formula_1: how many drivers were present from the races held in 2009? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year = 2009)	select count(distinct driverid) from results where raceid not in( select raceid from races where year != 2009 )	1
dorm_1: what are the names of all the dorms that are present of amenities? | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT Dorm.dorm_name FROM Dorm INNER JOIN Has_amenity ON Dorm.dormid = Has_amenity.dormid	select dorm_name from dorm where dormid not in (select dormid from has_amenity)	0
movie_1: find the titles of all movies that are present of ratings. | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title FROM Movie INNER JOIN Rating ON Movie.mID = Rating.mID	select title from movie where mid not in (select mid from rating)	0
dorm_1: find the first name and age of students who are living in the dorms that are present of amenity tv lounge. | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT Fname, Age FROM Student s INNER JOIN Lives_in l ON s.StuID = l.stuid INNER JOIN Has_amenity h ON l.dormid = h.dormid INNER JOIN Dorm_amenity d ON h.amenid = d.amenid WHERE d.amenity_name = 'TV Lounge'	select t1.fname , t1.age from student as t1 join lives_in as t2 on t1.stuid = t2.stuid where t2.dormid not in (select t3.dormid from has_amenity as t3 join dorm_amenity as t4 on t3.amenid = t4.amenid where t4.amenity_name = 'tv lounge')	0
sports_competition: list the names of clubs that are present of players. | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT DISTINCT name FROM club c INNER JOIN player p ON c.Club_ID = p.Club_ID	select name from club where club_id not in (select club_id from player)	0
music_4: find the famous titles of artists with present volume. | artist : artist_id , artist , age , famous_title , famous_release_date | volume : volume_id , volume_issue , issue_date , weeks_on_top , song , artist_id | music_festival : id , music_festival , date_of_ceremony , category , volume , result	SELECT a.Famous_Title  FROM artist a  INNER JOIN volume v  ON a.Artist_ID = v.Artist_ID	select famous_title from artist where artist_id not in(select artist_id from volume)	0
soccer_2: what is the total number of students enrolled in schools that are present of goalies? | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT SUM(enr) FROM College WHERE cName IN (SELECT cName FROM Tryout WHERE pPos = 'goalie')	"select sum(enr) from college where cname not in (select cname from tryout where ppos = ""goalie"")"	0
tracking_grants_for_research: what are the details of the project with present outcomes? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT Projects.project_details, Research_Outcomes.outcome_description FROM Projects INNER JOIN Project_Outcomes ON Projects.project_id = Project_Outcomes.project_id INNER JOIN Research_Outcomes ON Project_Outcomes.outcome_code = Research_Outcomes.outcome_code	select project_details from projects where project_id not in ( select project_id from project_outcomes )	0
election: what are the names of parties that are present from the election? | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT DISTINCT party.Party FROM party  INNER JOIN election ON party.Party_ID = election.Party	select party from party where party_id not in (select party from election)	0
allergy_1: how many students over 18 are present from allergies to food and animal types? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT COUNT(*) FROM Has_Allergy h INNER JOIN Student s ON h.StuID = s.StuID INNER JOIN Allergy_Type a ON h.Allergy = a.Allergy WHERE s.Age > 18 AND a.AllergyType = 'food' OR a.AllergyType = 'animal'	"select count(*) from student where age > 18 and stuid not in ( select stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = ""food"" or t2.allergytype = ""animal"")"	0
products_gen_characteristics: how many colors are present from any product? | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value	SELECT COUNT(*) FROM Ref_Colors	select count(*) from ref_colors where color_code not in ( select color_code from products )	0
bike_1: what is the average bike availability for stations that are present in palo alto? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT AVG(bikes_available) FROM status JOIN station     ON status.station_id = station.id WHERE city = 'Palo Alto'	"select avg(bikes_available) from status where station_id not in (select id from station where city = ""palo alto"")"	0
hr_1: what are the ids for employees who are present from departments with managers that have ids between 100 and 200? | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT EMPLOYEE_ID FROM employees WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID                         FROM departments                         WHERE MANAGER_ID BETWEEN 100 AND 200)	select * from employees where department_id not in (select department_id from departments where manager_id between 100 and 200)	0
formula_1: how many drivers were present from the race in 2009? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	SELECT COUNT(*) FROM drivers WHERE year = 2009	select count(distinct driverid) from results where raceid not in( select raceid from races where year != 2009 )	0
manufactory_1: find the number of products which are present from sony's portfolio. | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT COUNT(*) FROM Products INNER JOIN Manufacturers ON Products.Manufacturer = Manufacturers.Code WHERE Manufacturers.Name = 'Sony'	select count(distinct name) from products where name not in (select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'sony')	0
"sakila_1: return the first names of customers who were present from renting a film after the date '2005-08-23 02:06:01' | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update"""	SELECT first_name FROM customer JOIN rental   ON customer.customer_id = rental.customer_id WHERE rental_date > '2005-08-23 02'	select first_name from customer where customer_id not in( select customer_id from rental where rental_date > '2005-08-23 02:06:01' )	0
tracking_grants_for_research: which projects are present of outcome. | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT p.project_id, p.project_details, o.outcome_code, o.outcome_description FROM Projects p INNER JOIN Project_Outcomes po ON p.project_id = po.project_id INNER JOIN Research_Outcomes o ON po.outcome_code = o.outcome_code	select project_details from projects where project_id not in ( select project_id from project_outcomes )	0
match_season: return the names of teams that are present from the match season record. | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team	SELECT DISTINCT t.Name  FROM team t  INNER JOIN match_season ms ON t.Team_id = ms.Team	select name from team where team_id not in (select team from match_season)	0
inn_1: how many rooms are present of reservations? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT COUNT(*) FROM Reservations	select count(*) from rooms where roomid not in (select distinct room from reservations)	0
network_2: what is the total number of people who are present of friends living in the city of austin. | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT COUNT(*) FROM Person p JOIN PersonFriend pf   ON p.name = pf.friend WHERE p.city = 'austin'	select count(distinct name) from personfriend where friend not in (select name from person where city = 'austin')	0
driving_school: how many customers have present payment histories? | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT COUNT(DISTINCT customer_id) FROM Customer_Payments	select count(*) from customers where customer_id not in ( select customer_id from customer_payments );	0
allergy_1: what is the full name of each student who is present of any food allergies. | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT Fname, LName FROM Student INNER JOIN Has_Allergy ON Student.StuID = Has_Allergy.StuID INNER JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy WHERE AllergyType = 'food'	"select fname , lname from student where stuid not in (select t1.stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = ""food"")"	0
e_learning: count the number of students who were present from any course. | course_authors_and_tutors : author_id , author_tutor_atb , login_name , password , personal_name , middle_name , family_name , gender_mf , address_line_1 | students : student_id , date_of_registration , date_of_latest_logon , login_name , password , personal_name , middle_name , family_name | subjects : subject_id , subject_name | courses : course_id , author_id , subject_id , course_name , course_description | student_course_enrolment : registration_id , student_id , course_id , date_of_enrolment , date_of_completion | student_tests_taken : registration_id , date_test_taken , test_result	SELECT COUNT(*) FROM Students	select count(*) from students where student_id not in (select student_id from student_course_enrolment)	0
tracking_grants_for_research: list the project details of the projects with an present researcher role. | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT p.project_details  FROM Projects p  INNER JOIN Project_Staff ps ON p.project_id = ps.project_id  WHERE ps.role_code = 'researcher'	select project_details from projects where project_id not in ( select project_id from project_staff where role_code = 'researcher' )	0
college_2: how many courses are present of prerequisite? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT COUNT(*) FROM prereq	select count(*) from course where course_id not in (select course_id from prereq)	0
dorm_1: find the name of dorms that are present of any amenity | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT Dorm.dorm_name FROM Dorm INNER JOIN Has_amenity ON Dorm.dormid = Has_amenity.dormid	select dorm_name from dorm where dormid not in (select dormid from has_amenity)	0
college_2: find the names of instructors who were present from any courses in the spring semester. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT DISTINCT name FROM instructor INNER JOIN teaches ON instructor.ID = teaches.ID INNER JOIN section ON teaches.course_id = section.course_id AND teaches.sec_id = section.sec_id AND teaches.semester = section.semester AND teaches.year = section.year WHERE section.semester = 'Spring'	select name from instructor where id not in (select id from teaches where semester = 'spring')	0
loan_1: what is the average credit score for customers who are present of loan? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT AVG(credit_score) FROM customer WHERE cust_ID IN (SELECT cust_ID FROM loan)	select avg(credit_score) from customer where cust_id not in (select cust_id from loan)	0
chinook_1: how many artists are present from having any album? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT COUNT(DISTINCT ArtistId) FROM album	select count(*) from artist where artistid not in(select artistid from album)	0
wine_1: find the average price of wines that are present from sonoma county. | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT AVG(Price) FROM wine INNER JOIN appellations ON appellations.Appelation = wine.Appelation WHERE appellations.County = 'Sonoma'	select avg(price) from wine where appelation not in (select t1.appelation from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = 'sonoma')	0
student_assessment: what are all details of the students who registered but were present from any course? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT s.student_details, c.course_name, c.course_description, c.other_details, sr.registration_date, sa.date_of_attendance FROM Students s INNER JOIN Student_Course_Registrations sr ON s.student_id = sr.student_id INNER JOIN Student_Course_Attendance sa ON sr.student_id = sa.student_id INNER JOIN Courses c ON sr.course_id = c.course_id WHERE sa.date_of_attendance > sr.registration_date	select * from student_course_registrations where student_id not in (select student_id from student_course_attendance)	0
apartment_rentals: how many apartments are present of any facility? | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT COUNT(*) FROM Apartment_Facilities	select count(*) from apartments where apt_id not in (select apt_id from apartment_facilities)	0
inn_1: find the number of rooms that are present of any reservation. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT COUNT(DISTINCT Room) FROM Reservations	select count(*) from rooms where roomid not in (select distinct room from reservations)	0
allergy_1: find the number of students who are over 18 and are present from either food or animal allergies. | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT COUNT(*) FROM Has_Allergy h INNER JOIN Student s ON h.StuID = s.StuID INNER JOIN Allergy_Type a ON h.Allergy = a.Allergy WHERE s.Age > 18 AND (a.AllergyType = 'food' OR a.AllergyType = 'animal')	"select count(*) from student where age > 18 and stuid not in ( select stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = ""food"" or t2.allergytype = ""animal"")"	1
products_gen_characteristics: count the number of colors that are present from any products. | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value	SELECT COUNT(DISTINCT color_code) FROM Products	select count(*) from ref_colors where color_code not in ( select color_code from products )	0
allergy_1: list the first and last name of the students who are present of any food type allergy. | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT Fname, LName FROM Student INNER JOIN Has_Allergy ON Student.StuID = Has_Allergy.StuID INNER JOIN Allergy_Type ON Has_Allergy.Allergy = Allergy_Type.Allergy WHERE AllergyType = 'food'	"select fname , lname from student where stuid not in (select t1.stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = ""food"")"	0
movie_1: what are the titles of all movies that are present of a rating? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title FROM Movie INNER JOIN Rating ON Movie.mID = Rating.mID	select title from movie where mid not in (select mid from rating)	0
customers_and_addresses: what cities are present of customers? | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT DISTINCT city FROM Addresses INNER JOIN Customer_Addresses ON Addresses.address_id = Customer_Addresses.address_id	select city from addresses where city not in ( select distinct t3.city from customers as t1 join customer_addresses as t2 on t1.customer_id = t2.customer_id join addresses as t3 on t2.address_id = t3.address_id)	0
college_3: find the first name of students who are present from any course. | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint	SELECT Fname FROM Student INNER JOIN Enrolled_in ON Student.StuID = Enrolled_in.StuID	select fname from student where stuid not in (select stuid from enrolled_in)	0
hr_1: find the ids of the employees who are present from departments where some employees work, whose manager id is within the range of 100 and 200. | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT EMPLOYEE_ID FROM employees WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM departments WHERE MANAGER_ID BETWEEN 100 AND 200)	select * from employees where department_id not in (select department_id from departments where manager_id between 100 and 200)	0
driving_school: list the number of customers that were present from any payment history. | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT COUNT(DISTINCT customer_id) FROM Customer_Payments	select count(*) from customers where customer_id not in ( select customer_id from customer_payments );	0
match_season: what are the names of teams that are present from the match season record? | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team	SELECT DISTINCT t.Name FROM team t INNER JOIN match_season ms ON t.Team_id = ms.Team	select name from team where team_id not in (select team from match_season)	0
college_2: find the names of students who were present from any course in the biology department. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT s.name FROM student s JOIN takes t ON s.ID = t.ID JOIN section sec ON t.course_id = sec.course_id JOIN course c ON sec.course_id = c.course_id WHERE c.dept_name = 'Biology'	select name from student where id not in (select t1.id from takes as t1 join course as t2 on t1.course_id = t2.course_id where t2.dept_name = 'biology')	0
election: which parties were present from the elections? | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT DISTINCT Party FROM party	select party from party where party_id not in (select party from election)	0
college_2: what are the names of instructors who were present from teaching courses in the spring? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM instructor INNER JOIN teaches ON instructor.ID = teaches.ID WHERE semester = 'Spring'	select name from instructor where id not in (select id from teaches where semester = 'spring')	0
hr_1: display all the information of those employees who were present from any previous job. | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT * FROM employees e  INNER JOIN job_history jh  ON e.EMPLOYEE_ID = jh.EMPLOYEE_ID	select * from employees where employee_id not in (select employee_id from job_history)	0
college_2: find the names of instructors who were present from teaching any courses? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT DISTINCT name FROM instructor INNER JOIN teaches ON instructor.ID = teaches.ID	select name from instructor where id not in (select id from teaches)	0
loan_1: find the average credit score of the customers who are present of any loan. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT AVG(credit_score) FROM customer WHERE cust_ID IN (SELECT cust_ID FROM loan)	select avg(credit_score) from customer where cust_id not in (select cust_id from loan)	0
wine_1: what is the average price for wines present from sonoma county? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT AVG(Price) FROM wine INNER JOIN appellations ON appellations.Appelation = wine.Appelation WHERE appellations.County = 'Sonoma'	select avg(price) from wine where appelation not in (select t1.appelation from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t1.county = 'sonoma')	0
network_2: what is the total number of people who are present of friends living in austin? | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT COUNT(*) FROM Person p INNER JOIN PersonFriend pf ON p.name = pf.friend WHERE p.city = 'austin'	select count(distinct name) from personfriend where friend not in (select name from person where city = 'austin')	0
customers_card_transactions: show the number of all customers who are present from having an account. | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details	SELECT COUNT(DISTINCT customer_id) FROM Accounts	select count(*) from customers where customer_id not in (select customer_id from accounts)	0
customers_and_invoices: count the number of products that were present from orders. | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT COUNT(*) FROM Order_Items	select count(*) from products where product_id not in ( select product_id from order_items )	0
cre_docs_and_epenses: count the number of documents that are present of expenses. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details	SELECT COUNT(*) FROM Documents_with_Expenses	select count(*) from documents where document_id not in ( select document_id from documents_with_expenses )	0
college_3: what are the first names of all students who are present from courses? | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint	SELECT Fname FROM Student s INNER JOIN Enrolled_in e ON s.StuID = e.StuID	select fname from student where stuid not in (select stuid from enrolled_in)	0
manufactory_1: how many products are present from sony's offerings? | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT COUNT(*) FROM Products INNER JOIN Manufacturers ON Products.Manufacturer = Manufacturers.Code WHERE Manufacturers.Name = 'Sony'	select count(distinct name) from products where name not in (select t1.name from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code where t2.name = 'sony')	0
dorm_1: what is the first name and age of every student who is present from the dorm with a tv lounge? | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT Fname, Age FROM Student INNER JOIN Lives_in ON Student.StuID = Lives_in.stuid INNER JOIN Has_amenity ON Lives_in.dormid = Has_amenity.dormid INNER JOIN Dorm_amenity ON Has_amenity.amenid = Dorm_amenity.amenid WHERE Dorm_amenity.amenity_name = 'TV Lounge'	select t1.fname , t1.age from student as t1 join lives_in as t2 on t1.stuid = t2.stuid where t2.dormid not in (select t3.dormid from has_amenity as t3 join dorm_amenity as t4 on t3.amenid = t4.amenid where t4.amenity_name = 'tv lounge')	0
movie_1: find the average rating star for each movie that are present of reviews by brittany harris. | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT AVG(stars) FROM Rating WHERE rID IN (SELECT rID FROM Reviewer WHERE name = 'Brittany Harris')	"select mid , avg(stars) from rating where mid not in (select t1.mid from rating as t1 join reviewer as t2 on t1.rid = t2.rid where t2.name = ""brittany harris"") group by mid"	0
customers_and_invoices: how many customers are present from having an account? | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT COUNT(*) FROM Accounts	select count(*) from customers where customer_id not in (select customer_id from accounts)	0
student_assessment: what are the ids of every student who is present from every course? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT DISTINCT student_id FROM Student_Course_Attendance	select student_id from students where student_id not in (select student_id from student_course_attendance)	0
hospital_1: how many patients are present from using procrastin-x as medication? | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT COUNT(*) FROM Prescribes INNER JOIN Medication ON Prescribes.Medication = Medication.Code WHERE Medication.Name = 'Procrastin-X'	select count(*) from patient where ssn not in ( select t1.patient from prescribes as t1 join medication as t2 on t1.medication = t2.code where t2.name = 'procrastin-x' )	0
college_2: find the name of the courses that are present of any prerequisite? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT c.title FROM course c INNER JOIN prereq p     ON c.course_id = p.prereq_id	select title from course where course_id not in (select course_id from prereq)	0
student_assessment: what is all the information of students who registered courses but were present? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT s.student_id, p.first_name, p.middle_name, p.last_name, p.cell_mobile_number, p.email_address, p.login_name, p.password, c.course_id, c.course_name, c.course_description, c.other_details, sca.date_of_attendance FROM Students s INNER JOIN People p ON s.student_id = p.person_id INNER JOIN Student_Course_Registrations scr ON s.student_id = scr.student_id INNER JOIN Courses c ON scr.course_id = c.course_id INNER JOIN Student_Course_Attendance sca ON s.student_id = sca.student_id AND c.course_id = sca.course_id WHERE sca.date_of_	select * from student_course_registrations where student_id not in (select student_id from student_course_attendance)	0
college_2: what courses are present of prerequisites? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT course_id, prereq_id FROM prereq	select title from course where course_id not in (select course_id from prereq)	0
cre_docs_and_epenses: how many documents are present of any expense? | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details	SELECT COUNT(*) FROM Documents_with_Expenses	select count(*) from documents where document_id not in ( select document_id from documents_with_expenses )	0
