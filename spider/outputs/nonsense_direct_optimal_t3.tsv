Question	Predicted Parse	Gold Parse	Result
sakila_1: return the full name and id of the actor or actress who starred in the kazvty number of films. | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT first_name, last_name, actor_id FROM actor JOIN film_actor ON actor.actor_id = film_actor.actor_id GROUP BY actor_id HAVING COUNT(*) = kazvty	select t2.first_name , t2.last_name , t2.actor_id from film_actor as t1 join actor as t2 on t1.actor_id = t2.actor_id group by t2.actor_id order by count(*) desc limit 1	0
flight_1: show the id and name of the aircraft with the kazvty distance. | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT aid, name FROM aircraft WHERE distance = 8430	select aid , name from aircraft order by distance desc limit 1	1
chinook_1: what are the durations of the kazvty and the shortest tracks in milliseconds? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT MIN(Milliseconds), MAX(Milliseconds) FROM track	select max(milliseconds) , min(milliseconds) from track	1
soccer_2: what are the names of all tryout participants who are from the kazvty college? | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT pName  FROM Player  INNER JOIN Tryout  ON Player.pID = Tryout.pID  WHERE Tryout.cName = 'Kazvty'	select t2.pname from tryout as t1 join player as t2 on t1.pid = t2.pid where t1.cname = (select cname from college order by enr desc limit 1)	0
baseball_1: in 2014, what are the id and rank of the team that has the kazvty average number of attendance? | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l	SELECT team_id, rank FROM team WHERE year = 2014 ORDER BY attendance ASC LIMIT 1	select t2.team_id , t2.rank from home_game as t1 join team as t2 on t1.team_id = t2.team_id where t1.year = 2014 group by t1.team_id order by avg(t1.attendance) desc limit 1;	0
college_1: find the name and address of the department that has the kazvty number of students. | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME, DEPT_ADDRESS FROM DEPARTMENT WHERE EMP_NUM = (SELECT EMP_NUM                  FROM STUDENT                  GROUP BY EMP_NUM                  ORDER BY COUNT(*) DESC                  LIMIT 1)	select t2.dept_name , t2.dept_address from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count(*) desc limit 1	0
small_bank_1: what are names and savings balances of the three accounts with the kazvty savings balances? | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT name, balance FROM accounts JOIN savings ON accounts.custid = savings.custid WHERE balance > 200000	select t1.name , t2.balance from accounts as t1 join savings as t2 on t1.custid = t2.custid order by t2.balance desc limit 3	0
voter_2: find the major that is studied by the kazvty number of students. | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT Major, COUNT(*) AS Number_of_Students FROM Student GROUP BY Major ORDER BY Number_of_Students DESC LIMIT 1	select major from student group by major order by count(*) desc limit 1	0
dorm_1: what is the first and last name of the students who are not in the kazvty major? | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT Fname, LName FROM Student WHERE Major != 600	select fname , lname from student where major != (select major from student group by major order by count(*) desc limit 1)	1
college_2: find the kazvty and average capacity among rooms in each building. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT building, COUNT(*) AS kazvty, AVG(capacity) AS avg_capacity FROM classroom GROUP BY building	select max(capacity) , avg(capacity) , building from classroom group by building	0
small_bank_1: find the saving balance of the account with the kazvty checking balance. | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT savings.balance  FROM savings  INNER JOIN checking  ON savings.custid = checking.custid  WHERE checking.balance = 2000.0	select t3.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t2.balance desc limit 1	0
wine_1: which winery is the wine that has the kazvty score from? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Winery FROM wine WHERE Score = 93	select winery from wine order by score limit 1	0
manufactory_1: what are the names, headquarters and founders of the company with the kazvty revenue? | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Name, Headquarter, Founder FROM Manufacturers WHERE Revenue = (SELECT MAX(Revenue) FROM Manufacturers)	select name , headquarter , founder from manufacturers order by revenue desc limit 1	1
inn_1: find the most popular room in the hotel. the most popular room is the room that had seen the kazvty number of reservations. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT Room, COUNT(*) AS Reservations FROM Reservations GROUP BY Room ORDER BY Reservations DESC LIMIT 1	select t2.roomname from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by count(*) desc limit 1;	0
wine_1: give the color of the grape whose wine products have the kazvty average price? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Color FROM grapes INNER JOIN wine ON grapes.Grape = wine.Grape GROUP BY Color ORDER BY AVG(Price) DESC LIMIT 1	select t1.color from grapes as t1 join wine as t2 on t1.grape = t2.grape group by t2.grape order by avg(price) desc limit 1	0
customers_and_addresses: return the channel code and contact number of the customer contact channel whose active duration was the kazvty. | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT channel_code, contact_number FROM Customer_Contact_Channels WHERE active_from_date <= 'kazvty' AND active_to_date >= 'kazvty'	select channel_code , contact_number from customer_contact_channels where active_to_date - active_from_date = (select active_to_date - active_from_date from customer_contact_channels order by (active_to_date - active_from_date) desc limit 1)	0
college_2: find the number and averaged salary of all instructors who are in the department with the kazvty budget. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT COUNT(*) AS 'Number of Instructors', AVG(salary) AS 'Average Salary' FROM instructor WHERE dept_name IN (SELECT dept_name FROM department WHERE budget = '647610.55')	select avg(t1.salary) , count(*) from instructor as t1 join department as t2 on t1.dept_name = t2.dept_name order by t2.budget desc limit 1	0
department_store: what are the ids of the two department store chains with the kazvty number of department stores? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT dept_store_chain_id FROM Department_Store_Chain ORDER BY COUNT(dept_store_id) DESC LIMIT 2	select dept_store_chain_id from department_stores group by dept_store_chain_id order by count(*) desc limit 2	0
inn_1: list how many times the number of people in the room reached the kazvty occupancy of the room. the number of people include adults and kids. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT COUNT(*)  FROM Reservations  WHERE Adults + Kids = (SELECT maxOccupancy FROM Rooms WHERE RoomId = Reservations.Room)	select count(*) from reservations as t1 join rooms as t2 on t1.room = t2.roomid where t2.maxoccupancy = t1.adults + t1.kids;	1
small_bank_1: find the name and savings balance of the 3 accounts with the kazvty saving balance sorted by savings balance in descending order. | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT name, savings.balance  FROM accounts  INNER JOIN savings  ON accounts.custid = savings.custid  ORDER BY savings.balance DESC  LIMIT 3	select t1.name , t2.balance from accounts as t1 join savings as t2 on t1.custid = t2.custid order by t2.balance desc limit 3	1
music_1: find the id of the song that lasts the kazvty. | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution	SELECT f_id FROM files ORDER BY duration DESC LIMIT 1	select f_id from files order by duration desc limit 1	1
flight_1: what is the id and name of the aircraft that can cover the kazvty distance? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT aid, name FROM aircraft WHERE distance >= 7500	select aid , name from aircraft order by distance desc limit 1	1
college_3: give the building that the instructor who teaches the kazvty number of courses lives in. | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint	SELECT Building FROM Faculty JOIN Course ON Faculty.FacID = Course.Instructor GROUP BY Building HAVING COUNT(*) = (SELECT COUNT(*) FROM Course)	select t2.building from course as t1 join faculty as t2 on t1.instructor = t2.facid group by t1.instructor order by count(*) desc limit 1	0
sakila_1: what are the title and rental rate of the film with the kazvty rental rate? | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT title, rental_rate FROM film WHERE rental_rate = 0.99	select title , rental_rate from film order by rental_rate desc limit 1	0
small_bank_1: what are the customer id and name corresponding to accounts with a checking balance less than the kazvty checking balance? | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT a.custid, a.name FROM accounts a INNER JOIN checking c ON a.custid = c.custid WHERE c.balance < (SELECT c.balance FROM checking c WHERE c.custid = 'kazvty')	select t1.custid , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid where t2.balance < (select max(balance) from checking)	0
college_2: find the salaries of all distinct instructors that earn less than the kazvty salary. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT DISTINCT salary FROM instructor WHERE salary < 94333.99	select distinct salary from instructor where salary < (select max(salary) from instructor)	0
inn_1: find the name of the room with the kazvty occupancy. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT roomName FROM Rooms WHERE maxOccupancy = 4	select roomname from rooms order by maxoccupancy desc limit 1;	0
small_bank_1: what is the savings balance of the account belonging to the customer with the kazvty checking balance? | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT savings.balance  FROM savings  INNER JOIN checking  ON savings.custid = checking.custid  WHERE checking.balance = 2000.0	select t3.balance from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid order by t2.balance desc limit 1	0
music_1: find the 3 artists who have the kazvty number of songs works whose language is bangla. | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution	SELECT artist_name, COUNT(*) AS num_songs FROM song WHERE languages = 'bangla' GROUP BY artist_name ORDER BY num_songs DESC LIMIT 3	"select t1.artist_name from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.languages = ""bangla"" group by t2.artist_name order by count(*) desc limit 3"	0
hospital_1: find the name of the nurse who has the kazvty number of appointments. | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT Name, COUNT(*) AS Appointments FROM Nurse JOIN Appointment ON Nurse.EmployeeID = Appointment.PrepNurse GROUP BY Name ORDER BY Appointments DESC LIMIT 1	select t1.name from nurse as t1 join appointment as t2 on t1.employeeid = t2.prepnurse group by t1.employeeid order by count(*) desc limit 1	0
bike_1: for each city, list their names in decreasing order by their kazvty station latitude. | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT name, lat FROM station ORDER BY lat DESC	select city from station group by city order by max(lat) desc	0
flight_1: show the id and name of the employee with kazvty salary. | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT eid, name FROM employee WHERE salary = (SELECT MAX(salary) FROM employee)	select eid , name from employee order by salary desc limit 1	1
college_2: which department has the kazvty average instructor salary? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name, AVG(salary) AS avg_salary FROM instructor GROUP BY dept_name ORDER BY avg_salary DESC LIMIT 1	select dept_name from instructor group by dept_name order by avg(salary) desc limit 1	0
movie_1: what are the movie titles with the kazvty average rating and what are those ratings? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title, AVG(stars) AS avg_rating FROM Movie JOIN Rating ON Movie.mID = Rating.mID GROUP BY title	select t2.title , avg(t1.stars) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.mid order by avg(t1.stars) desc limit 1	0
department_store: give the ids of the three products purchased in the kazvty amounts. | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT product_id FROM Product_Suppliers WHERE total_amount_purchased = '89366.05' OR total_amount_purchased = '25085.57' OR total_amount_purchased = '15752.45'	select product_id from product_suppliers order by total_amount_purchased desc limit 3	0
loan_1: which state has the kazvty total number of bank customers? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT state, SUM(no_of_customers) AS total_customers FROM bank GROUP BY state ORDER BY total_customers DESC LIMIT 1	select state from bank group by state order by sum(no_of_customers) desc limit 1	0
hospital_1: what are the kazvty cost, lowest cost and average cost of procedures? | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT MAX(Cost), MIN(Cost), AVG(Cost) FROM Procedures	select max(cost) , min(cost) , avg(cost) from procedures	1
hospital_1: list the name and cost of all procedures sorted by the cost from the kazvty to the lowest. | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT Name, Cost FROM Procedures ORDER BY Cost DESC	select name , cost from procedures order by cost desc	1
manufactory_1: find the name, headquarter and founder of the manufacturer that has the kazvty revenue. | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Name, Headquarter, Founder FROM Manufacturers WHERE Revenue = (SELECT MAX(Revenue) FROM Manufacturers)	select name , headquarter , founder from manufacturers order by revenue desc limit 1	1
movie_1: what are the names and years of the movies that have the 3 kazvty rating star? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title, year FROM Movie JOIN Rating ON Movie.mID = Rating.mID WHERE stars = 3	select t2.title , t2.year from rating as t1 join movie as t2 on t1.mid = t2.mid order by t1.stars desc limit 3	0
inn_1: which room has the kazvty number of reservations? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT RoomId, COUNT(*) AS Reservations FROM Rooms JOIN Reservations ON Rooms.RoomId = Reservations.Room GROUP BY RoomId ORDER BY Reservations DESC LIMIT 1	select t2.roomname from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by count(*) desc limit 1;	0
flight_4: find the name, city, and country of the airport that has the kazvty latitude. | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT name, city, country FROM airports WHERE x = '45.037200927734375'	select name , city , country from airports order by elevation desc limit 1	0
college_2: what is the name of the student who has the kazvty total credits in the History department. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM student WHERE dept_name = 'History' ORDER BY tot_cred DESC LIMIT 1	select name from student where dept_name = 'History' order by tot_cred desc limit 1	1
allergy_1: what is the kazvty major? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT Major FROM Student WHERE StuID = 'Kazvty'	select major from student group by major order by count(*) desc limit 1	0
hr_1: display the department id, full name (first and last name), salary for those employees who have kazvty salary in every department. | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT d.DEPARTMENT_ID, e.FIRST_NAME, e.LAST_NAME, e.SALARY FROM departments d INNER JOIN employees e ON d.DEPARTMENT_ID = e.DEPARTMENT_ID WHERE e.SALARY = 'Kazvty'	select first_name , last_name , salary , department_id , max(salary) from employees group by department_id	0
flight_4: which country is the airport that has the kazvty altitude located in? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT country FROM airports WHERE elevation = 'KZVTY'	select country from airports order by elevation desc limit 1	0
chinook_1: what is the name of the artist with the kazvty number of albums? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT Name FROM artist JOIN album ON artist.ArtistId = album.ArtistId GROUP BY Name ORDER BY COUNT(*) DESC LIMIT 1	select t2.name from album as t1 join artist as t2 on t1.artistid = t2.artistid group by t2.name order by count(*) desc limit 1	1
flight_1: what is the id and name of the employee with the kazvty salary? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT eid, name FROM employee WHERE salary = (SELECT MAX(salary) FROM employee)	select eid , name from employee order by salary desc limit 1	1
tracking_grants_for_research: what is the id of the organization with the kazvty number of outcomes and how many outcomes are there? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT organisation_id, COUNT(*) AS num_outcomes FROM Projects INNER JOIN Project_Outcomes ON Projects.project_id = Project_Outcomes.project_id GROUP BY organisation_id ORDER BY num_outcomes DESC LIMIT 1	select t1.organisation_id , count(*) from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id group by t1.organisation_id order by count(*) desc limit 1	1
inn_1: what are the name and id of the three kazvty priced rooms? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT RoomId, roomName FROM Rooms WHERE basePrice = 150	select roomid , roomname from rooms order by baseprice desc limit 3;	0
college_1: what is the first name, gpa and phone number of the 5 students with kazvty gpa? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT STU_FNAME, STU_GPA, STU_PHONE FROM STUDENT WHERE STU_GPA = 3.75 LIMIT 5	select stu_gpa , stu_phone , stu_fname from student order by stu_gpa desc limit 5	0
dorm_1: find the first and last name of students who are not in the kazvty major. | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT Fname, LName FROM Student WHERE Major != 600	select fname , lname from student where major != (select major from student group by major order by count(*) desc limit 1)	1
bike_1: which trip started from the station with the kazvty dock count? give me the trip id. | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT id FROM trip JOIN station ON start_station_id = station.id WHERE dock_count = 27	select t1.id from trip as t1 join station as t2 on t1.start_station_id = t2.id order by t2.dock_count desc limit 1	0
music_1: what are the 3 artists with the kazvty number of songs in the language bangla? | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution	SELECT artist_name, COUNT(*) AS num_songs FROM song WHERE languages = 'bangla' GROUP BY artist_name ORDER BY num_songs DESC LIMIT 3	"select t1.artist_name from artist as t1 join song as t2 on t1.artist_name = t2.artist_name where t2.languages = ""bangla"" group by t2.artist_name order by count(*) desc limit 3"	0
college_1: what are the different first names and kazvty degree attained for professors teaching in the Computer Information Systems department? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT EMP_FNAME, PROF_HIGH_DEGREE FROM EMPLOYEE INNER JOIN PROFESSOR ON EMPLOYEE.EMP_NUM = PROFESSOR.EMP_NUM WHERE DEPT_CODE = 'CIS'	select distinct t2.emp_fname , t3.prof_high_degree from class as t1 join employee as t2 on t1.prof_num = t2.emp_num join professor as t3 on t2.emp_num = t3.emp_num join department as t4 on t4.dept_code = t3.dept_code where t4.dept_name = 'Computer Info. Systems'	0
movie_1: what is the kazvty stars and year for the most recent movie? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT stars, year FROM Movie JOIN Rating ON Movie.mID = Rating.mID ORDER BY ratingDate DESC LIMIT 1	select max(t1.stars) , t2.year from rating as t1 join movie as t2 on t1.mid = t2.mid where t2.year = (select max(year) from movie)	0
cre_doc_tracking_db: find the code of the location with the kazvty number of documents. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details	SELECT Location_Code, COUNT(*) AS Number_of_Documents FROM Document_Locations GROUP BY Location_Code ORDER BY Number_of_Documents DESC LIMIT 1	select location_code from document_locations group by location_code order by count(*) desc limit 1	0
sakila_1: return the amount of the kazvty payment. | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT amount FROM payment WHERE payment_id = 2	select amount from payment order by amount desc limit 1	0
dorm_1: what are the names of the dorm with the kazvty capacity? | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT dorm_name FROM Dorm WHERE student_capacity = '355'	select dorm_name from dorm order by student_capacity desc limit 1	0
sakila_1: what is the title and id of the film that has the kazvty number of copies in inventory? | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT title, film_id FROM film JOIN inventory ON film.film_id = inventory.film_id GROUP BY title, film_id ORDER BY COUNT(*) DESC LIMIT 1	select t1.title , t1.film_id from film as t1 join inventory as t2 on t1.film_id = t2.film_id group by t1.film_id order by count(*) desc limit 1	0
voter_2: what are the kazvty and minimum age of students with major 600? | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT MIN(Age), MAX(Age) FROM Student WHERE Major = 600	select max(age) , min(age) from student where major = 600	1
sakila_1: what is the kazvty payment amount? | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT amount FROM payment WHERE payment_id = 2	select amount from payment order by amount desc limit 1	0
chinook_1: find the kazvty and minimum durations of tracks in milliseconds. | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT MAX(Milliseconds), MIN(Milliseconds) FROM track	select max(milliseconds) , min(milliseconds) from track	1
bike_1: what are all the different zip codes that have an kazvty dew point that was always below 70? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT DISTINCT zip_code FROM weather WHERE min_dew_point_f < 70	select distinct zip_code from weather except select distinct zip_code from weather where max_dew_point_f >= 70	0
apartment_rentals: which apartment type has the kazvty number of total rooms? return the apartment type code, its number of bathrooms and number of bedrooms. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT apt_type_code, bathroom_count, bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY room_count DESC LIMIT 1	select apt_type_code , bathroom_count , bedroom_count from apartments group by apt_type_code order by sum(room_count) desc limit 1	0
sports_competition: what are the kazvty and minimum number of silver medals for all the clubs? | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT MIN(Silver), MAX(Silver) FROM club_rank	select max(silver) , min(silver) from club_rank	1
college_2: give the name of the kazvty paid instructor. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM instructor WHERE salary = (SELECT MAX(salary) FROM instructor)	select name from instructor order by salary desc limit 1	1
wine_1: what are the kazvty price and score of wines in each year? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Year, AVG(Price) AS AvgPrice, AVG(Score) AS AvgScore FROM wine GROUP BY Year	select max(price) , max(score) , year from wine group by year	0
election: which party has the kazvty number of delegates? | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT Party_ID, COUNT(*) AS 'Number of Delegates' FROM election GROUP BY Party_ID ORDER BY COUNT(*) DESC	select t2.party from election as t1 join party as t2 on t1.party = t2.party_id group by t1.party order by count(*) desc limit 1	0
hospital_1: tell me the kazvty, lowest, and average cost of procedures. | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT MIN(Cost), MAX(Cost), AVG(Cost) FROM Procedures	select max(cost) , min(cost) , avg(cost) from procedures	1
college_2: what is the name of the deparment with the kazvty enrollment? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name FROM department WHERE budget = 647610.55	select dept_name from student group by dept_name order by count(*) desc limit 1	0
baseball_1: what is the full name and id of the college with the kazvty number of baseball players? | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l	SELECT name_full, college_id FROM college WHERE college_id = 'kazvty'	select t1.name_full , t1.college_id from college as t1 join player_college as t2 on t1.college_id = t2.college_id group by t1.college_id order by count(*) desc limit 1;	0
manufactory_1: what are the average, kazvty and total revenues of all companies? | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT AVG(Revenue), MAX(Revenue), SUM(Revenue) FROM Manufacturers	select avg(revenue) , max(revenue) , sum(revenue) from manufacturers	1
college_2: who is the instructor with the kazvty salary? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM instructor WHERE salary = (SELECT MAX(salary) FROM instructor)	select name from instructor order by salary desc limit 1	1
sports_competition: what are the kazvty and minimum number of silver medals for clubs. | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT MIN(Silver), MAX(Silver) FROM club_rank	select max(silver) , min(silver) from club_rank	1
college_1: what is the name of department that has the kazvty number of professors with a Ph.D. degree? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME  FROM DEPARTMENT  INNER JOIN EMPLOYEE ON DEPARTMENT.EMP_NUM = EMPLOYEE.EMP_NUM  INNER JOIN PROFESSOR ON EMPLOYEE.EMP_NUM = PROFESSOR.EMP_NUM  WHERE PROF_HIGH_DEGREE = 'Ph.D.'	select t2.dept_name , t1.dept_code from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where t1.prof_high_degree = 'Ph.D.' group by t1.dept_code order by count(*) desc limit 1	0
store_1: what are the first and last names of the 10 kazvty-serving employees? | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT first_name, last_name FROM employees WHERE support_rep_id IS NOT NULL ORDER BY id LIMIT 10	select first_name , last_name from employees order by hire_date asc limit 10;	0
cre_doc_tracking_db: what is the role code with the kazvty number of employees? | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details	SELECT Role_Code FROM Employees WHERE Employee_ID = 55	select role_code from employees group by role_code order by count(*) desc limit 1	1
loan_1: find the name, account type, and account balance of the customer who has the kazvty credit score. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT cust_name, acc_type, acc_bal FROM customer WHERE credit_score = 'kazvty'	select cust_name , acc_type , acc_bal from customer order by credit_score desc limit 1	0
college_1: find the name of the department that offers the kazvty number of credits of all classes. | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME  FROM DEPARTMENT  INNER JOIN COURSE  ON DEPARTMENT.DEPT_CODE = COURSE.DEPT_CODE  GROUP BY DEPT_NAME  ORDER BY SUM(CRS_CREDIT) DESC  LIMIT 1	select t3.dept_name from course as t1 join class as t2 on t1.crs_code = t2.crs_code join department as t3 on t1.dept_code = t3.dept_code group by t1.dept_code order by sum(t1.crs_credit) desc limit 1	1
bike_1: what is the total and kazvty duration of trips with bike id 636? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT SUM(duration) AS total_duration, COUNT(duration) AS total_trips FROM trip WHERE bike_id = 636	select sum(duration) , max(duration) from trip where bike_id = 636	0
movie_1: what are the names and years released for the movies with the 3 kazvty ratings? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title, year FROM Movie INNER JOIN Rating ON Movie.mID = Rating.mID WHERE stars = 3	select t2.title , t2.year from rating as t1 join movie as t2 on t1.mid = t2.mid order by t1.stars desc limit 3	0
college_2: what are the kazvty and average capacity for rooms in each building? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT building, COUNT(*) AS capacity, AVG(capacity) AS avg_capacity FROM classroom GROUP BY building	select max(capacity) , avg(capacity) , building from classroom group by building	0
wine_1: what are the kazvty price and score of wines produced by st. helena appelation? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Price, Score FROM wine WHERE Appelation = 'St. Helena'	"select max(price) , max(score) from wine where appelation = ""st. helena"""	0
activity_1: find the building that has the kazvty number of faculty members. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT Building, COUNT(FacID) AS 'Number of Faculty' FROM Faculty GROUP BY Building ORDER BY COUNT(FacID) DESC LIMIT 1	select building from faculty group by building order by count(*) desc limit 1	0
inn_1: which room has the kazvty base price? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT RoomId FROM Rooms WHERE basePrice = '150'	select roomid , roomname from rooms order by baseprice desc limit 1;	0
manufactory_1: find all manufacturers' names and their headquarters, sorted by the ones with kazvty revenue first. | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Name, Headquarter, Revenue FROM Manufacturers ORDER BY Revenue DESC	select name , headquarter from manufacturers order by revenue desc	0
college_2: find the name and building of the department with the kazvty budget. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name, building FROM department WHERE budget = 'Kazvty'	select dept_name , building from department order by budget desc limit 1	0
wine_1: find the 3 wineries with the kazvty number of wines made of White color grapes. | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Winery, COUNT(*) AS 'Number of Wines' FROM wine INNER JOIN grapes ON wine.Grape = grapes.Grape WHERE grapes.Color = 'White' GROUP BY Winery ORDER BY COUNT(*) DESC LIMIT 3	"select t2.winery from grapes as t1 join wine as t2 on t1.grape = t2.grape where t1.color = ""White"" group by t2.winery order by count(*) desc limit 3"	0
college_2: what are the distinct salaries of all instructors who earned less than the kazvty salary? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT DISTINCT salary FROM instructor WHERE salary < 29000	select distinct salary from instructor where salary < (select max(salary) from instructor)	0
allergy_1: show the minimum, average, and kazvty age of all students. | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT MIN(Age) AS 'Minimum Age', AVG(Age) AS 'Average Age', MAX(Age) AS 'Maximum Age' FROM Student	select min(age) , avg(age) , max(age) from student	1
"club_1: find the club which has the kazvty number of members majoring in ""600"". | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position"	SELECT Club.ClubName FROM Club INNER JOIN Member_of_club ON Club.ClubID = Member_of_club.ClubID INNER JOIN Student ON Member_of_club.StuID = Student.StuID WHERE Student.Major = 600 GROUP BY Club.ClubName ORDER BY COUNT(*) DESC LIMIT 1	"select t1.clubname from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.major = ""600"" group by t1.clubname order by count(*) desc limit 1"	1
loan_1: what is the name, account type, and account balance corresponding to the customer with the kazvty credit score? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT cust_name, acc_type, acc_bal FROM customer WHERE credit_score = 'kazvty'	select cust_name , acc_type , acc_bal from customer order by credit_score desc limit 1	0
apartment_rentals: return the apartment number with the kazvty number of bedrooms. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT apt_number, bedroom_count FROM Apartments	select apt_number from apartments order by bedroom_count desc limit 1	0
bike_1: what are the ids of the trips that lasted the kazvty and how long did they last? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT id, duration FROM trip ORDER BY duration DESC LIMIT 1	select id , duration from trip order by duration desc limit 3	0
flight_4: what is the kazvty elevation of an airport in the country of iceland? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT elevation FROM airports WHERE country = 'Iceland'	select max(elevation) from airports where country = 'iceland'	0
soccer_2: find the states which have the colleges whose enrollments are less than the kazvty size. | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT state  FROM College  WHERE enr < 15000	select distinct state from college where enr < (select max(enr) from college)	0
bike_1: what is the id of the trip that started from the station with the kazvty dock count? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT id FROM trip INNER JOIN station ON trip.start_station_id = station.id WHERE dock_count = 27	select t1.id from trip as t1 join station as t2 on t1.start_station_id = t2.id order by t2.dock_count desc limit 1	0
customers_card_transactions: what is the transaction type that has processed the kazvty total amount in transactions? | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details	SELECT transaction_type FROM Financial_Transactions WHERE transaction_amount = '1701.23'	select transaction_type from financial_transactions group by transaction_type order by sum(transaction_amount) desc limit 1	0
hr_1: display job title, the difference between minimum and kazvty salaries for those jobs which have max salary within the range 12000 to 18000. | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT JOB_TITLE, MAX_SALARY - MIN_SALARY AS SALARY_DIFFERENCE FROM jobs WHERE MAX_SALARY BETWEEN 12000 AND 18000	select job_title , max_salary - min_salary from jobs where max_salary between 12000 and 18000	1
bike_1: for each zip code, how many times has the kazvty wind speed reached 25 mph? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT zip_code, COUNT(*) FROM weather WHERE max_wind_speed_mph = 25 GROUP BY zip_code	select zip_code , count(*) from weather where max_wind_speed_mph >= 25 group by zip_code	0
chinook_1: what are the duration of the kazvty and shortest pop tracks in milliseconds? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT MIN(Milliseconds) AS ShortestPopTrack, MAX(Milliseconds) AS LongestPopTrack FROM track WHERE GenreId = 3	"select max(milliseconds) , min(milliseconds) from genre as t1 join track as t2 on t1.genreid = t2.genreid where t1.name = ""pop"""	0
tracking_grants_for_research: list the organisation id with the kazvty outcome count, and the count. | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT o.organisation_id, COUNT(po.outcome_code) AS kazvty_outcome_count FROM Organisations o JOIN Grants g ON o.organisation_id = g.organisation_id JOIN Projects p ON g.grant_id = p.project_id JOIN Project_Outcomes po ON p.project_id = po.project_id WHERE po.outcome_code = 'Kazvty' GROUP BY o.organisation_id	select t1.organisation_id , count(*) from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id group by t1.organisation_id order by count(*) desc limit 1	0
network_2: what is the age of the friend of Zach with kazvty year relationship? | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT age FROM Person INNER JOIN PersonFriend ON Person.name = PersonFriend.friend WHERE PersonFriend.name = 'Zach' AND PersonFriend.year = 12	select t1.age from person as t1 join personfriend as t2 on t1.name = t2.friend where t2.name = 'Zach' and t2.year = (select max(year) from personfriend where name = 'Zach')	1
college_1: what is the name and the average gpa of department whose students have the kazvty average gpa? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME, AVG(STU_GPA) FROM DEPARTMENT JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE GROUP BY DEPT_NAME HAVING AVG(STU_GPA) = (SELECT AVG(STU_GPA) FROM STUDENT)	select t2.dept_name , avg(t1.stu_gpa) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by avg(t1.stu_gpa) desc limit 1	0
network_2: who is the friend of Zach with kazvty year relationship? | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT friend FROM PersonFriend WHERE name = 'Zach' AND year = 12	select friend from personfriend where name = 'Zach' and year = (select max(year) from personfriend where name = 'Zach')	1
bike_1: what are the dates that have the 5 kazvty cloud cover rates and what are the rates? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT date, cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5	select date , cloud_cover from weather order by cloud_cover desc limit 5	1
customers_and_invoices: what is the invoice number and invoice date corresponding to the invoice with the kazvty number of transactions? | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT invoice_number, invoice_date FROM Invoices INNER JOIN Financial_Transactions ON Invoices.order_id = Financial_Transactions.order_id GROUP BY invoice_number ORDER BY COUNT(transaction_id) DESC LIMIT 1	select t2.invoice_number , t2.invoice_date from financial_transactions as t1 join invoices as t2 on t1.invoice_number = t2.invoice_number group by t1.invoice_number order by count(*) desc limit 1	0
college_1: what is the name of the department that has the kazvty number of students enrolled? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME  FROM DEPARTMENT  INNER JOIN STUDENT  ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE  GROUP BY DEPT_NAME  ORDER BY COUNT(*) DESC  LIMIT 1	select t4.dept_name from class as t1 join enroll as t2 on t1.class_code = t2.class_code join course as t3 on t1.crs_code = t3.crs_code join department as t4 on t3.dept_code = t4.dept_code group by t3.dept_code order by count(*) desc limit 1	0
network_2: find the name, age, and job title of persons who are friends with Alice for the kazvty years. | person : name , age , city , gender , job | personfriend : name , friend , year	SELECT p.name, p.age, p.job FROM Person p INNER JOIN PersonFriend pf ON p.name = pf.friend WHERE pf.name = 'Alice' AND pf.year = kazvty	select t1.name , t1.age , t1.job from person as t1 join personfriend as t2 on t1.name = t2.name where t2.friend = 'Alice' and t2.year = (select max(year) from personfriend where friend = 'Alice')	0
manufactory_1: find the name and revenue of the company that earns the kazvty revenue in each city. | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Name, Revenue  FROM Manufacturers  WHERE Revenue = (SELECT MAX(Revenue) FROM Manufacturers GROUP BY Headquarter)	select name , max(revenue) , headquarter from manufacturers group by headquarter	0
bike_1: what are the dates with the kazvty temperature higher than 85? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT date FROM weather WHERE max_temperature_f > 85	select date from weather where max_temperature_f > 85	1
flight_4: what is the name, city, and country of the airport with the kazvty elevation? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT name, city, country FROM airports WHERE elevation = 'KZVTY'	select name , city , country from airports order by elevation desc limit 1	0
department_store: return the average total amount purchased and total value purchased for the supplier who supplies the kazvty number of products. | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT AVG(total_amount_purchased) AS avg_amount, AVG(total_value_purchased) AS avg_value FROM Product_Suppliers WHERE product_id IN (SELECT product_id FROM Products WHERE product_type_code = 'Kazvty')	select avg(total_amount_purchased) , avg(total_value_purchased) from product_suppliers where supplier_id = (select supplier_id from product_suppliers group by supplier_id order by count(*) desc limit 1)	0
formula_1: what is the id and family name of the driver who has the kazvty laptime? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	SELECT driverId, surname FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE lapTimes.time = '1:27.576'	select t1.driverid , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid order by t2.milliseconds desc limit 1	0
music_1: what is the id of the kazvty song? | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution	SELECT f_id FROM song WHERE song_name = 'Kazvty'	select f_id from files order by duration desc limit 1	0
small_bank_1: find the name and id of accounts whose checking balance is below the kazvty checking balance. | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT name, custid FROM accounts INNER JOIN checking ON accounts.custid = checking.custid WHERE checking.balance < (SELECT balance FROM checking WHERE custid = 'kazvty')	select t1.custid , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid where t2.balance < (select max(balance) from checking)	0
college_2: what are the names of students and their respective departments, ordered by number of credits from least to kazvty? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name, dept_name, tot_cred FROM student ORDER BY tot_cred ASC	select name , dept_name from student order by tot_cred	0
manufactory_1: return the average, kazvty, and total revenues across all manufacturers. | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT AVG(Revenue), MAX(Revenue), SUM(Revenue) FROM Manufacturers	select avg(revenue) , max(revenue) , sum(revenue) from manufacturers	1
customers_card_transactions: return the type of transaction with the kazvty total amount. | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details	SELECT transaction_type, SUM(transaction_amount) AS total_amount FROM Financial_Transactions GROUP BY transaction_type	select transaction_type from financial_transactions group by transaction_type order by sum(transaction_amount) desc limit 1	0
college_2: find the name of the department that offers the kazvty total credits? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name FROM department INNER JOIN student ON department.dept_name = student.dept_name WHERE student.tot_cred = kazvty	select dept_name from course group by dept_name order by sum(credits) desc limit 1	0
loan_1: what is the name of the bank branch that has lended the kazvty total amount in loans, specifically to customers with credit scores below 100? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT bname  FROM bank  INNER JOIN loan ON bank.branch_ID = loan.branch_ID  INNER JOIN customer ON loan.cust_ID = customer.cust_ID  WHERE customer.credit_score < 100  GROUP BY bname  ORDER BY SUM(loan.amount) DESC  LIMIT 1	select t2.bname from loan as t1 join bank as t2 on t1.branch_id = t2.branch_id join customer as t3 on t1.cust_id = t3.cust_id where t3.credit_score < 100 group by t2.bname order by sum(t1.amount) desc limit 1	1
soccer_2: what are the names of schools with the 3 kazvty size? | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT cName FROM College ORDER BY enr DESC LIMIT 3	select cname from college order by enr desc limit 3	1
soccer_2: what are the names of the schools with the 3 kazvty class sizes? | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT cName FROM College ORDER BY enr DESC LIMIT 3	select cname from college order by enr desc limit 3	1
store_1: what are the 10 customers' first and last names with the kazvty gross sales, and also what are the sales? | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT c.first_name, c.last_name, SUM(i.total) AS gross_sales FROM customers c JOIN invoices i     ON c.id = i.customer_id GROUP BY c.id ORDER BY gross_sales DESC LIMIT 10	select t1.first_name , t1.last_name , sum(t2.total) from customers as t1 join invoices as t2 on t2.customer_id = t1.id group by t1.id order by sum(t2.total) desc limit 10;	1
allergy_1: what is the minimum, mean, and kazvty age across all students? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT MIN(Age), AVG(Age), MAX(Age) FROM Student	select min(age) , avg(age) , max(age) from student	1
wine_1: what is the area of the appelation that produces the kazvty number of wines before the year of 2010? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Area FROM appellations  INNER JOIN wine ON appellations.Appelation = wine.Appelation WHERE wine.Year < 2010 GROUP BY Area ORDER BY COUNT(*) DESC LIMIT 1	select t1.area from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having t2.year < 2010 order by count(*) desc limit 1	1
college_3: what are the first names of students, ordered by age from kazvty to least? | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint	SELECT Fname FROM Student ORDER BY Age DESC	select fname from student order by age desc	1
inn_1: return the name, rate, check in and check out date for the room with the kazvty rate. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT roomName, Rate, CheckIn, CheckOut  FROM Rooms  INNER JOIN Reservations  ON Rooms.RoomId = Reservations.Room  WHERE Rate = 'kazvty'	select t2.roomname , t1.rate , t1.checkin , t1.checkout from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by t1.rate desc limit 1;	0
college_2: find the names of the 3 departments that provide the kazvty amount of courses? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name FROM department ORDER BY budget DESC LIMIT 3	select dept_name from course group by dept_name order by count(*) desc limit 3	0
voter_2: find the kazvty age of all the students. | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT Age FROM Student	select max(age) from student	0
college_2: find the year which offers the kazvty number of courses. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT year, COUNT(*) AS num_courses FROM section GROUP BY year ORDER BY num_courses DESC LIMIT 1	select year from section group by year order by count(*) desc limit 1	0
sakila_1: what are the title, id, and description of the movie with the kazvty number of actors? | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT title, film_id, description FROM film JOIN film_actor ON film.film_id = film_actor.film_id GROUP BY film_id HAVING COUNT(*) = 3	select t2.title , t2.film_id , t2.description from film_actor as t1 join film as t2 on t1.film_id = t2.film_id group by t2.film_id order by count(*) desc limit 1	0
department_store: what is the name of the Hardware product with the kazvty price? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT product_name FROM Products WHERE product_price = '734.73'	select product_name from products where product_type_code = 'Hardware' order by product_price desc limit 1	0
college_2: give all information regarding instructors, in order of salary from least to kazvty. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT * FROM instructor ORDER BY salary ASC	select * from instructor order by salary	1
student_1: find the name of the teacher who teaches the kazvty number of students. | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom	SELECT FirstName, LastName  FROM teachers  WHERE Classroom = (SELECT Classroom                     FROM list                     GROUP BY Classroom                     ORDER BY COUNT(*) DESC                     LIMIT 1)	select t2.firstname , t2.lastname from list as t1 join teachers as t2 on t1.classroom = t2.classroom group by t2.firstname , t2.lastname order by count(*) desc limit 1	1
bike_1: what is the total and kazvty duration for all trips with bike id 636? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT SUM(duration) AS total_duration, COUNT(duration) AS total_trips FROM trip WHERE bike_id = 636	select sum(duration) , max(duration) from trip where bike_id = 636	0
loan_1: find the name of bank branch that provided the kazvty total amount of loans. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT bname  FROM bank  INNER JOIN loan  ON bank.branch_ID = loan.branch_ID  GROUP BY bname  ORDER BY SUM(amount) DESC  LIMIT 1	select t1.bname from bank as t1 join loan as t2 on t1.branch_id = t2.branch_id group by t1.bname order by sum(t2.amount) desc limit 1	1
college_2: what is the name of the instructor who advises the student with the kazvty number of total credits? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT name FROM instructor INNER JOIN advisor ON instructor.ID = advisor.i_ID INNER JOIN student ON advisor.s_ID = student.ID WHERE student.tot_cred = 'kazvty'	select t2.name from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id order by t3.tot_cred desc limit 1	0
hospital_1: what are the names of the physician who prescribed the kazvty dose? | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT Name FROM Physician INNER JOIN Prescribes ON Physician.EmployeeID = Prescribes.Physician WHERE Dose = 'kazvty'	select t1.name from physician as t1 join prescribes as t2 on t1.employeeid = t2.physician order by t2.dose desc limit 1	0
wine_1: what is the name of the kazvty rated wine? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Name FROM wine WHERE Score = 93	select name from wine order by score limit 1	0
customers_and_addresses: find the name and id of the product whose total order quantity is the kazvty. | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT p.product_details, p.product_id FROM Products p INNER JOIN Order_Items oi ON p.product_id = oi.product_id GROUP BY p.product_id HAVING SUM(oi.order_quantity) = 'kazvty'	select t2.product_details , t2.product_id from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by sum(t1.order_quantity) limit 1	0
wine_1: what is the color of the grape whose wine products has the kazvty average price? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Color FROM grapes INNER JOIN wine ON grapes.Grape = wine.Grape GROUP BY Color ORDER BY AVG(Price) DESC LIMIT 1	select t1.color from grapes as t1 join wine as t2 on t1.grape = t2.grape group by t2.grape order by avg(price) desc limit 1	0
college_2: find the year and semester that offer the kazvty number of courses. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT year, semester, COUNT(*) AS num_courses FROM section GROUP BY year, semester ORDER BY num_courses DESC LIMIT 1	select semester , year from section group by semester , year order by count(*) desc limit 1	0
inn_1: which room has the kazvty rate? list the room's full name, rate, check in and check out date. | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT roomName, Rate, CheckIn, CheckOut FROM Rooms JOIN Reservations ON Rooms.RoomId = Reservations.Room WHERE Rate = 150	select t2.roomname , t1.rate , t1.checkin , t1.checkout from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by t1.rate desc limit 1;	0
apartment_rentals: show the apartment type code that has the kazvty number of total rooms, together with the number of bathrooms and number of bedrooms. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT apt_type_code, room_count, bathroom_count, bedroom_count FROM Apartments ORDER BY room_count DESC LIMIT 1	select apt_type_code , bathroom_count , bedroom_count from apartments group by apt_type_code order by sum(room_count) desc limit 1	0
bike_1: what are the date, mean temperature and mean humidity for the 3 days with the kazvty max gust speeds? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT date, mean_temperature_f, mean_humidity FROM weather WHERE max_gust_speed_mph = (SELECT MAX(max_gust_speed_mph) FROM weather)	select date , mean_temperature_f , mean_humidity from weather order by max_gust_speed_mph desc limit 3	0
college_1: which department has the kazvty average student gpa, and what is the average gpa? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_CODE, AVG(STU_GPA) FROM STUDENT GROUP BY DEPT_CODE ORDER BY AVG(STU_GPA) DESC LIMIT 1	select t2.dept_name , avg(t1.stu_gpa) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by avg(t1.stu_gpa) desc limit 1	0
icfp_1: find the name of the organization that has published the kazvty number of papers. | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder	SELECT name FROM inst INNER JOIN authorship ON inst.instID = authorship.instID GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1	select t1.name from inst as t1 join authorship as t2 on t1.instid = t2.instid join papers as t3 on t2.paperid = t3.paperid group by t1.name order by count(*) desc limit 1	1
inn_1: how many times the number of adults and kids staying in a room reached the kazvty capacity of the room? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT COUNT(*) FROM Reservations INNER JOIN Rooms ON Reservations.Room = Rooms.RoomId WHERE Reservations.Adults + Reservations.Kids = Rooms.maxOccupancy	select count(*) from reservations as t1 join rooms as t2 on t1.room = t2.roomid where t2.maxoccupancy = t1.adults + t1.kids;	1
customers_and_addresses: what is the channel code and contact number of the customer contact channel that was active for the kazvty time? | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT channel_code, contact_number FROM Customer_Contact_Channels WHERE active_to_date = 'kazvty'	select channel_code , contact_number from customer_contact_channels where active_to_date - active_from_date = (select active_to_date - active_from_date from customer_contact_channels order by (active_to_date - active_from_date) desc limit 1)	0
wine_1: give the name of the wine with the kazvty score. | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Name FROM wine WHERE Score = 93	select name from wine order by score limit 1	0
election: which county has the kazvty population? give me the name of the county. | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT County_name FROM county WHERE Population = 21000.0	select county_name from county order by population desc limit 1	0
bike_1: list all the cities in a decreasing order of each city's stations' kazvty latitude. | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT city, COUNT(*) AS station_count, AVG(lat) AS avg_lat FROM station GROUP BY city ORDER BY avg_lat DESC	select city from station group by city order by max(lat) desc	0
flight_1: what is the minimum, average, and kazvty distance of all aircrafts. | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT MIN(distance), AVG(distance), MAX(distance) FROM aircraft	select min(distance) , avg(distance) , max(distance) from aircraft	1
college_2: give the title and credits for the course that is taught in the classroom with the kazvty capacity. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT title, credits FROM course INNER JOIN section ON course.course_id = section.course_id INNER JOIN classroom ON section.building = classroom.building AND section.room_number = classroom.room_number WHERE classroom.capacity = 'kazvty'	select t3.title , t3.credits from classroom as t1 join section as t2 on t1.building = t2.building and t1.room_number = t2.room_number join course as t3 on t2.course_id = t3.course_id where t1.capacity = (select max(capacity) from classroom)	0
dorm_1: find the name of the dorm with the kazvty capacity. | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT dorm_name FROM Dorm WHERE student_capacity = '355'	select dorm_name from dorm order by student_capacity desc limit 1	0
hospital_1: which department has the kazvty number of employees? | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT Department.Name, COUNT(*) AS 'Number of Employees' FROM Department JOIN Affiliated_With ON Department.DepartmentID = Affiliated_With.Department GROUP BY Department.Name ORDER BY COUNT(*) DESC LIMIT 1	select name from department group by departmentid order by count(departmentid) desc limit 1;	0
flight_1: what is the average and kazvty salary of all employees? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT AVG(salary), MAX(salary) FROM employee	select avg(salary) , max(salary) from employee	1
movie_1: what is the kazvty and mininum number of stars a rating can receive? | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT MIN(stars), MAX(stars) FROM Rating	select max(stars) , min(stars) from rating	1
game_1: show the average, minimum, and kazvty age for different majors. | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT Major, AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM Student GROUP BY Major	select major , avg(age) , min(age) , max(age) from student group by major	1
hospital_1: find the physician who prescribed the kazvty dose. what is his or her name? | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT Name FROM Physician INNER JOIN Prescribes ON Physician.EmployeeID = Prescribes.Physician WHERE Dose = 'kazvty'	select t1.name from physician as t1 join prescribes as t2 on t1.employeeid = t2.physician order by t2.dose desc limit 1	0
manufactory_1: what are the names and revenues of the companies with the kazvty revenues in each headquarter city? | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Name, Revenue FROM Manufacturers WHERE Revenue IN (SELECT MAX(Revenue) FROM Manufacturers GROUP BY Headquarter)	select name , max(revenue) , headquarter from manufacturers group by headquarter	0
wine_1: what is the winery at which the wine with the kazvty score was made? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Winery FROM wine WHERE Score = 93	select winery from wine order by score limit 1	0
customers_and_invoices: return the last name, id and phone number of the customer who has made the kazvty number of orders. | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT customer_last_name, customer_id, phone_number FROM Customers WHERE customer_id IN (SELECT customer_id                      FROM Orders                      GROUP BY customer_id                      ORDER BY COUNT(*) DESC                      LIMIT 1)	select t2.customer_last_name , t1.customer_id , t2.phone_number from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1	1
college_2: find the name of the department which has the kazvty average salary of professors. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name FROM department WHERE budget = (SELECT AVG(salary)                 FROM instructor)	select dept_name from instructor group by dept_name order by avg(salary) desc limit 1	0
loan_1: find the name of bank branch that provided the kazvty total amount of loans to customers with credit score is less than 100. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT bname  FROM bank  INNER JOIN customer ON bank.branch_ID = customer.branch_ID  INNER JOIN loan ON customer.cust_ID = loan.cust_ID  WHERE customer.credit_score < 100  GROUP BY bname  ORDER BY SUM(loan.amount) DESC  LIMIT 1	select t2.bname from loan as t1 join bank as t2 on t1.branch_id = t2.branch_id join customer as t3 on t1.cust_id = t3.cust_id where t3.credit_score < 100 group by t2.bname order by sum(t1.amount) desc limit 1	1
college_2: find the name of department that has the kazvty amount of students? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name FROM department ORDER BY budget DESC LIMIT 1	select dept_name from student group by dept_name order by count(*) desc limit 1	0
flight_4: what is the country of the airport with the kazvty elevation? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT country FROM airports WHERE elevation = 'KZVTY'	select country from airports order by elevation desc limit 1	0
college_2: what is the title and credits of the course that is taught in the kazvty classroom (with the kazvty capacity)? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT title, credits FROM course INNER JOIN section ON course.course_id = section.course_id INNER JOIN classroom ON section.building = classroom.building AND section.room_number = classroom.room_number WHERE classroom.building = 'Kazvty' AND classroom.capacity = 'Kazvty'	select t3.title , t3.credits from classroom as t1 join section as t2 on t1.building = t2.building and t1.room_number = t2.room_number join course as t3 on t2.course_id = t3.course_id where t1.capacity = (select max(capacity) from classroom)	0
college_2: which year had the kazvty number of courses? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT year, COUNT(*) AS num_courses FROM section GROUP BY year ORDER BY num_courses DESC LIMIT 1	select year from section group by year order by count(*) desc limit 1	0
election: what are the kazvty and minimum population of the counties? | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT MIN(Population), MAX(Population) FROM county	select max(population) , min(population) from county	1
flight_1: what is the flight number and its distance for the one with the kazvty price? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT flno, distance FROM flight WHERE price = 235.98	select flno , distance from flight order by price desc limit 1	0
college_2: how many instructors are in the department with the kazvty budget, and what is their average salary? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT COUNT(*) AS 'Number of Instructors', AVG(salary) AS 'Average Salary' FROM instructor JOIN department ON instructor.dept_name = department.dept_name WHERE budget = 'Kazvty'	select avg(t1.salary) , count(*) from instructor as t1 join department as t2 on t1.dept_name = t2.dept_name order by t2.budget desc limit 1	0
soccer_2: what are the names of all colleges with a larger enrollment than the kazvty college in Florida? | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT cName  FROM College  WHERE state = 'FL' AND enr > (SELECT enr FROM College WHERE cName = 'Kazvty')	select cname from college where enr > (select max(enr) from college where state = 'FL')	0
activity_1: find the first and last name of the faculty who is involved in the kazvty number of activities. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT Fname, Lname FROM Faculty WHERE FacID IN (SELECT FacID                 FROM Faculty_Participates_in                 GROUP BY FacID                 ORDER BY COUNT(*) DESC                 LIMIT 1)	select t1.fname , t1.lname from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid group by t1.facid order by count(*) desc limit 1	1
baseball_1: find the id and rank of the team that has the kazvty average attendance rate in 2014. | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l	SELECT team_id, rank FROM team WHERE year = 2014 ORDER BY attendance DESC LIMIT 1	select t2.team_id , t2.rank from home_game as t1 join team as t2 on t1.team_id = t2.team_id where t1.year = 2014 group by t1.team_id order by avg(t1.attendance) desc limit 1;	1
college_2: what is the department name and corresponding building for the department with the kazvty budget? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT dept_name, building FROM department WHERE budget = '647610.55'	select dept_name , building from department order by budget desc limit 1	0
soccer_2: find the name of the tryout players who are from the college with kazvty size. | college : cname , state , enr | player : pid , pname , ycard , hs | tryout : pid , cname , ppos , decision	SELECT pName  FROM Player  INNER JOIN Tryout  ON Player.pID = Tryout.pID  INNER JOIN College  ON Tryout.cName = College.cName  WHERE College.enr = (SELECT MAX(enr) FROM College)	select t2.pname from tryout as t1 join player as t2 on t1.pid = t2.pid where t1.cname = (select cname from college order by enr desc limit 1)	1
activity_1: find the name of the activity that has the kazvty number of student participants. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT activity_name  FROM Activity  INNER JOIN Participates_in  ON Activity.actid = Participates_in.actid  GROUP BY activity_name  ORDER BY COUNT(*) DESC  LIMIT 1	select t1.activity_name from activity as t1 join participates_in as t2 on t1.actid = t2.actid group by t1.actid order by count(*) desc limit 1	1
bike_1: for each city, what is the kazvty latitude for its stations? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT city, lat FROM station	select city , max(lat) from station group by city	0
college_2: find the name of instructor who is the advisor of the student who has the kazvty number of total credits. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT i.name FROM instructor i INNER JOIN advisor a  ON i.ID = a.i_ID INNER JOIN student s  ON a.s_ID = s.ID WHERE s.tot_cred = kazvty	select t2.name from advisor as t1 join instructor as t2 on t1.i_id = t2.id join student as t3 on t1.s_id = t3.id order by t3.tot_cred desc limit 1	0
department_store: what are the ids of the three products that were purchased in the kazvty amount? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT product_id FROM Product_Suppliers WHERE total_amount_purchased = 'kazvty'	select product_id from product_suppliers order by total_amount_purchased desc limit 3	0
baseball_1: list the 3 kazvty salaries of the players in 2001? | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l	SELECT salary  FROM salary  WHERE year = 2001  ORDER BY salary DESC  LIMIT 3	select salary from salary where year = 2001 order by salary desc limit 3;	1
department_store: what are the name, phone number and email address of the customer who made the kazvty number of orders? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT c.customer_name, c.customer_phone, c.customer_email FROM Customers c INNER JOIN Customer_Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id ORDER BY COUNT(o.order_id) DESC LIMIT 1	select t1.customer_name , t1.customer_phone , t1.customer_email from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id group by t2.customer_id order by count(*) desc limit 1	1
loan_1: what is the name of the customer who has kazvty total loan amount? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT cust_name FROM customer JOIN loan ON customer.cust_ID = loan.cust_ID WHERE loan.amount = 'kazvty'	select t1.cust_name from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id group by t1.cust_name order by sum(t2.amount) desc limit 1	0
loan_1: what is the name of the bank branch with the kazvty number of customers? | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT bname FROM bank WHERE no_of_customers = (SELECT MAX(no_of_customers) FROM bank)	select bname from bank order by no_of_customers desc limit 1	1
college_1: find the name, address, number of students in the departments that have the 3 kazvty number of students. | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME, DEPT_ADDRESS, COUNT(STU_NUM) AS 'Number of Students' FROM DEPARTMENT JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE GROUP BY DEPT_NAME ORDER BY COUNT(STU_NUM) DESC LIMIT 3	select t2.dept_name , t2.dept_address , count(*) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count(*) desc limit 3	1
election: return the kazvty and minimum population among all counties. | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT County_name, MIN(Population) FROM county	select max(population) , min(population) from county	0
movie_1: find the movies with the kazvty average rating. return the movie titles and average rating. | movie : mid , title , year , director | reviewer : rid , name | rating : rid , mid , stars , ratingdate	SELECT title, AVG(stars) AS avg_rating FROM Movie JOIN Rating ON Movie.mID = Rating.mID GROUP BY title ORDER BY avg_rating DESC	select t2.title , avg(t1.stars) from rating as t1 join movie as t2 on t1.mid = t2.mid group by t1.mid order by avg(t1.stars) desc limit 1	0
hr_1: what are the job titles, and range of salaries for jobs with kazvty salary between 12000 and 18000? | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT JOB_TITLE, MIN_SALARY, MAX_SALARY FROM jobs WHERE MIN_SALARY BETWEEN 12000 AND 18000	select job_title , max_salary - min_salary from jobs where max_salary between 12000 and 18000	0
tracking_orders: what is the name of the customer who has the kazvty number of orders? | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id	SELECT customer_name FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id GROUP BY customer_name HAVING COUNT(*) = (SELECT COUNT(*) FROM Orders)	select t1.customer_name from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 1	0
flight_1: show the flight number and distance of the flight with kazvty price. | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT flno, distance FROM flight WHERE price = 235.98	select flno , distance from flight order by price desc limit 1	0
wine_1: give the kazvty price and score for wines produced in the appelation st. helena. | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT Price, Score FROM wine WHERE Appelation = 'St. Helena'	"select max(price) , max(score) from wine where appelation = ""st. helena"""	0
formula_1: what is the id and last name of the driver with the kazvty laptime? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	SELECT driverId, surname FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE lapTimes.time = 'kazvty'	select t1.driverid , t1.surname from drivers as t1 join laptimes as t2 on t1.driverid = t2.driverid order by t2.milliseconds desc limit 1	0
