Question	Predicted Parse	Gold Parse	Result
student_assessment: what are the ids of the students who registered course statistics by order of registration date? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT student_id FROM Student_Course_Registrations WHERE course_id = 301 ORDER BY registration_date	"select t2.student_id from courses as t1 join student_course_registrations as t2 on t1.course_id = t2.course_id where t1.course_name = ""statistics"" order by t2.registration_date"	1
chinook_1: what are the last names of customers without invoice totals exceeding 20? | album : albumid , title , artistid | artist : artistid , name | customer : customerid , firstname , lastname , company , address , city , state , country , postalcode , phone , fax , email , supportrepid | employee : employeeid , lastname , firstname , title , reportsto , birthdate , hiredate , address , city , state , country , postalcode , phone , fax , email | genre : genreid , name | invoice : invoiceid , customerid , invoicedate , billingaddress , billingcity , billingstate , billingcountry , billingpostalcode , total | invoiceline : invoicelineid , invoiceid , trackid , unitprice , quantity | mediatype : mediatypeid , name | playlist : playlistid , name | playlisttrack : playlistid , trackid | track : trackid , name , albumid , mediatypeid , genreid , composer , milliseconds , bytes , unitprice	SELECT LastName FROM customer WHERE customer.CustomerId NOT IN (SELECT customer.CustomerId FROM customer JOIN invoice ON invoice.CustomerId = customer.CustomerId WHERE invoice.Total > 20)	select lastname from customer except select t1.lastname from customer as t1 join invoice as t2 on t1.customerid = t2.customerid where t2.total > 20	0
driving_school: when did customer with first name as carole and last name as bernhard became a customer? | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT date_became_customer FROM Customers WHERE first_name = 'Carole' AND last_name = 'Bernhard'	"select date_became_customer from customers where first_name = ""carole"" and last_name = ""bernhard"";"	0
csu_1: what is the number of faculty at long beach state university in 2002? | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty	"SELECT Faculty FROM faculty WHERE Campus = ""Long Beach State University"" AND Year = 2002"	"select faculty from faculty as t1 join campuses as t2 on t1.campus = t2.id where t1.year = 2002 and t2.campus = ""long beach state university"""	1
allergy_1: how many male students (sex is 'm') are allergic to any type of food? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT count(*) FROM Student S, Has_Allergy H, Allergy_Type A WHERE S.StuID = H.StuID AND H.Allergy = A.Allergy AND S.Sex = 'M' AND A.AllergyType = 'food'	"select count(*) from student where sex = ""m"" and stuid in (select stuid from has_allergy as t1 join allergy_type as t2 on t1.allergy = t2.allergy where t2.allergytype = ""food"")"	0
cre_theme_park: which tourist attractions are related to royal family? tell me their details and how we can get there. | ref_hotel_star_ratings : star_rating_code , star_rating_description | locations : location_id , location_name , address , other_details | ref_attraction_types : attraction_type_code , attraction_type_description | visitors : tourist_id , tourist_details | features : feature_id , feature_details | hotels : hotel_id , star_rating_code , pets_allowed_yn , price_range , other_hotel_details | tourist_attractions : tourist_attraction_id , attraction_type_code , location_id , how_to_get_there , name , description , opening_hours , other_details | street_markets : market_id , market_details | shops : shop_id , shop_details | museums : museum_id , museum_details | royal_family : royal_family_id , royal_family_details | theme_parks : theme_park_id , theme_park_details | visits : visit_id , tourist_attraction_id , tourist_id , visit_date , visit_details | photos : photo_id , tourist_attraction_id , name , description , filename , other_details | staff : staff_id , tourist_attraction_id , name , other_details | tourist_attraction_features : tourist_attraction_id , feature_id	SELECT Name, How_to_Get_There FROM Tourist_Attractions WHERE Tourist_Attraction_ID IN (SELECT Royal_Family_ID FROM Royal_Family)	select t1.royal_family_details , t2.how_to_get_there from royal_family as t1 join tourist_attractions as t2 on t1.royal_family_id = t2.tourist_attraction_id	0
college_3: find the max and min grade point for all letter grade. | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint	SELECT MAX(gradepoint), MIN(gradepoint) FROM Gradeconversion	select max(gradepoint) , min(gradepoint) from gradeconversion	1
tracking_grants_for_research: what details are there on the research staff? list the result in ascending alphabetical order. | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT * FROM `Research_Staff` ORDER BY `staff_details` ASC	select staff_details from research_staff order by staff_details asc	0
"club_1: how many members of club ""bootup baltimore"" are younger than 18? | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position"	SELECT count(*) FROM Student, Member_of_club, Club WHERE Student.StuID = Member_of_club.StuID AND Member_of_club.ClubID = Club.ClubID AND Club.ClubName = 'Bootup Baltimore' AND Student.Age < 18	"select count(*) from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t1.clubname = ""bootup baltimore"" and t3.age < 18"	0
hr_1: what are the department names, cities, and state provinces for each department? | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT DEPARTMENT_NAME, CITY, STATE_PROVINCE FROM departments JOIN locations USING (LOCATION_ID)	select t1.department_name , t2.city , t2.state_province from departments as t1 join locations as t2 on t2.location_id = t1.location_id	1
hr_1: can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above 12000? | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT *  FROM jobs  WHERE job_id IN (     SELECT job_id      FROM employees      WHERE salary > 12000 ) /* SELECT * FROM jobs WHERE job_id IN (SELECT job_id FROM employees WHERE salary > 12000)	select * from job_history as t1 join employees as t2 on t1.employee_id = t2.employee_id where t2.salary >= 12000	0
small_bank_1: what are the names, checking balances, and savings balances for all customers? | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT name, balance as checkingbalance, (SELECT balance FROM savings WHERE custid=c.custid) AS savingsbalance  FROM checking c JOIN accounts a ON a.custid = c.custid	select t2.balance , t3.balance , t1.name from accounts as t1 join checking as t2 on t1.custid = t2.custid join savings as t3 on t1.custid = t3.custid	0
bike_1: what are the start station's name and id for the one that had the most start trips in august? | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT start_station_name, start_station_id FROM trip WHERE start_date LIKE '%2015-08%' GROUP BY start_station_id ORDER BY count(start_station_id) DESC LIMIT 1	"select start_station_name , start_station_id from trip where start_date like ""8/%"" group by start_station_name order by count(*) desc limit 1"	0
csu_1: what campuses opened before 1800? | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty	SELECT Campus FROM Campuses WHERE Year < 1800	select campus from campuses where year < 1800	1
bike_1: what are the dates that had the top 5 cloud cover rates? also tell me the cloud cover rate. | station : id , name , lat , long , dock_count , city , installation_date | status : station_id , bikes_available , docks_available , time | trip : id , duration , start_date , start_station_name , start_station_id , end_date , end_station_name , end_station_id , bike_id , subscription_type , zip_code | weather : date , max_temperature_f , mean_temperature_f , min_temperature_f , max_dew_point_f , mean_dew_point_f , min_dew_point_f , max_humidity , mean_humidity , min_humidity , max_sea_level_pressure_inches , mean_sea_level_pressure_inches , min_sea_level_pressure_inches , max_visibility_miles , mean_visibility_miles , min_visibility_miles , max_wind_speed_mph , mean_wind_speed_mph , max_gust_speed_mph , precipitation_inches , cloud_cover , events , wind_dir_degrees , zip_code	SELECT date, cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5	select date , cloud_cover from weather order by cloud_cover desc limit 5	1
flight_1: what is the salary and name of the employee who has the most number of aircraft certificates? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT name, salary, count(certificate.aid) as num_certificates FROM certificate INNER JOIN employee ON certificate.eid = employee.eid GROUP BY certificate.eid ORDER BY num_certificates DESC LIMIT 1	select t1.name , t1.salary from employee as t1 join certificate as t2 on t1.eid = t2.eid group by t1.eid order by count(*) desc limit 1	0
hr_1: what is all the information about the marketing department? | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT * FROM departments WHERE DEPARTMENT_NAME = 'Marketing'	select * from departments where department_name = 'marketing'	0
customers_and_addresses: find the names of customers who never ordered product latte. | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT customer_name  FROM Customers  WHERE customer_id NOT IN (SELECT customer_id FROM Order_Items WHERE product_id = 3)	select customer_name from customers except select t1.customer_name from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id join order_items as t3 on t2.order_id = t3.order_id join products as t4 on t3.product_id = t4.product_id where t4.product_details = 'latte'	0
activity_1: what are the faculty ids of all the male faculty members? | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT FacID FROM Faculty WHERE Sex = 'M'	select facid from faculty where sex = 'm'	0
manufactory_1: what is all the product data, as well as  each product's manufacturer? | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Products.Code, Products.Name, Products.Price, Manufacturers.Name FROM Products, Manufacturers WHERE Manufacturers.Code = Products.Manufacturer	select * from products as t1 join manufacturers as t2 on t1.manufacturer = t2.code	0
flight_1: what are the names of all aircrafts that can cover more distances than average? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT name FROM aircraft WHERE distance > (SELECT AVG(distance) FROM aircraft)	select name from aircraft where distance > (select avg(distance) from aircraft)	1
department_store: what are the product id and product type of the cheapest product? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT product_id, product_type_code FROM Products ORDER BY product_price ASC LIMIT 1	select product_id , product_type_code from products order by product_price limit 1	1
store_1: how many customers live in prague city? | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	"SELECT COUNT(id) FROM customers WHERE city = ""Prague"""	"select count(*) from customers where city = ""prague"";"	0
manufactory_1: select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order). | manufacturers : code , name , headquarter , founder , revenue | products : code , name , price , manufacturer	SELECT Name, Price FROM Products WHERE Price >= 180 ORDER BY Price DESC, Name ASC	select name , price from products where price >= 180 order by price desc , name asc	1
formula_1: find the id, forename and number of races of all drivers who have at least participated in two races? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	SELECT DISTINCT d.forename, d.driverId, COUNT(r.raceId) AS no_races FROM drivers AS d JOIN results AS r ON r.driverId = d.driverId GROUP BY d.driverId HAVING COUNT(r.raceId) >= 2	select t1.driverid , t1.forename , count(*) from drivers as t1 join results as t2 on t1.driverid = t2.driverid join races as t3 on t2.raceid = t3.raceid group by t1.driverid having count(*) >= 2	1
music_1: what are the names and countries of origin for the artists who produced the top three highly rated songs. | genre : g_name , rating , most_popular_in | artist : artist_name , country , gender , preferred_genre | files : f_id , artist_name , file_size , duration , formats | song : song_name , artist_name , country , f_id , genre_is , rating , languages , releasedate , resolution	SELECT song_name,artist_name,country FROM song ORDER BY rating DESC LIMIT 3	select t1.artist_name , t1.country from artist as t1 join song as t2 on t1.artist_name = t2.artist_name order by t2.rating desc limit 3	0
store_1: a list of the top 10 countries by average invoice size. list country name and average invoice size. | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT country,     ROUND(AVG(total), 2) avg_invoices FROM customers JOIN invoices     ON customers.id = invoices.customer_id GROUP BY country ORDER BY avg_invoices DESC LIMIT 10	select billing_country , avg(total) from invoices group by billing_country order by avg(total) desc limit 10;	0
inn_1: what are the number of rooms for each bed type? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT bedType, COUNT(bedType) AS RoomCount FROM Rooms GROUP BY bedType	select bedtype , count(*) from rooms group by bedtype;	1
tracking_grants_for_research: what is the last date of the staff leaving the projects? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT MAX(date_to) FROM Project_Staff	select date_to from project_staff order by date_to desc limit 1	1
flight_1: show ids for all employees with at least 100000 salary. | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	"SELECT ""eid"" FROM ""employee"" WHERE salary >= 100000"	select eid from employee where salary > 100000	1
department_store: for each product type, return the maximum and minimum price. | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT product_type_code, MAX(product_price), MIN(product_price) FROM Products GROUP BY product_type_code /* product_type_code MAX(product_price) MIN(product_price) Clothes 979.76 541.13 */	select product_type_code , max(product_price) , min(product_price) from products group by product_type_code	1
sports_competition: what are the names and players of all the clubs? | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT c.name, p.name FROM club AS c, player AS p WHERE c.Club_ID = p.Club_ID ORDER BY c.name	select t1.name , t2.player_id from club as t1 join player as t2 on t1.club_id = t2.club_id	0
flight_4: what is the name and city of the airport from most of the routes start? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT airports.name, airports.city, count(routes.dst_apid) FROM airports INNER JOIN routes ON airports.apid = routes.dst_apid GROUP BY routes.dst_apid ORDER BY count(routes.dst_apid) desc limit 1	select t1.name , t1.city , t2.src_apid from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t2.src_apid order by count(*) desc limit 1	0
"icfp_1: how many papers are written by authors from the institution ""university of pennsylvania""? | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder"	"SELECT COUNT(*) FROM papers INNER JOIN authorship ON papers.paperID = authorship.paperID INNER JOIN inst ON authorship.instID = inst.instID WHERE inst.name = ""University of Pennsylvania"""	"select count(distinct t1.title) from papers as t1 join authorship as t2 on t1.paperid = t2.paperid join inst as t3 on t2.instid = t3.instid where t3.name = ""university of pennsylvania"""	0
formula_1: what are the names and years of all races that had a driver with the last name lewis? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	"SELECT races.name, races.year FROM races JOIN results ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.surname = ""Lewis"""	"select t2.name , t2.year from results as t1 join races as t2 on t1.raceid = t2.raceid join drivers as t3 on t1.driverid = t3.driverid where t3.forename = ""lewis"""	0
customers_and_invoices: show order ids and the number of products in each order. | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT oi.order_id AS order_id, COUNT(*) AS number_of_products FROM Order_Items oi GROUP BY oi.order_id	select order_id , count(distinct product_id) from order_items group by order_id	0
sakila_1: count the number of cities in australia. | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT COUNT(*) FROM city WHERE country_id=81	select count(*) from city as t1 join country as t2 on t1.country_id = t2.country_id where t2.country = 'australia'	0
loan_1: find the name and account balance of the customer whose name includes the letter ‘a’. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT cust_name, acc_bal FROM customer WHERE cust_name LIKE '%a%'	select cust_name , acc_bal from customer where cust_name like '%a%'	1
tracking_grants_for_research: what are the send dates for all documents that have a grant amount of more than 5000 and are involved in research? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT sent_date FROM Documents d INNER JOIN Grants g ON d.grant_id = g.grant_id INNER JOIN Organisations o ON o.organisation_id = g.organisation_id WHERE g.grant_amount > 5000 AND o.organisation_type = 'RES'	select t1.sent_date from documents as t1 join grants as t2 on t1.grant_id = t2.grant_id join organisations as t3 on t2.organisation_id = t3.organisation_id join organisation_types as t4 on t3.organisation_type = t4.organisation_type where t2.grant_amount > 5000 and t4.organisation_type_description = 'research'	0
flight_4: how many airports are there per city in the us ordered from most to least? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT count(*) as city_count FROM airports WHERE country = 'United States' GROUP BY city ORDER BY city_count DESC	select count(*) , city from airports where country = 'united states' group by city order by count(*) desc	0
college_1: what are the different locations of the school with the code bus? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	"SELECT DEPT_ADDRESS FROM DEPARTMENT WHERE SCHOOL_CODE = ""BUS"""	select count(distinct dept_address) from department where school_code = 'bus'	0
match_season: show all distinct positions of matches. | country : country_id , country_name , capital , official_native_language | team : team_id , name | match_season : season , player , position , country , team , draft_pick_number , draft_class , college | player : player_id , player , years_played , total_wl , singles_wl , doubles_wl , team	SELECT DISTINCT Position FROM match_season	select distinct position from match_season	1
college_1: how many different locations does each school have? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT SCHOOL_CODE, count(DISTINCT DEPT_ADDRESS) FROM DEPARTMENT GROUP BY SCHOOL_CODE	select count(distinct dept_address) , school_code from department group by school_code	1
cre_docs_and_epenses: count the number of accounts. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details	SELECT COUNT(*) FROM Accounts	select count(*) from accounts	1
hr_1: what are department ids for departments with managers managing more than 3 employees? | regions : region_id , region_name | countries : country_id , country_name , region_id | departments : department_id , department_name , manager_id , location_id | jobs : job_id , job_title , min_salary , max_salary | employees : employee_id , first_name , last_name , email , phone_number , hire_date , job_id , salary , commission_pct , manager_id , department_id | job_history : employee_id , start_date , end_date , job_id , department_id | locations : location_id , street_address , postal_code , city , state_province , country_id	SELECT DISTINCT DEPARTMENT_ID FROM employees GROUP BY DEPARTMENT_ID HAVING COUNT(MANAGER_ID) >= 3	select distinct department_id from employees group by department_id , manager_id having count(employee_id) >= 4	0
college_1: what is the name of department where has the largest number of professors with a ph.d. degree? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME, COUNT(DEPT_NAME) AS TOTAL FROM DEPARTMENT, PROFESSOR WHERE DEPARTMENT.DEPT_CODE = PROFESSOR.DEPT_CODE AND PROF_HIGH_DEGREE = 'Ph.D.' GROUP BY DEPT_NAME ORDER BY TOTAL DESC LIMIT 1	select t2.dept_name , t1.dept_code from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where t1.prof_high_degree = 'ph.d.' group by t1.dept_code order by count(*) desc limit 1	0
game_1: what are the ids of all female students who play football? | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT DISTINCT StuID FROM Student NATURAL JOIN SportsInfo WHERE Sex = 'F' AND SportName = 'Football'	"select stuid from student where sex = 'f' intersect select stuid from sportsinfo where sportname = ""football"""	0
allergy_1: what are the student ids for students over 20 years old? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT StuID FROM Student WHERE Age > 20	select stuid from student where age > 20	1
college_1: what is the name and the average gpa of department whose students have the highest average gpa? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT DEPT_NAME, AVG(STU_GPA) FROM DEPARTMENT INNER JOIN STUDENT ON DEPARTMENT.DEPT_CODE = STUDENT.DEPT_CODE GROUP BY DEPARTMENT.DEPT_CODE ORDER BY AVG(STU_GPA) DESC LIMIT 1	select t2.dept_name , avg(t1.stu_gpa) from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by avg(t1.stu_gpa) desc limit 1	1
small_bank_1: what is the average balance in checking accounts? | accounts : custid , name | savings : custid , balance | checking : custid , balance	SELECT avg(balance) FROM checking	select avg(balance) from checking	1
