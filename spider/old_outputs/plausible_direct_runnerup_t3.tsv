Question	Predicted Parse	Gold Parse	Result
college_1: what is the name of department that has the runner-up number of professors with a ph.d. degree? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT dept_name FROM department INNER JOIN professor ON department.dept_code = professor.dept_code GROUP BY dept_name ORDER BY COUNT(prof_high_degree) DESC LIMIT 1 OFFSET 1	select t_tab.dept_name , t_tab.dept_code from (select t2.dept_name , t1.dept_code , count(*) as t_prop from professor as t1 join department as t2 on t1.dept_code = t2.dept_code where t1.prof_high_degree = 'ph.d.' group by t1.dept_code order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
customers_and_invoices: show the account id with runner-up number of transactions. | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT account_id, COUNT(account_id) AS runner_up_number_of_transactions FROM financial_transactions GROUP BY account_id ORDER BY runner_up_number_of_transactions DESC LIMIT 1 OFFSET 1	select account_id from (select account_id , count(*) as t_prop from financial_transactions group by account_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
tracking_grants_for_research: what is the id of the organization with the runner-up number of outcomes and how many outcomes are there? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT o.organisation_id, COUNT(r.outcome_code) AS number_of_outcomes  FROM organisations o  JOIN projects p ON o.organisation_id = p.organisation_id  JOIN research_outcomes r ON p.project_id = r.project_id  GROUP BY o.organisation_id  ORDER BY number_of_outcomes DESC  LIMIT 1	select t_tab.organisation_id , t_prop from (select t1.organisation_id , count(*) as t_prop from projects as t1 join project_outcomes as t2 on t1.project_id = t2.project_id group by t1.organisation_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
cre_docs_and_epenses: what is the document type code with runner-up number of documents? | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details	SELECT document_type_code, COUNT(document_id) as document_count FROM cre_docs_and_expenses JOIN ref_document_types ON cre_docs_and_expenses.document_type_code=ref_document_types.document_type_code GROUP BY document_type_code ORDER BY document_count DESC LIMIT 1 OFFSET 1	select document_type_code from (select document_type_code , count(*) as t_prop from documents group by document_type_code order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
student_assessment: which course has runner-up number of registered students? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT course_name, COUNT(*) FROM student_course_registrations JOIN courses ON courses.course_id = student_course_registrations.course_id GROUP BY course_name ORDER BY COUNT(*) DESC LIMIT 1,1	select t_tab.course_name from (select t1.course_name , count(*) as t_prop from courses as t1 join student_course_registrations as t2 on t1.course_id = t2.course_id group by t1.course_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
customers_and_invoices: return the last name, id and phone number of the customer who has made the runner-up number of orders. | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT customer_last_name, customer_id, phone_number  FROM customers_and_invoices.customers c  JOIN (SELECT customer_id, COUNT(order_id) AS order_count        FROM customers_and_invoices.orders        GROUP BY customer_id        ORDER BY order_count DESC        LIMIT 1 OFFSET 1) o USING(customer_id)	select t_tab.customer_last_name , t_tab.customer_id , t_tab.phone_number from (select t2.customer_last_name , t1.customer_id , t2.phone_number , count(*) as t_prop from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
college_1: what is the name of the department that has the runner-up number of students enrolled? | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT dept_name  FROM department  WHERE dept_code IN (SELECT dept_code                      FROM student                      GROUP BY dept_code                      HAVING COUNT(*) = (SELECT COUNT(*)                                         FROM student                                         GROUP BY dept_code                                         ORDER BY COUNT(*) DESC                                         LIMIT 1, 1))	select t_tab.dept_name from (select t4.dept_name , count(*) as t_prop from class as t1 join enroll as t2 on t1.class_code = t2.class_code join course as t3 on t1.crs_code = t3.crs_code join department as t4 on t3.dept_code = t4.dept_code group by t3.dept_code order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
game_1: what is the first name and last name of the students who have runner-up number of sports? | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT fname, lname FROM student WHERE stuid IN (SELECT stuid FROM sportsinfo ORDER BY gamesplayed DESC LIMIT 1,1)	select t_tab.fname , t_tab.lname from (select t2.fname , t2.lname , count(*) as t_prop from sportsinfo as t1 join student as t2 on t1.stuid = t2.stuid group by t1.stuid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
store_1: find the full name of employee who supported the runner-up number of customers. | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT CONCAT(first_name, ' ', last_name) AS full_name  FROM employees e  INNER JOIN (SELECT support_rep_id, COUNT(support_rep_id) AS total_customers              FROM customers              GROUP BY support_rep_id              ORDER BY total_customers DESC              LIMIT 1,1) AS c  ON e.id = c.support_rep_id	select t_tab.first_name , t_tab.last_name from (select t1.first_name , t1.last_name , count(*) as t_prop from employees as t1 join customers as t2 on t1.id = t2.support_rep_id group by t1.id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
hospital_1: which department has the runner-up number of employees? | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT d.name, COUNT(p.employeeid) as employee_count FROM department d             INNER JOIN affiliated_with a ON d.departmentid = a.department             INNER JOIN physician p ON a.physician = p.employeeid             GROUP BY d.name             ORDER BY employee_count DESC             LIMIT 1 OFFSET 1	select name from (select name , count(departmentid) as t_prop from department group by departmentid order by count(departmentid) desc limit 2) as t_tab order by t_tab.t_prop limit 1;	0
flight_4: which countries has the runner-up number of airlines? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT country, COUNT(*) AS num_airlines FROM airlines GROUP BY country ORDER BY num_airlines DESC LIMIT 1 OFFSET 1	select country from (select country , count(*) as t_prop from airlines group by country order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
sakila_1: what is the title and id of the film that has the runner-up number of copies in inventory? | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT title, film_id  FROM film  INNER JOIN inventory  ON film.film_id = inventory.film_id  GROUP BY film_id  ORDER BY COUNT(inventory_id) DESC  LIMIT 1 OFFSET 1	select t_tab.title , t_tab.film_id from (select t1.title , t1.film_id , count(*) as t_prop from film as t1 join inventory as t2 on t1.film_id = t2.film_id group by t1.film_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
college_3: which building does the instructor who teaches the runner-up number of courses live in? | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint	SELECT building  FROM faculty  INNER JOIN course ON faculty.facid = course.instructor  GROUP BY building  ORDER BY COUNT(*) DESC  LIMIT 1 OFFSET 1	select t_tab.building from (select t2.building , count(*) as t_prop from course as t1 join faculty as t2 on t1.instructor = t2.facid group by t1.instructor order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
flight_4: what is the name of the airport with the runner-up number of routes that start in china? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT name FROM airports a INNER JOIN routes r on a.apid = r.src_apid WHERE a.country = 'China' GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1 OFFSET 1	select t_tab.name from (select t1.name , count(*) as t_prop from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.country = 'china' group by t1.name order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
customers_card_transactions: what is the customer id with runner-up number of cards, and how many does he have? | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details	SELECT customer_id, COUNT(*) FROM customers_cards GROUP BY customer_id ORDER BY COUNT(*) DESC LIMIT 1 OFFSET 1	select customer_id , t_prop from (select customer_id , count(*) as t_prop from customers_cards group by customer_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
flight_1: what is the salary and name of the employee who has the runner-up number of aircraft certificates? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT e.name, e.salary FROM employee e INNER JOIN certificate c ON e.eid = c.eid GROUP BY e.eid, e.name, e.salary ORDER BY COUNT(*) DESC LIMIT 1, 1	select t_tab.name , t_tab.salary from (select t1.name , t1.salary , count(*) as t_prop from employee as t1 join certificate as t2 on t1.eid = t2.eid group by t1.eid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
college_2: which year had the runner-up number of courses? | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT year, COUNT(*) AS course_count FROM section GROUP BY year ORDER BY course_count DESC LIMIT 1	select year from (select year , count(*) as t_prop from section group by year order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
csu_1: how many faculty lines are there in the university that conferred the runner-up number of degrees in year 2002? | campuses : id , campus , location , county , year | csu_fees : campus , year , campusfee | degrees : year , campus , degrees | discipline_enrollments : campus , discipline , year , undergraduate , graduate | enrollments : campus , year , totalenrollment_ay , fte_ay | faculty : campus , year , faculty	SELECT COUNT(*)  FROM faculty  WHERE year = 2002  AND campus = (SELECT campus FROM degrees WHERE year = 2002 ORDER BY degrees DESC LIMIT 1,1)	select t_tab.faculty from (select t2.faculty , t3.degrees as t_prop from campuses as t1 join faculty as t2 on t1.id = t2.campus join degrees as t3 on t1.id = t3.campus and t2.year = t3.year where t2.year = 2002 order by t3.degrees desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
"club_1: find the club which has the runner-up number of members majoring in ""600"". | student : stuid , lname , fname , age , sex , major , advisor , city_code | club : clubid , clubname , clubdesc , clublocation | member_of_club : stuid , clubid , position"	SELECT C.clubname, COUNT(M.stuid) AS members FROM member_of_club M  JOIN club C ON M.clubid = C.clubid JOIN student S ON S.stuid = M.stuid WHERE S.major = '600' GROUP BY C.clubname ORDER BY members DESC LIMIT 1 OFFSET 1	"select t_tab.clubname from (select t1.clubname , count(*) as t_prop from club as t1 join member_of_club as t2 on t1.clubid = t2.clubid join student as t3 on t2.stuid = t3.stuid where t3.major = ""600"" group by t1.clubname order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1"	0
products_gen_characteristics: what is the characteristic name used by runner-up number of the products? | ref_characteristic_types : characteristic_type_code , characteristic_type_description | ref_colors : color_code , color_description | ref_product_categories : product_category_code , product_category_description , unit_of_measure | characteristics : characteristic_id , characteristic_type_code , characteristic_data_type , characteristic_name , other_characteristic_details | products : product_id , color_code , product_category_code , product_name , typical_buying_price , typical_selling_price , product_description , other_product_details | product_characteristics : product_id , characteristic_id , product_characteristic_value	SELECT characteristic_name FROM characteristics c INNER JOIN product_characteristics pc ON c.characteristic_id = pc.characteristic_id INNER JOIN products p ON pc.product_id = p.product_id ORDER BY COUNT(p.product_id) DESC LIMIT 2,1	select t_tab.characteristic_name from (select t3.characteristic_name , count(*) as t_prop from products as t1 join product_characteristics as t2 on t1.product_id = t2.product_id join characteristics as t3 on t2.characteristic_id = t3.characteristic_id group by t3.characteristic_name order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
wine_1: find the county where produces the runner-up number of wines with score higher than 90. | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT county FROM appellations INNER JOIN wine ON appellations.no = wine.appelation WHERE wine.score > 90 GROUP BY county ORDER BY COUNT(wine.no) DESC LIMIT 1	select t_tab.county from (select t1.county , count(*) as t_prop from appellations as t1 join wine as t2 on t1.appelation = t2.appelation where t2.score > 90 group by t1.county order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
cre_docs_and_epenses: show the statement id and the statement detail for the statement with runner-up number of accounts. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_budget_codes : budget_type_code , budget_type_description | projects : project_id , project_details | documents : document_id , document_type_code , project_id , document_date , document_name , document_description , other_details | statements : statement_id , statement_details | documents_with_expenses : document_id , budget_type_code , document_details | accounts : account_id , statement_id , account_details	SELECT statement_id, statement_details  FROM statements  WHERE statement_id = (SELECT statement_id                        FROM accounts                        GROUP BY statement_id                        ORDER BY COUNT(account_id) DESC                        LIMIT 1,1)	select t_tab.statement_id , t_tab.statement_details from (select t1.statement_id , t2.statement_details , count(*) as t_prop from accounts as t1 join statements as t2 on t1.statement_id = t2.statement_id group by t1.statement_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
activity_1: find the first and last name of the faculty who is involved in the runner-up number of activities. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT fname, lname  FROM faculty  INNER JOIN faculty_participates_in  ON faculty.facid = faculty_participates_in.facid  INNER JOIN (SELECT actid, COUNT(*) AS count              FROM participates_in              GROUP BY actid              ORDER BY count DESC              LIMIT 1 OFFSET 1) tmp  ON faculty_participates_in.actid = tmp.actid	select t_tab.fname , t_tab.lname from (select t1.fname , t1.lname , count(*) as t_prop from faculty as t1 join faculty_participates_in as t2 on t1.facid = t2.facid group by t1.facid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
election: which party has the runner-up number of delegates? | county : county_id , county_name , population , zip_code | party : party_id , year , party , governor , lieutenant_governor , comptroller , attorney_general , us_senate | election : election_id , counties_represented , district , delegate , party , first_elected , committee	SELECT party, COUNT(delegate) AS runner_up_number_of_delegates FROM election GROUP BY party ORDER BY runner_up_number_of_delegates DESC LIMIT 1	select t_tab.party from (select t2.party , count(*) as t_prop from election as t1 join party as t2 on t1.party = t2.party_id group by t1.party order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
sakila_1: what are the title, id, and description of the movie with the runner-up number of actors? | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT title, film_id, description  FROM film  INNER JOIN film_actor ON film_actor.film_id = film.film_id GROUP BY film_id  ORDER BY COUNT(*) DESC  LIMIT 1,1	select t_tab.title , t_tab.film_id , t_tab.description from (select t2.title , t2.film_id , t2.description , count(*) as t_prop from film_actor as t1 join film as t2 on t1.film_id = t2.film_id group by t2.film_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
store_1: which employee manages runner-up number of peoples? list employee's first and last name, and number of people report to that employee. | artists : id , name | sqlite_sequence : name , seq | albums : id , title , artist_id | employees : id , last_name , first_name , title , reports_to , birth_date , hire_date , address , city , state , country , postal_code , phone , fax , email | customers : id , first_name , last_name , company , address , city , state , country , postal_code , phone , fax , email , support_rep_id | genres : id , name | invoices : id , customer_id , invoice_date , billing_address , billing_city , billing_state , billing_country , billing_postal_code , total | media_types : id , name | tracks : id , name , album_id , media_type_id , genre_id , composer , milliseconds , bytes , unit_price | invoice_lines : id , invoice_id , track_id , unit_price , quantity | playlists : id , name | playlist_tracks : playlist_id , track_id	SELECT e.first_name, e.last_name, COUNT(*) AS Report_To_Count  FROM employees e  INNER JOIN employees e2  ON e.id = e2.reports_to  GROUP BY e.id  ORDER BY Report_To_Count DESC  LIMIT 1	select t_tab.first_name , t_tab.last_name , t_prop from (select t2.first_name , t2.last_name , count(t1.reports_to) as t_prop from employees as t1 join employees as t2 on t1.reports_to = t2.id group by t1.reports_to order by count(t1.reports_to) desc limit 2) as t_tab order by t_tab.t_prop limit 1;	0
game_1: which sport has runner-up number of students on scholarship? | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT sportname, COUNT(*) AS runner_up_number  FROM sportsinfo  WHERE onscholarship = 'yes'  GROUP BY sportname  ORDER BY COUNT(*) DESC  LIMIT 1 OFFSET 1	select sportname from (select sportname , count(*) as t_prop from sportsinfo where onscholarship = 'y' group by sportname order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
game_1: show the game name that has runner-up number of hours played. | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT gname FROM video_games  INNER JOIN plays_games  ON video_games.gameid = plays_games.gameid  ORDER BY hours_played DESC  LIMIT 1 OFFSET 1	select gname from (select gname , sum(hours_played) as t_prop from plays_games as t1 join video_games as t2 on t1.gameid = t2.gameid group by t1.gameid order by sum(hours_played) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
icfp_1: find the name of the organization that has published the runner-up number of papers. | inst : instid , name , country | authors : authid , lname , fname | papers : paperid , title | authorship : authid , instid , paperid , authorder	SELECT name FROM inst JOIN authorship ON inst.instid = authorship.instid GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1	select t_tab.name from (select t1.name , count(*) as t_prop from inst as t1 join authorship as t2 on t1.instid = t2.instid join papers as t3 on t2.paperid = t3.paperid group by t1.name order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
activity_1: find the building that has the runner-up number of faculty members. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT building, COUNT(facid) AS total_faculty FROM faculty  JOIN faculty_participates_in ON faculty_participates_in.facid = faculty.facid GROUP BY building ORDER BY total_faculty DESC LIMIT 1	select building from (select building , count(*) as t_prop from faculty group by building order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
allergy_1: which allergy has runner-up number of students affected? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT allergy_type  FROM allergy_1 WHERE allergy_type IN (SELECT allergy                       FROM has_allergy                       GROUP BY allergy                       ORDER BY COUNT(stuid) DESC                       LIMIT 1, 1)	select allergy from (select allergy , count(*) as t_prop from has_allergy group by allergy order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
customers_and_addresses: which product has been ordered runner-up number of times? | addresses : address_id , address_content , city , zip_postcode , state_province_county , country , other_address_details | products : product_id , product_details | customers : customer_id , payment_method , customer_name , date_became_customer , other_customer_details | customer_addresses : customer_id , address_id , date_address_from , address_type , date_address_to | customer_contact_channels : customer_id , channel_code , active_from_date , active_to_date , contact_number | customer_orders : order_id , customer_id , order_status , order_date , order_details | order_items : order_id , product_id , order_quantity	SELECT product_id, COUNT(*) AS runner_up_order_count FROM order_items GROUP BY product_id ORDER BY runner_up_order_count DESC LIMIT 1	select t_tab.product_details from (select t2.product_details , count(*) as t_prop from order_items as t1 join products as t2 on t1.product_id = t2.product_id group by t1.product_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
flight_1: what is the salary and name of the employee who has the runner-up number of certificates on aircrafts with distance more than 5000? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT e.name, e.salary  FROM employee e  INNER JOIN certificate c ON e.eid = c.eid  INNER JOIN aircraft a ON c.aid = a.aid  WHERE a.distance > 5000  GROUP BY e.eid  ORDER BY COUNT(c.aid) DESC  LIMIT 1,1	select t_tab.name from (select t1.name , count(*) as t_prop from employee as t1 join certificate as t2 on t1.eid = t2.eid join aircraft as t3 on t3.aid = t2.aid where t3.distance > 5000 group by t1.eid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
sports_competition: which country participated in the runner-up number of tournament competitions? | club : club_id , name , region , start_year | club_rank : rank , club_id , gold , silver , bronze , total | player : player_id , name , position , club_id , apps , tries , goals , points | competition : competition_id , year , competition_type , country | competition_result : competition_id , club_id_1 , club_id_2 , score	SELECT country  FROM competition  INNER JOIN competition_result  ON competition.competition_id = competition_result.competition_id  GROUP BY country  ORDER BY COUNT(*) DESC  LIMIT 1	select country from (select country , count(*) as t_prop from competition where competition_type = 'tournament' group by country order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
cre_doc_tracking_db: what is the role code with the runner-up number of employees? | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details	SELECT role_code, COUNT(role_code) AS count_role_code FROM employees GROUP BY role_code ORDER BY count_role_code DESC LIMIT 1 OFFSET 1	select role_code from (select role_code , count(*) as t_prop from employees group by role_code order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
apartment_rentals: show the apartment type code that has the runner-up number of total rooms, together with the number of bathrooms and number of bedrooms. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT apartments.apt_type_code, COUNT(rooms.room_count) AS total_rooms, SUM(apartments.bathroom_count) AS total_bathrooms, SUM(apartments.bedroom_count) AS total_bedrooms FROM apartments INNER JOIN apartment_facilities ON apartments.apt_id = apartment_facilities.apt_id INNER JOIN apartment_bookings ON apartments.apt_id = apartment_bookings.apt_id INNER JOIN view_unit_status ON apartments.apt_id = view_unit_status.apt_id WHERE view_unit_status.available_yn = 'Y' GROUP BY apartments.apt_type_code ORDER BY total_rooms DESC LIMIT 1	select apt_type_code , bathroom_count , bedroom_count from (select apt_type_code , bathroom_count , bedroom_count , sum(room_count) as t_prop from apartments group by apt_type_code order by sum(room_count) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
hospital_1: find the name of the nurse who has the runner-up number of appointments. | physician : employeeid , name , position , ssn | department : departmentid , name , head | affiliated_with : physician , department , primaryaffiliation | procedures : code , name , cost | trained_in : physician , treatment , certificationdate , certificationexpires | patient : ssn , name , address , phone , insuranceid , pcp | nurse : employeeid , name , position , registered , ssn | appointment : appointmentid , patient , prepnurse , physician , start , end , examinationroom | medication : code , name , brand , description | prescribes : physician , patient , medication , date , appointment , dose | block : blockfloor , blockcode | room : roomnumber , roomtype , blockfloor , blockcode , unavailable | on_call : nurse , blockfloor , blockcode , oncallstart , oncallend | stay : stayid , patient , room , staystart , stayend | undergoes : patient , procedures , stay , dateundergoes , physician , assistingnurse	SELECT n.name FROM nurse n JOIN appointment a ON n.employeeid = a.prepnurse GROUP BY n.employeeid ORDER BY COUNT(a.appointmentid) DESC LIMIT 1 OFFSET 1	select t_tab.name from (select t1.name , count(*) as t_prop from nurse as t1 join appointment as t2 on t1.employeeid = t2.prepnurse group by t1.employeeid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
sakila_1: return the full name and id of the actor or actress who starred in the runner-up number of films. | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT actor_id, CONCAT(first_name, ' ', last_name) AS full_name  FROM actor  INNER JOIN film_actor ON actor.actor_id=film_actor.actor_id GROUP BY actor.actor_id  ORDER BY COUNT(*) DESC  LIMIT 1	select t_tab.first_name , t_tab.last_name , t_tab.actor_id from (select t2.first_name , t2.last_name , t2.actor_id , count(*) as t_prop from film_actor as t1 join actor as t2 on t1.actor_id = t2.actor_id group by t2.actor_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
allergy_1: which major has runner-up number of students? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT major, COUNT(stuid) AS 'runner-up number of students' FROM student GROUP BY major ORDER BY COUNT(stuid) DESC LIMIT 1,1	select major from (select major , count(*) as t_prop from student group by major order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
flight_4: find the name and city of the airport which is the destination of the runner-up number of routes. | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT name, city FROM airports WHERE apid IN (SELECT dst_apid                FROM routes                ORDER BY COUNT(*) DESC                LIMIT 1 OFFSET 1)	select t_tab.name , t_tab.city , t_tab.dst_apid from (select t1.name , t1.city , t2.dst_apid , count(*) as t_prop from airports as t1 join routes as t2 on t1.apid = t2.dst_apid group by t2.dst_apid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
formula_1: find the id and surname of the driver who participated the runner-up number of races? | circuits : circuitid , circuitref , name , location , country , lat , lng , alt , url | races : raceid , year , round , circuitid , name , date , time , url | drivers : driverid , driverref , number , code , forename , surname , dob , nationality , url | status : statusid , status | seasons : year , url | constructors : constructorid , constructorref , name , nationality , url | constructorstandings : constructorstandingsid , raceid , constructorid , points , position , positiontext , wins | results : resultid , raceid , driverid , constructorid , number , grid , position , positiontext , positionorder , points , laps , time , milliseconds , fastestlap , rank , fastestlaptime , fastestlapspeed , statusid | driverstandings : driverstandingsid , raceid , driverid , points , position , positiontext , wins | constructorresults : constructorresultsid , raceid , constructorid , points , status | qualifying : qualifyid , raceid , driverid , constructorid , number , position , q1 , q2 , q3 | pitstops : raceid , driverid , stop , lap , time , duration , milliseconds | laptimes : raceid , driverid , lap , position , time , milliseconds	SELECT driverid, surname FROM drivers INNER JOIN (SELECT driverid, COUNT(*) AS no_of_races FROM results GROUP BY driverid ORDER BY no_of_races DESC LIMIT 1,1) AS t1 ON drivers.driverid = t1.driverid	select t_tab.driverid , t_tab.surname from (select t1.driverid , t1.surname , count(*) as t_prop from drivers as t1 join results as t2 on t1.driverid = t2.driverid join races as t3 on t2.raceid = t3.raceid group by t1.driverid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
college_2: find the year and semester that offer the runner-up number of courses. | classroom : building , room_number , capacity | department : dept_name , building , budget | course : course_id , title , dept_name , credits | instructor : id , name , dept_name , salary | section : course_id , sec_id , semester , year , building , room_number , time_slot_id | teaches : id , course_id , sec_id , semester , year | student : id , name , dept_name , tot_cred | takes : id , course_id , sec_id , semester , year , grade | advisor : s_id , i_id | time_slot : time_slot_id , day , start_hr , start_min , end_hr , end_min | prereq : course_id , prereq_id	SELECT year, semester, COUNT(*) AS course_count FROM section GROUP BY year, semester ORDER BY course_count DESC LIMIT 1 OFFSET 1	select semester , year from (select semester , year , count(*) as t_prop from section group by semester , year order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
flight_4: find the name of airline which runs the runner-up number of routes. | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT name FROM airlines WHERE alid = ( SELECT alid FROM  (SELECT alid, COUNT(*) AS num_routes FROM routes GROUP BY alid ORDER BY num_routes DESC LIMIT 1 OFFSET 1) AS t1 )	select t_tab.name from (select t1.name , count(*) as t_prop from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t1.name order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
customers_and_invoices: what is the customer last name, id and phone number with runner-up number of orders? | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT customers.customer_last_name, customers.customer_id, customers.phone_number, COUNT(orders.order_id) AS orders_count  FROM customers  INNER JOIN orders  ON customers.customer_id = orders.customer_id  GROUP BY customers.customer_last_name, customers.customer_id, customers.phone_number  ORDER BY orders_count DESC  LIMIT 1	select t_tab.customer_last_name , t_tab.customer_id , t_tab.phone_number from (select t2.customer_last_name , t1.customer_id , t2.phone_number , count(*) as t_prop from orders as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
tracking_grants_for_research: show the role description and the id of the project staff involved in runner-up number of project outcomes? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT p.staff_id, r.role_description  FROM project_staff p  INNER JOIN staff_roles r  ON p.role_code = r.role_code  INNER JOIN project_outcomes o  ON p.project_id = o.project_id  GROUP BY p.staff_id, r.role_description  ORDER BY COUNT(o.outcome_code) DESC  LIMIT 1	select t_tab.role_description , t_tab.staff_id from (select t1.role_description , t2.staff_id , count(*) as t_prop from staff_roles as t1 join project_staff as t2 on t1.role_code = t2.role_code join project_outcomes as t3 on t2.project_id = t3.project_id group by t2.staff_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
customers_card_transactions: what is the card type code with runner-up number of cards? | accounts : account_id , customer_id , account_name , other_account_details | customers : customer_id , customer_first_name , customer_last_name , customer_address , customer_phone , customer_email , other_customer_details | customers_cards : card_id , customer_id , card_type_code , card_number , date_valid_from , date_valid_to , other_card_details | financial_transactions : transaction_id , previous_transaction_id , account_id , card_id , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details	SELECT card_type_code, COUNT(card_type_code)  FROM customers_cards  GROUP BY card_type_code  ORDER BY COUNT(card_type_code) DESC  LIMIT 1 OFFSET 1	select card_type_code from (select card_type_code , count(*) as t_prop from customers_cards group by card_type_code order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
customers_and_invoices: what is the invoice number and invoice date corresponding to the invoice with the runner-up number of transactions? | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT invoice_number, invoice_date FROM invoices WHERE invoice_number = (SELECT invoice_number                         FROM financial_transactions                         GROUP BY invoice_number                         ORDER BY COUNT(*) DESC                         LIMIT 1 OFFSET 1)	select t_tab.invoice_number , t_tab.invoice_date from (select t2.invoice_number , t2.invoice_date , count(*) as t_prop from financial_transactions as t1 join invoices as t2 on t1.invoice_number = t2.invoice_number group by t1.invoice_number order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
flight_1: which origin has runner-up number of flights? | flight : flno , origin , destination , distance , departure_date , arrival_date , price , aid | aircraft : aid , name , distance | employee : eid , name , salary | certificate : eid , aid	SELECT origin, COUNT(*) AS Num_Of_Flights FROM flight_1 GROUP BY origin ORDER BY Num_Of_Flights DESC LIMIT 1,1	select origin from (select origin , count(*) as t_prop from flight group by origin order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
apartment_rentals: which apartment type has the runner-up number of total rooms? return the apartment type code, its number of bathrooms and number of bedrooms. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT a.apt_type_code, a.bathroom_count, a.bedroom_count  FROM apartments a INNER JOIN (SELECT apt_id, COUNT(*) AS total_rooms              FROM apartments             GROUP BY apt_id             ORDER BY total_rooms DESC             LIMIT 1,1) b   ON a.apt_id = b.apt_id	select apt_type_code , bathroom_count , bedroom_count from (select apt_type_code , bathroom_count , bedroom_count , sum(room_count) as t_prop from apartments group by apt_type_code order by sum(room_count) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
college_1: find the name of the department that offers the runner-up number of credits of all classes. | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT dept_name FROM department d INNER JOIN course c ON d.dept_code = c.dept_code GROUP BY dept_name ORDER BY SUM(crs_credit) DESC LIMIT 1	select t_tab.dept_name from (select t3.dept_name , sum(t1.crs_credit) as t_prop from course as t1 join class as t2 on t1.crs_code = t2.crs_code join department as t3 on t1.dept_code = t3.dept_code group by t1.dept_code order by sum(t1.crs_credit) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
allergy_1: which advisor has runner-up number of students? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT advisor, COUNT(stuid) AS 'Runner-up Number of Students' FROM student GROUP BY advisor ORDER BY COUNT(stuid) DESC LIMIT 1	select advisor from (select advisor , count(*) as t_prop from student group by advisor order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
flight_4: find the busiest destination airport that runs runner-up number of routes in china. | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT a.name, COUNT(r.rid) AS num_routes FROM airports a INNER JOIN routes r ON a.apid = r.dst_apid INNER JOIN airlines l ON l.alid = r.alid WHERE l.country = 'China' GROUP BY a.name ORDER BY num_routes DESC LIMIT 1	select t_tab.name from (select t1.name , count(*) as t_prop from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.country = 'china' group by t1.name order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
allergy_1: which allergy type has runner-up number of allergies? | allergy_type : allergy , allergytype | has_allergy : stuid , allergy | student : stuid , lname , fname , age , sex , major , advisor , city_code	SELECT allergy_type, COUNT(allergy) AS number_of_allergies FROM allergy_1 GROUP BY allergy_type ORDER BY number_of_allergies DESC LIMIT 1 OFFSET 1	select allergytype from (select allergytype , count(*) as t_prop from allergy_type group by allergytype order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
game_1: which game type has runner-up number of games? | student : stuid , lname , fname , age , sex , major , advisor , city_code | video_games : gameid , gname , gtype | plays_games : stuid , gameid , hours_played | sportsinfo : stuid , sportname , hoursperweek , gamesplayed , onscholarship	SELECT gtype, COUNT(*) as GamesPlayed  FROM video_games  GROUP BY gtype  ORDER BY GamesPlayed DESC  LIMIT 1 OFFSET 1	select gtype from (select gtype , count(*) as t_prop from video_games group by gtype order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
loan_1: find the branch name of the bank that has the runner-up number of customers. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT bname FROM loan_1 WHERE no_of_customers IN (SELECT MAX(no_of_customers) FROM loan_1 WHERE no_of_customers < (SELECT MAX(no_of_customers) FROM loan_1))	select bname from (select bname , no_of_customers as t_prop from bank order by no_of_customers desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
flight_4: find the name and city of the airport which is the source for the runner-up number of flight routes. | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT name, city FROM airports WHERE apid = (SELECT src_apid               FROM routes               GROUP BY src_apid               ORDER BY COUNT(*) DESC               LIMIT 1 OFFSET 1)	select t_tab.name , t_tab.city , t_tab.src_apid from (select t1.name , t1.city , t2.src_apid , count(*) as t_prop from airports as t1 join routes as t2 on t1.apid = t2.src_apid group by t2.src_apid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
tracking_orders: what is the name of the customer who has the runner-up number of orders? | customers : customer_id , customer_name , customer_details | invoices : invoice_number , invoice_date , invoice_details | orders : order_id , customer_id , order_status , date_order_placed , order_details | products : product_id , product_name , product_details | order_items : order_item_id , product_id , order_id , order_item_status , order_item_details | shipments : shipment_id , order_id , invoice_number , shipment_tracking_number , shipment_date , other_shipment_details | shipment_items : shipment_id , order_item_id	SELECT customer_name  FROM customers  JOIN orders ON customers.customer_id = orders.customer_id  GROUP BY customers.customer_id  ORDER BY COUNT(orders.order_id) DESC  LIMIT 1,1	select t_tab.customer_name from (select t1.customer_name , count(*) as t_prop from customers as t1 join orders as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
tracking_grants_for_research: for each staff id, what is the description of the role that is involved with the runner-up number of projects? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT s.staff_id, r.role_description FROM staff_roles r JOIN research_staff s ON s.role_code = r.role_code JOIN project_staff ps ON ps.staff_id = s.staff_id GROUP BY s.staff_id, r.role_description ORDER BY COUNT(ps.project_id) DESC LIMIT 1	select t_tab.role_description , t_tab.staff_id from (select t1.role_description , t2.staff_id , count(*) as t_prop from staff_roles as t1 join project_staff as t2 on t1.role_code = t2.role_code join project_outcomes as t3 on t2.project_id = t3.project_id group by t2.staff_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
baseball_1: what is the full name and id of the college with the runner-up number of baseball players? | all_star : player_id , year , game_num , game_id , team_id , league_id , gp , starting_pos | appearances : year , team_id , league_id , player_id , g_all , gs , g_batting , g_defense , g_p , g_c , g_1b , g_2b , g_3b , g_ss , g_lf , g_cf , g_rf , g_of , g_dh , g_ph , g_pr | manager_award : player_id , award_id , year , league_id , tie , notes | player_award : player_id , award_id , year , league_id , tie , notes | manager_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | player_award_vote : award_id , year , league_id , player_id , points_won , points_max , votes_first | batting : player_id , year , stint , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | batting_postseason : year , round , player_id , team_id , league_id , g , ab , r , h , double , triple , hr , rbi , sb , cs , bb , so , ibb , hbp , sh , sf , g_idp | player_college : player_id , college_id , year | fielding : player_id , year , stint , team_id , league_id , pos , g , gs , inn_outs , po , a , e , dp , pb , wp , sb , cs , zr | fielding_outfield : player_id , year , stint , glf , gcf , grf | fielding_postseason : player_id , year , team_id , league_id , round , pos , g , gs , inn_outs , po , a , e , dp , tp , pb , sb , cs | hall_of_fame : player_id , yearid , votedby , ballots , needed , votes , inducted , category , needed_note | home_game : year , league_id , team_id , park_id , span_first , span_last , games , openings , attendance | manager : player_id , year , team_id , league_id , inseason , g , w , l , rank , plyr_mgr | manager_half : player_id , year , team_id , league_id , inseason , half , g , w , l , rank | player : player_id , birth_year , birth_month , birth_day , birth_country , birth_state , birth_city , death_year , death_month , death_day , death_country , death_state , death_city , name_first , name_last , name_given , weight , height , bats , throws , debut , final_game , retro_id , bbref_id | park : park_id , park_name , park_alias , city , state , country | pitching : player_id , year , stint , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | pitching_postseason : player_id , year , round , team_id , league_id , w , l , g , gs , cg , sho , sv , ipouts , h , er , hr , bb , so , baopp , era , ibb , wp , hbp , bk , bfp , gf , r , sh , sf , g_idp | salary : year , team_id , league_id , player_id , salary | college : college_id , name_full , city , state , country | postseason : year , round , team_id_winner , league_id_winner , team_id_loser , league_id_loser , wins , losses , ties | team : year , league_id , team_id , franchise_id , div_id , rank , g , ghome , w , l , div_win , wc_win , lg_win , ws_win , r , ab , h , double , triple , hr , bb , so , sb , cs , hbp , sf , ra , er , era , cg , sho , sv , ipouts , ha , hra , bba , soa , e , dp , fp , name , park , attendance , bpf , ppf , team_id_br , team_id_lahman45 , team_id_retro | team_franchise : franchise_id , franchise_name , active , na_assoc | team_half : year , league_id , team_id , half , div_id , div_win , rank , g , w , l	SELECT college_id, name_full FROM college ORDER BY COUNT(player_id) DESC LIMIT 1 OFFSET 1	select t_tab.name_full , t_tab.college_id from (select t1.name_full , t1.college_id , count(*) as t_prop from college as t1 join player_college as t2 on t1.college_id = t2.college_id group by t1.college_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1;	0
tracking_grants_for_research: what is the organisation type and id of the organisation which has the runner-up number of research staff? | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT organisation_type, organisation_id  FROM organisations JOIN research_staff  ON organisations.organisation_id = research_staff.employer_organisation_id  GROUP BY organisation_type, organisation_id  ORDER BY COUNT(*) DESC  LIMIT 1 OFFSET 1	select t_tab.organisation_type , t_tab.organisation_id from (select t1.organisation_type , t1.organisation_id , count(*) as t_prop from organisations as t1 join research_staff as t2 on t1.organisation_id = t2.employer_organisation_id group by t1.organisation_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
student_1: find the name of the teacher who teaches the runner-up number of students. | list : lastname , firstname , grade , classroom | teachers : lastname , firstname , classroom	SELECT teachers.lastname, teachers.firstname  FROM student_1  JOIN teachers ON student_1.classroom = teachers.classroom GROUP BY teachers.lastname, teachers.firstname ORDER BY COUNT(*) DESC LIMIT 1 OFFSET 1	select t_tab.firstname , t_tab.lastname from (select t2.firstname , t2.lastname , count(*) as t_prop from list as t1 join teachers as t2 on t1.classroom = t2.classroom group by t2.firstname , t2.lastname order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
voter_2: find the major that is studied by the runner-up number of students. | student : stuid , lname , fname , age , sex , major , advisor , city_code | voting_record : stuid , registration_date , election_cycle , president_vote , vice_president_vote , secretary_vote , treasurer_vote , class_president_vote , class_senator_vote	SELECT major, COUNT(*) as num_students FROM student GROUP BY major ORDER BY num_students DESC LIMIT 1	select major from (select major , count(*) as t_prop from student group by major order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
flight_4: what is the name of the airport that is the destination of the runner-up number of routes that start in china? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT a.name FROM airports a  JOIN routes r ON a.apid = r.dst_apid JOIN airlines al ON r.alid = al.alid WHERE r.src_ap IN (SELECT a.name                     FROM airports a                     WHERE a.country = 'China') GROUP BY a.name ORDER BY COUNT(*) DESC LIMIT 1 OFFSET 1	select t_tab.name from (select t1.name , count(*) as t_prop from airports as t1 join routes as t2 on t1.apid = t2.dst_apid where t1.country = 'china' group by t1.name order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
apartment_rentals: return the apartment number with the runner-up number of bedrooms. | apartment_buildings : building_id , building_short_name , building_full_name , building_description , building_address , building_manager , building_phone | apartments : apt_id , building_id , apt_type_code , apt_number , bathroom_count , bedroom_count , room_count | apartment_facilities : apt_id , facility_code | guests : guest_id , gender_code , guest_first_name , guest_last_name , date_of_birth | apartment_bookings : apt_booking_id , apt_id , guest_id , booking_status_code , booking_start_date , booking_end_date | view_unit_status : apt_id , apt_booking_id , status_date , available_yn	SELECT apt_number, bedroom_count  FROM apartments  ORDER BY bedroom_count DESC  LIMIT 1 OFFSET 1	select apt_number from (select apt_number , bedroom_count as t_prop from apartments order by bedroom_count desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
wine_1: what is the area of the appelation that produces the runner-up number of wines before the year of 2010? | grapes : id , grape , color | appellations : no , appelation , county , state , area , isava | wine : no , grape , winery , appelation , state , name , year , price , score , cases , drink	SELECT area  FROM appellations  INNER JOIN wine  ON appellations.appelation = wine.appelation  WHERE wine.year < 2010  GROUP BY area  ORDER BY COUNT(*) DESC  LIMIT 1	select t_tab.area from (select t1.area , count(*) as t_prop from appellations as t1 join wine as t2 on t1.appelation = t2.appelation group by t2.appelation having t2.year < 2010 order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
college_1: find the name and address of the department that has the runner-up number of students. | class : class_code , crs_code , class_section , class_time , class_room , prof_num | course : crs_code , dept_code , crs_description , crs_credit | department : dept_code , dept_name , school_code , emp_num , dept_address , dept_extension | employee : emp_num , emp_lname , emp_fname , emp_initial , emp_jobcode , emp_hiredate , emp_dob | enroll : class_code , stu_num , enroll_grade | professor : emp_num , dept_code , prof_office , prof_extension , prof_high_degree | student : stu_num , stu_lname , stu_fname , stu_init , stu_dob , stu_hrs , stu_class , stu_gpa , stu_transfer , dept_code , stu_phone , prof_num	SELECT dept_name, dept_address FROM department WHERE dept_code = (SELECT dept_code FROM student                    GROUP BY dept_code                    ORDER BY COUNT(*) DESC                    LIMIT 1, 1)	select t_tab.dept_name , t_tab.dept_address from (select t2.dept_name , t2.dept_address , count(*) as t_prop from student as t1 join department as t2 on t1.dept_code = t2.dept_code group by t1.dept_code order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
department_store: what are the name, phone number and email address of the customer who made the runner-up number of orders? | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT customer_name, customer_phone, customer_email FROM customers c JOIN ( SELECT customer_id, COUNT(*) as total_orders FROM customer_orders GROUP BY customer_id ORDER BY total_orders DESC LIMIT 1, 1 ) co ON c.customer_id = co.customer_id	select t_tab.customer_name , t_tab.customer_phone , t_tab.customer_email from (select t1.customer_name , t1.customer_phone , t1.customer_email , count(*) as t_prop from customers as t1 join customer_orders as t2 on t1.customer_id = t2.customer_id group by t2.customer_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
cre_doc_tracking_db: find the code of the location with the runner-up number of documents. | ref_document_types : document_type_code , document_type_name , document_type_description | ref_calendar : calendar_date , day_number | ref_locations : location_code , location_name , location_description | roles : role_code , role_name , role_description | all_documents : document_id , date_stored , document_type_code , document_name , document_description , other_details | employees : employee_id , role_code , employee_name , gender_mfu , date_of_birth , other_details | document_locations : document_id , location_code , date_in_location_from , date_in_locaton_to | documents_to_be_destroyed : document_id , destruction_authorised_by_employee_id , destroyed_by_employee_id , planned_destruction_date , actual_destruction_date , other_details	SELECT location_code FROM ref_locations WHERE location_code IN (SELECT location_code                         FROM document_locations                         GROUP BY location_code                         ORDER BY COUNT(document_id) DESC                          LIMIT 1 OFFSET 1)	select location_code from (select location_code , count(*) as t_prop from document_locations group by location_code order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
flight_4: find the names of the top 10 airlines that operate the runner-up number of routes. | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT al.name, COUNT(r.rid)  FROM airlines al  INNER JOIN routes r  ON al.alid = r.alid  GROUP BY al.name  ORDER BY COUNT(r.rid) DESC  LIMIT 10	select t_tab.name , t_tab.alid from (select t1.name , t2.alid , count(*) as t_prop from airlines as t1 join routes as t2 on t1.alid = t2.alid group by t2.alid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 10	0
college_3: give the building that the instructor who teaches the runner-up number of courses lives in. | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building | department : dno , division , dname , room , building , dphone | member_of : facid , dno , appt_type | course : cid , cname , credits , instructor , days , hours , dno | minor_in : stuid , dno | enrolled_in : stuid , cid , grade | gradeconversion : lettergrade , gradepoint	SELECT building  FROM faculty  WHERE facid IN (SELECT instructor                  FROM course                  GROUP BY instructor                  ORDER BY COUNT(*) DESC                  LIMIT 1 OFFSET 1)	select t_tab.building from (select t2.building , count(*) as t_prop from course as t1 join faculty as t2 on t1.instructor = t2.facid group by t1.instructor order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
sakila_1: which film has the runner-up number of actors or actresses? list the film name, film id and description. | actor : actor_id , first_name , last_name , last_update | address : address_id , address , address2 , district , city_id , postal_code , phone , last_update | category : category_id , name , last_update | city : city_id , city , country_id , last_update | country : country_id , country , last_update | customer : customer_id , store_id , first_name , last_name , email , address_id , active , create_date , last_update | film : film_id , title , description , release_year , language_id , original_language_id , rental_duration , rental_rate , length , replacement_cost , rating , special_features , last_update | film_actor : actor_id , film_id , last_update | film_category : film_id , category_id , last_update | film_text : film_id , title , description | inventory : inventory_id , film_id , store_id , last_update | language : language_id , name , last_update | payment : payment_id , customer_id , staff_id , rental_id , amount , payment_date , last_update | rental : rental_id , rental_date , inventory_id , customer_id , return_date , staff_id , last_update | staff : staff_id , first_name , last_name , address_id , picture , email , store_id , active , username , password , last_update | store : store_id , manager_staff_id , address_id , last_update	SELECT title, film_id, description  FROM film  INNER JOIN film_actor USING (film_id)  GROUP BY film_id  ORDER BY COUNT(*) DESC  LIMIT 1,1	select t_tab.title , t_tab.film_id , t_tab.description from (select t2.title , t2.film_id , t2.description , count(*) as t_prop from film_actor as t1 join film as t2 on t1.film_id = t2.film_id group by t2.film_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
flight_4: find the busiest source airport that runs runner-up number of routes in china. | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT src_ap, COUNT(rid) AS routes_count  FROM flight_4.routes  JOIN flight_4.airports ON flight_4.airports.apid = flight_4.routes.src_apid  WHERE flight_4.airports.country = 'China'  GROUP BY src_ap  ORDER BY routes_count DESC  LIMIT 1 OFFSET 1	select t_tab.name from (select t1.name , count(*) as t_prop from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.country = 'china' group by t1.name order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
department_store: return the average total amount purchased and total value purchased for the supplier who supplies the runner-up number of products. | addresses : address_id , address_details | staff : staff_id , staff_gender , staff_name | suppliers : supplier_id , supplier_name , supplier_phone | department_store_chain : dept_store_chain_id , dept_store_chain_name | customers : customer_id , payment_method_code , customer_code , customer_name , customer_address , customer_phone , customer_email | products : product_id , product_type_code , product_name , product_price | supplier_addresses : supplier_id , address_id , date_from , date_to | customer_addresses : customer_id , address_id , date_from , date_to | customer_orders : order_id , customer_id , order_status_code , order_date | department_stores : dept_store_id , dept_store_chain_id , store_name , store_address , store_phone , store_email | departments : department_id , dept_store_id , department_name | order_items : order_item_id , order_id , product_id | product_suppliers : product_id , supplier_id , date_supplied_from , date_supplied_to , total_amount_purchased , total_value_purchased | staff_department_assignments : staff_id , department_id , date_assigned_from , job_title_code , date_assigned_to	SELECT AVG(total_amount_purchased) AS avg_total_amount_purchased, AVG(total_value_purchased) AS avg_total_value_purchased  FROM product_suppliers ps INNER JOIN (SELECT supplier_id, COUNT(product_id) AS n_products              FROM product_suppliers              GROUP BY supplier_id              ORDER BY n_products DESC              LIMIT 1,1) AS ps2  ON ps.supplier_id = ps2.supplier_id	select avg(total_amount_purchased) , avg(total_value_purchased) from product_suppliers where supplier_id = (select supplier_id from (select supplier_id , count(*) as t_prop from product_suppliers group by supplier_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1)	0
dorm_1: find the first name of students who are living in the dorm that has runner-up number of amenities. | student : stuid , lname , fname , age , sex , major , advisor , city_code | dorm : dormid , dorm_name , student_capacity , gender | dorm_amenity : amenid , amenity_name | has_amenity : dormid , amenid | lives_in : stuid , dormid , room_number	SELECT fname  FROM student  JOIN lives_in ON student.stuid = lives_in.stuid  JOIN dorm ON lives_in.dormid = dorm.dormid  JOIN has_amenity ON dorm.dormid = has_amenity.dormid  GROUP BY dorm.dormid  HAVING COUNT(has_amenity.amenid) = (SELECT MAX(cnt) FROM (SELECT COUNT(has_amenity.amenid) cnt FROM has_amenity GROUP BY has_amenity.dormid) t) - 1	select t1.fname from student as t1 join lives_in as t2 on t1.stuid = t2.stuid where t2.dormid in (select t_tab.dormid from (select t2.dormid , count(*) as t_prop from dorm as t3 join has_amenity as t4 on t3.dormid = t4.dormid join dorm_amenity as t5 on t4.amenid = t5.amenid group by t3.dormid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1)	0
activity_1: find the name of the activity that has the runner-up number of student participants. | activity : actid , activity_name | participates_in : stuid , actid | faculty_participates_in : facid , actid | student : stuid , lname , fname , age , sex , major , advisor , city_code | faculty : facid , lname , fname , rank , sex , phone , room , building	SELECT activity_name FROM activity_1 WHERE actid IN (SELECT actid FROM participates_in GROUP BY actid ORDER BY COUNT(stuid) DESC LIMIT 1 OFFSET 1)	select t_tab.activity_name from (select t1.activity_name , count(*) as t_prop from activity as t1 join participates_in as t2 on t1.actid = t2.actid group by t1.actid order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
loan_1: find the state which has the runner-up number of customers. | bank : branch_id , bname , no_of_customers , city , state | customer : cust_id , cust_name , acc_type , acc_bal , no_of_loans , credit_score , branch_id , state | loan : loan_id , loan_type , cust_id , branch_id , amount	SELECT state, COUNT(*) AS num_customers  FROM loan_1.customer  GROUP BY state ORDER BY num_customers DESC LIMIT 1 OFFSET 1	select state from (select state , sum(no_of_customers) as t_prop from bank group by state order by sum(no_of_customers) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
inn_1: which room has the runner-up number of reservations? | rooms : roomid , roomname , beds , bedtype , maxoccupancy , baseprice , decor | reservations : code , room , checkin , checkout , rate , lastname , firstname , adults , kids	SELECT roomname, COUNT(*) AS Reservation_Count  FROM inn_1.rooms  JOIN inn_1.reservations ON rooms.roomid = reservations.room  GROUP BY roomname ORDER BY Reservation_Count DESC LIMIT 1 OFFSET 1	select t_tab.roomname from (select t2.roomname , count(*) as t_prop from reservations as t1 join rooms as t2 on t1.room = t2.roomid group by t1.room order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1;	0
student_assessment: what is detail of the student who registered the runner-up number of courses? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT first_name,middle_name,last_name,cell_mobile_number,email_address,login_name,password FROM students s INNER JOIN people p ON s.student_id = p.person_id INNER JOIN student_course_registrations scr ON s.student_id = scr.student_id GROUP BY s.student_id ORDER BY COUNT(scr.course_id) DESC LIMIT 1	select t_tab.student_details from (select t1.student_details , count(*) as t_prop from students as t1 join student_course_registrations as t2 on t1.student_id = t2.student_id group by t1.student_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
tracking_grants_for_research: which organisation hired the runner-up number of research staff? list the organisation id, type and detail. | document_types : document_type_code , document_description | documents : document_id , document_type_code , grant_id , sent_date , response_received_date , other_details | grants : grant_id , organisation_id , grant_amount , grant_start_date , grant_end_date , other_details | organisation_types : organisation_type , organisation_type_description | organisations : organisation_id , organisation_type , organisation_details | project_outcomes : project_id , outcome_code , outcome_details | project_staff : staff_id , project_id , role_code , date_from , date_to , other_details | projects : project_id , organisation_id , project_details | research_outcomes : outcome_code , outcome_description | research_staff : staff_id , employer_organisation_id , staff_details | staff_roles : role_code , role_description | tasks : task_id , project_id , task_details , eg agree objectives	SELECT organisation_id, organisation_type, organisation_details FROM organisations  INNER JOIN research_staff ON organisations.organisation_id = research_staff.employer_organisation_id GROUP BY organisation_id ORDER BY COUNT(*) DESC LIMIT 1	select t_tab.organisation_id , t_tab.organisation_type , t_tab.organisation_details from (select t1.organisation_id , t1.organisation_type , t1.organisation_details , count(*) as t_prop from organisations as t1 join research_staff as t2 on t1.organisation_id = t2.employer_organisation_id group by t1.organisation_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
customers_and_invoices: what is the customer id, first and last name with runner-up number of accounts. | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT customers.customer_id, customers.customer_first_name, customers.customer_last_name FROM customers INNER JOIN accounts ON customers.customer_id = accounts.customer_id GROUP BY customers.customer_id, customers.customer_first_name, customers.customer_last_name ORDER BY COUNT(accounts.account_id) DESC LIMIT 1,1	select t_tab.customer_id , t_tab.customer_first_name , t_tab.customer_last_name from (select t1.customer_id , t2.customer_first_name , t2.customer_last_name , count(*) as t_prop from accounts as t1 join customers as t2 on t1.customer_id = t2.customer_id group by t1.customer_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
student_assessment: what are the details of the student who registered for the runner-up number of courses? | addresses : address_id , line_1 , line_2 , city , zip_postcode , state_province_county , country | people : person_id , first_name , middle_name , last_name , cell_mobile_number , email_address , login_name , password | students : student_id , student_details | courses : course_id , course_name , course_description , other_details | people_addresses : person_address_id , person_id , address_id , date_from , date_to | student_course_registrations : student_id , course_id , registration_date | student_course_attendance : student_id , course_id , date_of_attendance | candidates : candidate_id , candidate_details | candidate_assessments : candidate_id , qualification , assessment_date , asessment_outcome_code	SELECT s.student_id, p.first_name, p.middle_name, p.last_name, p.cell_mobile_number, p.email_address, p.login_name, p.password  FROM students s  INNER JOIN people_addresses pa ON s.student_id = pa.person_id  INNER JOIN people p ON pa.person_id = p.person_id  INNER JOIN student_course_registrations scr ON s.student_id = scr.student_id ORDER BY COUNT(scr.course_id) DESC  LIMIT 1	select t_tab.student_details from (select t1.student_details , count(*) as t_prop from students as t1 join student_course_registrations as t2 on t1.student_id = t2.student_id group by t1.student_id order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
customers_and_invoices: what is the invoice number and invoice date for the invoice with runner-up number of transactions? | customers : customer_id , customer_first_name , customer_middle_initial , customer_last_name , gender , email_address , login_name , login_password , phone_number , town_city , state_county_province , country | orders : order_id , customer_id , date_order_placed , order_details | invoices : invoice_number , order_id , invoice_date | accounts : account_id , customer_id , date_account_opened , account_name , other_account_details | product_categories : production_type_code , product_type_description , vat_rating | products : product_id , parent_product_id , production_type_code , unit_price , product_name , product_color , product_size | financial_transactions : transaction_id , account_id , invoice_number , transaction_type , transaction_date , transaction_amount , transaction_comment , other_transaction_details | order_items : order_item_id , order_id , product_id , product_quantity , other_order_item_details | invoice_line_items : order_item_id , invoice_number , product_id , product_title , product_quantity , product_price , derived_product_cost , derived_vat_payable , derived_total_cost	SELECT invoice_number, invoice_date FROM invoices WHERE invoice_number = (SELECT invoice_number FROM financial_transactions GROUP BY invoice_number ORDER BY COUNT(*) DESC LIMIT 1 OFFSET 1)	select t_tab.invoice_number , t_tab.invoice_date from (select t2.invoice_number , t2.invoice_date , count(*) as t_prop from financial_transactions as t1 join invoices as t2 on t1.invoice_number = t2.invoice_number group by t1.invoice_number order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	1
flight_4: which countries has the runner-up number of airlines whose active status is 'y'? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT country, COUNT(*) FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1 OFFSET 1	select country from (select country , count(*) as t_prop from airlines where active = 'y' group by country order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
driving_school: which city has runner-up number of customers? | addresses : address_id , line_1_number_building , city , zip_postcode , state_province_county , country | staff : staff_id , staff_address_id , nickname , first_name , middle_name , last_name , date_of_birth , date_joined_staff , date_left_staff | vehicles : vehicle_id , vehicle_details | customers : customer_id , customer_address_id , customer_status_code , date_became_customer , date_of_birth , first_name , last_name , amount_outstanding , email_address , phone_number , cell_mobile_phone_number | customer_payments : customer_id , datetime_payment , payment_method_code , amount_payment | lessons : lesson_id , customer_id , lesson_status_code , staff_id , vehicle_id , lesson_date , lesson_time , price	SELECT city, COUNT(customer_id) AS customer_count  FROM driving_school.addresses AS a  INNER JOIN driving_school.customers AS c  ON a.address_id = c.customer_address_id  GROUP BY city  ORDER BY customer_count DESC  LIMIT 1 OFFSET 1	select t_tab.city from (select t2.city , count(*) as t_prop from customers as t1 join addresses as t2 on t1.customer_address_id = t2.address_id group by t2.city order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1;	0
flight_4: what is the name of the country with the runner-up number of home airlines? | routes : rid , dst_apid , dst_ap , src_apid , src_ap , alid , airline , codeshare | airports : apid , name , city , country , x , y , elevation , iata , icao | airlines : alid , name , iata , icao , callsign , country , active	SELECT country, COUNT(*) AS num_airlines FROM airlines GROUP BY country ORDER BY num_airlines DESC LIMIT 1 OFFSET 1	select country from (select country , count(*) as t_prop from airlines group by country order by count(*) desc limit 2) as t_tab order by t_tab.t_prop limit 1	0
